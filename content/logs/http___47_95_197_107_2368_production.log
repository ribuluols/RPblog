{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"2e479f40-a4ae-11e7-ad29-7b3837c864ae","userId":null},"url":"/?nsukey=o85Kvugp%2FzuPjeoq%2F8rxbpmFuLCvbfw%2BVel%2FVF4oe4YjfmplO1zT%2Bpbhr1K5SBxidoTNqO0zY92q4m7fefYGmS0A9DgTIf9EcSq0k2Y%2FZh9lAjfLnNL4iwPCXpfaJOoO5qV3E2r6Qi81bUkfEBE%2Br9rMtx%2Bhw8VmXR3tcCtTnfA2inn7r4Xr08pA8ihKffHu","method":"GET","originalUrl":"/?nsukey=o85Kvugp%2FzuPjeoq%2F8rxbpmFuLCvbfw%2BVel%2FVF4oe4YjfmplO1zT%2Bpbhr1K5SBxidoTNqO0zY92q4m7fefYGmS0A9DgTIf9EcSq0k2Y%2FZh9lAjfLnNL4iwPCXpfaJOoO5qV3E2r6Qi81bUkfEBE%2Br9rMtx%2Bhw8VmXR3tcCtTnfA2inn7r4Xr08pA8ihKffHu","params":{},"headers":{"x-forwarded-for":"14.17.37.68","x-real-ip":"14.17.37.68","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8","accept-encoding":"gzip","user-agent":"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/534.13 (KHTML, like Gecko) Chrome/9.0.597.107 Safari/534.13","x-busid":"0","x-openfrequencylimit":"0","x-openshield":"0","x-requestfrom":"0"},"body":{},"query":{"nsukey":"o85Kvugp/zuPjeoq/8rxbpmFuLCvbfw+Vel/VF4oe4YjfmplO1zT+pbhr1K5SBxidoTNqO0zY92q4m7fefYGmS0A9DgTIf9EcSq0k2Y/Zh9lAjfLnNL4iwPCXpfaJOoO5qV3E2r6Qi81bUkfEBE+r9rMtx+hw8VmXR3tcCtTnfA2inn7r4Xr08pA8ihKffHu"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"20b1-qt7RHaZA7PxPQZjB5hbMY4mYxZU\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"83ms"},"msg":"","time":"2017-09-29T00:36:06.666Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"2ed53940-a4ae-11e7-ad29-7b3837c864ae","userId":null},"url":"/?nsukey=o85Kvugp%2FzuPjeoq%2F8rxbpmFuLCvbfw%2BVel%2FVF4oe4YjfmplO1zT%2Bpbhr1K5SBxidoTNqO0zY92q4m7fefYGmS0A9DgTIf9EcSq0k2Y%2FZh9lAjfLnNL4iwPCXpfaJOoO5qV3E2r6Qi81bUkfEBE%2Br9rMtx%2Bhw8VmXR3tcCtTnfA2inn7r4Xr08pA8ihKffHu","method":"GET","originalUrl":"/?nsukey=o85Kvugp%2FzuPjeoq%2F8rxbpmFuLCvbfw%2BVel%2FVF4oe4YjfmplO1zT%2Bpbhr1K5SBxidoTNqO0zY92q4m7fefYGmS0A9DgTIf9EcSq0k2Y%2FZh9lAjfLnNL4iwPCXpfaJOoO5qV3E2r6Qi81bUkfEBE%2Br9rMtx%2Bhw8VmXR3tcCtTnfA2inn7r4Xr08pA8ihKffHu","params":{},"headers":{"x-forwarded-for":"113.108.11.50","x-real-ip":"113.108.11.50","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8","accept-charset":"iso-8859-1,*,utf-8","accept-encoding":"gzip","accept-language":"en-us,en","user-agent":"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36","useragent":"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36"},"body":{},"query":{"nsukey":"o85Kvugp/zuPjeoq/8rxbpmFuLCvbfw+Vel/VF4oe4YjfmplO1zT+pbhr1K5SBxidoTNqO0zY92q4m7fefYGmS0A9DgTIf9EcSq0k2Y/Zh9lAjfLnNL4iwPCXpfaJOoO5qV3E2r6Qi81bUkfEBE+r9rMtx+hw8VmXR3tcCtTnfA2inn7r4Xr08pA8ihKffHu"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"20b1-qt7RHaZA7PxPQZjB5hbMY4mYxZU\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"25ms"},"msg":"","time":"2017-09-29T00:36:07.534Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"2edc1710-a4ae-11e7-ad29-7b3837c864ae","userId":null},"url":"/","method":"GET","originalUrl":"/","params":{},"headers":{"x-forwarded-for":"163.177.93.241","x-real-ip":"163.177.93.241","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"text/vnd.wap.wml,text/html,application/vnd.wap.xhtml+xml,application/xhtml+xml","accept-charset":"gb2312,iso8859-1,utf-8","accept-encoding":"gzip,deflate","q-ua":"KQB22_GA/220020&KMTT_3/200020&JV2&151920&SunMicrosystemswtk&0&4309&V3","user-agent":"Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN; rv:1.9b4) Gecko/2008030317 Firefox/3.0b4"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"20b1-qt7RHaZA7PxPQZjB5hbMY4mYxZU\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"24ms"},"msg":"","time":"2017-09-29T00:36:07.577Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"2edfe7a0-a4ae-11e7-ad29-7b3837c864ae","userId":null},"url":"/","method":"GET","originalUrl":"/","params":{},"headers":{"x-forwarded-for":"183.232.118.14","x-real-ip":"183.232.118.14","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"text/vnd.wap.wml,text/html,application/vnd.wap.xhtml+xml,application/xhtml+xml","accept-charset":"gb2312,iso8859-1,utf-8","accept-encoding":"gzip,deflate","q-ua":"KQB22_GA/220020&KMTT_3/200020&JV2&151920&SunMicrosystemswtk&0&4309&V3","user-agent":"Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN; rv:1.9b4) Gecko/2008030317 Firefox/3.0b4"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"20b1-qt7RHaZA7PxPQZjB5hbMY4mYxZU\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"18ms"},"msg":"","time":"2017-09-29T00:36:07.597Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"2ee65040-a4ae-11e7-ad29-7b3837c864ae","userId":null},"url":"/public/ghost-sdk.min.js?v=b5301c75d8","method":"GET","originalUrl":"/public/ghost-sdk.min.js?v=b5301c75d8","params":{},"headers":{"x-forwarded-for":"14.17.44.216","x-real-ip":"14.17.44.216","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"*/*","accept-charset":"iso-8859-1,*,utf-8","accept-encoding":"gzip","accept-language":"en-us,en","referer":"http://47.95.197.107/?nsukey=o85Kvugp%2FzuPjeoq%2F8rxbpmFuLCvbfw%2BVel%2FVF4oe4YjfmplO1zT%2Bpbhr1K5SBxidoTNqO0zY92q4m7fefYGmS0A9DgTIf9EcSq0k2Y%2FZh9lAjfLnNL4iwPCXpfaJOoO5qV3E2r6Qi81bUkfEBE%2Br9rMtx%2Bhw8VmXR3tcCtTnfA2inn7r4Xr08pA8ihKffHu","user-agent":"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36"},"body":{},"query":{"v":"b5301c75d8"}},"res":{"_headers":{"x-powered-by":"Express","content-type":"application/javascript","content-length":765,"etag":"\"30c3227170bdaa36ca322470e2b77a33\"","cache-control":"public, max-age=3600","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"0ms"},"msg":"","time":"2017-09-29T00:36:07.621Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"2ee5db10-a4ae-11e7-ad29-7b3837c864ae","userId":null},"url":"/assets/js/jquery.fitvids.js?v=b5301c75d8","method":"GET","originalUrl":"/assets/js/jquery.fitvids.js?v=b5301c75d8","params":{},"headers":{"x-forwarded-for":"113.108.0.15","x-real-ip":"113.108.0.15","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"*/*","accept-charset":"iso-8859-1,*,utf-8","accept-encoding":"gzip","accept-language":"en-us,en","referer":"http://47.95.197.107/?nsukey=o85Kvugp%2FzuPjeoq%2F8rxbpmFuLCvbfw%2BVel%2FVF4oe4YjfmplO1zT%2Bpbhr1K5SBxidoTNqO0zY92q4m7fefYGmS0A9DgTIf9EcSq0k2Y%2FZh9lAjfLnNL4iwPCXpfaJOoO5qV3E2r6Qi81bUkfEBE%2Br9rMtx%2Bhw8VmXR3tcCtTnfA2inn7r4Xr08pA8ihKffHu","user-agent":"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36"},"body":{},"query":{"v":"b5301c75d8"}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 07:32:48 GMT","etag":"W/\"d76-15ec766fb30\"","content-type":"application/javascript","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"7ms"},"msg":"","time":"2017-09-29T00:36:07.625Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"2ee69e60-a4ae-11e7-ad29-7b3837c864ae","userId":null},"url":"/assets/js/infinitescroll.js?v=b5301c75d8","method":"GET","originalUrl":"/assets/js/infinitescroll.js?v=b5301c75d8","params":{},"headers":{"x-forwarded-for":"14.17.44.106","x-real-ip":"14.17.44.106","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"*/*","accept-charset":"iso-8859-1,*,utf-8","accept-encoding":"gzip","accept-language":"en-us,en","referer":"http://47.95.197.107/?nsukey=o85Kvugp%2FzuPjeoq%2F8rxbpmFuLCvbfw%2BVel%2FVF4oe4YjfmplO1zT%2Bpbhr1K5SBxidoTNqO0zY92q4m7fefYGmS0A9DgTIf9EcSq0k2Y%2FZh9lAjfLnNL4iwPCXpfaJOoO5qV3E2r6Qi81bUkfEBE%2Br9rMtx%2Bhw8VmXR3tcCtTnfA2inn7r4Xr08pA8ihKffHu","user-agent":"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36"},"body":{},"query":{"v":"b5301c75d8"}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 07:32:48 GMT","etag":"W/\"8d6-15ec766fb30\"","content-type":"application/javascript","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"6ms"},"msg":"","time":"2017-09-29T00:36:07.628Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"2ee761b0-a4ae-11e7-ad29-7b3837c864ae","userId":null},"url":"/assets/built/screen.css?v=b5301c75d8","method":"GET","originalUrl":"/assets/built/screen.css?v=b5301c75d8","params":{},"headers":{"x-forwarded-for":"14.17.34.237","x-real-ip":"14.17.34.237","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"text/css,*/*;q=0.1","accept-charset":"iso-8859-1,*,utf-8","accept-encoding":"gzip","accept-language":"en-us,en","referer":"http://47.95.197.107/?nsukey=o85Kvugp%2FzuPjeoq%2F8rxbpmFuLCvbfw%2BVel%2FVF4oe4YjfmplO1zT%2Bpbhr1K5SBxidoTNqO0zY92q4m7fefYGmS0A9DgTIf9EcSq0k2Y%2FZh9lAjfLnNL4iwPCXpfaJOoO5qV3E2r6Qi81bUkfEBE%2Br9rMtx%2Bhw8VmXR3tcCtTnfA2inn7r4Xr08pA8ihKffHu","user-agent":"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36"},"body":{},"query":{"v":"b5301c75d8"}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 07:32:48 GMT","etag":"W/\"759e-15ec766fb30\"","content-type":"text/css; charset=UTF-8","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"3ms"},"msg":"","time":"2017-09-29T00:36:07.631Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"2f45d560-a4ae-11e7-ad29-7b3837c864ae","userId":null},"url":"/?nsukey=o85Kvugp%2FzuPjeoq%2F8rxbpmFuLCvbfw%2BVel%2FVF4oe4YjfmplO1zT%2Bpbhr1K5SBxidoTNqO0zY92q4m7fefYGmS0A9DgTIf9EcSq0k2Y%2FZh9lAjfLnNL4iwPCXpfaJOoO5qV3E2r6Qi81bUkfEBE%2Br9rMtx%2Bhw8VmXR3tcCtTnfA2inn7r4Xr08pA8ihKffHu","method":"GET","originalUrl":"/?nsukey=o85Kvugp%2FzuPjeoq%2F8rxbpmFuLCvbfw%2BVel%2FVF4oe4YjfmplO1zT%2Bpbhr1K5SBxidoTNqO0zY92q4m7fefYGmS0A9DgTIf9EcSq0k2Y%2FZh9lAjfLnNL4iwPCXpfaJOoO5qV3E2r6Qi81bUkfEBE%2Br9rMtx%2Bhw8VmXR3tcCtTnfA2inn7r4Xr08pA8ihKffHu","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","upgrade-insecure-requests":"1","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8","user-agent":"Mozilla/5.0 (iPhone; CPU iPhone OS 10_3_3 like Mac OS X) AppleWebKit/603.3.8 (KHTML, like Gecko) Mobile/14G60 MicroMessenger/6.5.15 NetType/WIFI Language/zh_CN","accept-language":"zh-cn","accept-encoding":"gzip, deflate"},"body":{},"query":{"nsukey":"o85Kvugp/zuPjeoq/8rxbpmFuLCvbfw+Vel/VF4oe4YjfmplO1zT+pbhr1K5SBxidoTNqO0zY92q4m7fefYGmS0A9DgTIf9EcSq0k2Y/Zh9lAjfLnNL4iwPCXpfaJOoO5qV3E2r6Qi81bUkfEBE+r9rMtx+hw8VmXR3tcCtTnfA2inn7r4Xr08pA8ihKffHu"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"20b1-qt7RHaZA7PxPQZjB5hbMY4mYxZU\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"23ms"},"msg":"","time":"2017-09-29T00:36:08.270Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"2f4debb0-a4ae-11e7-ad29-7b3837c864ae","userId":null},"url":"/assets/built/screen.css?v=b5301c75d8","method":"GET","originalUrl":"/assets/built/screen.css?v=b5301c75d8","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"text/css,*/*;q=0.1","user-agent":"Mozilla/5.0 (iPhone; CPU iPhone OS 10_3_3 like Mac OS X) AppleWebKit/603.3.8 (KHTML, like Gecko) Mobile/14G60 MicroMessenger/6.5.15 NetType/WIFI Language/zh_CN","accept-language":"zh-cn","referer":"http://47.95.197.107/?nsukey=o85Kvugp%2FzuPjeoq%2F8rxbpmFuLCvbfw%2BVel%2FVF4oe4YjfmplO1zT%2Bpbhr1K5SBxidoTNqO0zY92q4m7fefYGmS0A9DgTIf9EcSq0k2Y%2FZh9lAjfLnNL4iwPCXpfaJOoO5qV3E2r6Qi81bUkfEBE%2Br9rMtx%2Bhw8VmXR3tcCtTnfA2inn7r4Xr08pA8ihKffHu","accept-encoding":"gzip, deflate"},"body":{},"query":{"v":"b5301c75d8"}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 07:32:48 GMT","etag":"W/\"759e-15ec766fb30\"","content-type":"text/css; charset=UTF-8","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"3ms"},"msg":"","time":"2017-09-29T00:36:08.303Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"2f5035a0-a4ae-11e7-ad29-7b3837c864ae","userId":null},"url":"/public/ghost-sdk.min.js?v=b5301c75d8","method":"GET","originalUrl":"/public/ghost-sdk.min.js?v=b5301c75d8","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"*/*","user-agent":"Mozilla/5.0 (iPhone; CPU iPhone OS 10_3_3 like Mac OS X) AppleWebKit/603.3.8 (KHTML, like Gecko) Mobile/14G60 MicroMessenger/6.5.15 NetType/WIFI Language/zh_CN","accept-language":"zh-cn","referer":"http://47.95.197.107/?nsukey=o85Kvugp%2FzuPjeoq%2F8rxbpmFuLCvbfw%2BVel%2FVF4oe4YjfmplO1zT%2Bpbhr1K5SBxidoTNqO0zY92q4m7fefYGmS0A9DgTIf9EcSq0k2Y%2FZh9lAjfLnNL4iwPCXpfaJOoO5qV3E2r6Qi81bUkfEBE%2Br9rMtx%2Bhw8VmXR3tcCtTnfA2inn7r4Xr08pA8ihKffHu","accept-encoding":"gzip, deflate"},"body":{},"query":{"v":"b5301c75d8"}},"res":{"_headers":{"x-powered-by":"Express","content-type":"application/javascript","content-length":765,"etag":"\"30c3227170bdaa36ca322470e2b77a33\"","cache-control":"public, max-age=3600","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"0ms"},"msg":"","time":"2017-09-29T00:36:08.315Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"2f50aad0-a4ae-11e7-ad29-7b3837c864ae","userId":null},"url":"/assets/js/infinitescroll.js?v=b5301c75d8","method":"GET","originalUrl":"/assets/js/infinitescroll.js?v=b5301c75d8","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"*/*","user-agent":"Mozilla/5.0 (iPhone; CPU iPhone OS 10_3_3 like Mac OS X) AppleWebKit/603.3.8 (KHTML, like Gecko) Mobile/14G60 MicroMessenger/6.5.15 NetType/WIFI Language/zh_CN","accept-language":"zh-cn","referer":"http://47.95.197.107/?nsukey=o85Kvugp%2FzuPjeoq%2F8rxbpmFuLCvbfw%2BVel%2FVF4oe4YjfmplO1zT%2Bpbhr1K5SBxidoTNqO0zY92q4m7fefYGmS0A9DgTIf9EcSq0k2Y%2FZh9lAjfLnNL4iwPCXpfaJOoO5qV3E2r6Qi81bUkfEBE%2Br9rMtx%2Bhw8VmXR3tcCtTnfA2inn7r4Xr08pA8ihKffHu","accept-encoding":"gzip, deflate"},"body":{},"query":{"v":"b5301c75d8"}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 07:32:48 GMT","etag":"W/\"8d6-15ec766fb30\"","content-type":"application/javascript","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"1ms"},"msg":"","time":"2017-09-29T00:36:08.319Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"2f519530-a4ae-11e7-ad29-7b3837c864ae","userId":null},"url":"/assets/js/jquery.fitvids.js?v=b5301c75d8","method":"GET","originalUrl":"/assets/js/jquery.fitvids.js?v=b5301c75d8","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"*/*","user-agent":"Mozilla/5.0 (iPhone; CPU iPhone OS 10_3_3 like Mac OS X) AppleWebKit/603.3.8 (KHTML, like Gecko) Mobile/14G60 MicroMessenger/6.5.15 NetType/WIFI Language/zh_CN","accept-language":"zh-cn","referer":"http://47.95.197.107/?nsukey=o85Kvugp%2FzuPjeoq%2F8rxbpmFuLCvbfw%2BVel%2FVF4oe4YjfmplO1zT%2Bpbhr1K5SBxidoTNqO0zY92q4m7fefYGmS0A9DgTIf9EcSq0k2Y%2FZh9lAjfLnNL4iwPCXpfaJOoO5qV3E2r6Qi81bUkfEBE%2Br9rMtx%2Bhw8VmXR3tcCtTnfA2inn7r4Xr08pA8ihKffHu","accept-encoding":"gzip, deflate"},"body":{},"query":{"v":"b5301c75d8"}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 07:32:48 GMT","etag":"W/\"d76-15ec766fb30\"","content-type":"application/javascript","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"2ms"},"msg":"","time":"2017-09-29T00:36:08.325Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"2f52a6a0-a4ae-11e7-ad29-7b3837c864ae","userId":null},"url":"/2017/09/---.jpg","method":"GET","originalUrl":"/content/images/2017/09/---.jpg","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"image/png,image/svg+xml,image/*;q=0.8,*/*;q=0.5","user-agent":"Mozilla/5.0 (iPhone; CPU iPhone OS 10_3_3 like Mac OS X) AppleWebKit/603.3.8 (KHTML, like Gecko) Mobile/14G60 MicroMessenger/6.5.15 NetType/WIFI Language/zh_CN","accept-language":"zh-cn","referer":"http://47.95.197.107/?nsukey=o85Kvugp%2FzuPjeoq%2F8rxbpmFuLCvbfw%2BVel%2FVF4oe4YjfmplO1zT%2Bpbhr1K5SBxidoTNqO0zY92q4m7fefYGmS0A9DgTIf9EcSq0k2Y%2FZh9lAjfLnNL4iwPCXpfaJOoO5qV3E2r6Qi81bUkfEBE%2Br9rMtx%2Bhw8VmXR3tcCtTnfA2inn7r4Xr08pA8ihKffHu","accept-encoding":"gzip, deflate"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 08:33:32 GMT","etag":"W/\"545b-15ec79e95e4\"","content-type":"image/jpeg","content-length":21595},"statusCode":200,"responseTime":"2ms"},"msg":"","time":"2017-09-29T00:36:08.332Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"2f52cdb0-a4ae-11e7-ad29-7b3837c864ae","userId":null},"url":"/2017/09/ghost.png","method":"GET","originalUrl":"/content/images/2017/09/ghost.png","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"image/png,image/svg+xml,image/*;q=0.8,*/*;q=0.5","user-agent":"Mozilla/5.0 (iPhone; CPU iPhone OS 10_3_3 like Mac OS X) AppleWebKit/603.3.8 (KHTML, like Gecko) Mobile/14G60 MicroMessenger/6.5.15 NetType/WIFI Language/zh_CN","accept-language":"zh-cn","referer":"http://47.95.197.107/?nsukey=o85Kvugp%2FzuPjeoq%2F8rxbpmFuLCvbfw%2BVel%2FVF4oe4YjfmplO1zT%2Bpbhr1K5SBxidoTNqO0zY92q4m7fefYGmS0A9DgTIf9EcSq0k2Y%2FZh9lAjfLnNL4iwPCXpfaJOoO5qV3E2r6Qi81bUkfEBE%2Br9rMtx%2Bhw8VmXR3tcCtTnfA2inn7r4Xr08pA8ihKffHu","accept-encoding":"gzip, deflate"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 15:17:51 GMT","etag":"W/\"37a86-15ec910bf89\"","content-type":"image/png","content-length":227974},"statusCode":200,"responseTime":"3ms"},"msg":"","time":"2017-09-29T00:36:08.335Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"3fac4a10-a4ae-11e7-ad29-7b3837c864ae","userId":null},"url":"/?nsukey=o85Kvugp%2FzuPjeoq%2F8rxbpmFuLCvbfw%2BVel%2FVF4oe4YjfmplO1zT%2Bpbhr1K5SBxidoTNqO0zY92q4m7fefYGmS0A9DgTIf9EcSq0k2Y%2FZh9lAjfLnNL4iwPCXpfaJOoO5qV3E2r6Qi81bUkfEBE%2Br9rMtx%2Bhw8VmXR3tcCtTnfA2inn7r4Xr08pA8ihKffHu","method":"GET","originalUrl":"/?nsukey=o85Kvugp%2FzuPjeoq%2F8rxbpmFuLCvbfw%2BVel%2FVF4oe4YjfmplO1zT%2Bpbhr1K5SBxidoTNqO0zY92q4m7fefYGmS0A9DgTIf9EcSq0k2Y%2FZh9lAjfLnNL4iwPCXpfaJOoO5qV3E2r6Qi81bUkfEBE%2Br9rMtx%2Bhw8VmXR3tcCtTnfA2inn7r4Xr08pA8ihKffHu","params":{},"headers":{"x-forwarded-for":"117.185.27.114","x-real-ip":"117.185.27.114","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","user-agent":"Mozilla/5.0 (Linux; U; Android 4.4.4; zh-CN; Coolpad Y82-520 Build/KTU84P) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 UCBrowser/10.9.8.738 U3/0.8.0 Mobile Safari/534.30","accept":"*/*","accept-encoding":"gzip, deflate, sdch, br","accept-language":"zh-CN,zh;q=0.8,en-US;q=0.6,en;q=0.4"},"body":{},"query":{"nsukey":"o85Kvugp/zuPjeoq/8rxbpmFuLCvbfw+Vel/VF4oe4YjfmplO1zT+pbhr1K5SBxidoTNqO0zY92q4m7fefYGmS0A9DgTIf9EcSq0k2Y/Zh9lAjfLnNL4iwPCXpfaJOoO5qV3E2r6Qi81bUkfEBE+r9rMtx+hw8VmXR3tcCtTnfA2inn7r4Xr08pA8ihKffHu"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"20b1-qt7RHaZA7PxPQZjB5hbMY4mYxZU\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"26ms"},"msg":"","time":"2017-09-29T00:36:35.788Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"3fc8d2c0-a4ae-11e7-ad29-7b3837c864ae","userId":null},"url":"/public/ghost-sdk.min.js?v=b5301c75d8","method":"GET","originalUrl":"/public/ghost-sdk.min.js?v=b5301c75d8","params":{},"headers":{"x-forwarded-for":"117.185.27.114","x-real-ip":"117.185.27.114","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","user-agent":"Mozilla/5.0 (Linux; U; Android 6.0.1; zh-cn; OPPO R9s Build/MMB29M) AppleWebKit/537.36 (KHTML, like Gecko)Version/4.0 Chrome/37.0.0.0 MQQBrowser/7.2 Mobile Safari/537.36","accept":"*/*","accept-encoding":"gzip, deflate, sdch, br","referer":"http://47.95.197.107/?nsukey=o85Kvugp%2FzuPjeoq%2F8rxbpmFuLCvbfw%2BVel%2FVF4oe4YjfmplO1zT%2Bpbhr1K5SBxidoTNqO0zY92q4m7fefYGmS0A9DgTIf9EcSq0k2Y%2FZh9lAjfLnNL4iwPCXpfaJOoO5qV3E2r6Qi81bUkfEBE%2Br9rMtx%2Bhw8VmXR3tcCtTnfA2inn7r4Xr08pA8ihKffHu","accept-language":"zh-CN,zh;q=0.8,en-US;q=0.6,en;q=0.4"},"body":{},"query":{"v":"b5301c75d8"}},"res":{"_headers":{"x-powered-by":"Express","content-type":"application/javascript","content-length":765,"etag":"\"30c3227170bdaa36ca322470e2b77a33\"","cache-control":"public, max-age=3600","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"1ms"},"msg":"","time":"2017-09-29T00:36:35.950Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"40003670-a4ae-11e7-ad29-7b3837c864ae","userId":null},"url":"/assets/js/jquery.fitvids.js?v=b5301c75d8","method":"GET","originalUrl":"/assets/js/jquery.fitvids.js?v=b5301c75d8","params":{},"headers":{"x-forwarded-for":"117.185.27.114","x-real-ip":"117.185.27.114","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","user-agent":"Mozilla/5.0 (Linux; U; Android 4.4.4; zh-CN; Coolpad Y82-520 Build/KTU84P) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 UCBrowser/10.9.8.738 U3/0.8.0 Mobile Safari/534.30","accept":"*/*","accept-encoding":"gzip, deflate, sdch, br","referer":"http://47.95.197.107/?nsukey=o85Kvugp%2FzuPjeoq%2F8rxbpmFuLCvbfw%2BVel%2FVF4oe4YjfmplO1zT%2Bpbhr1K5SBxidoTNqO0zY92q4m7fefYGmS0A9DgTIf9EcSq0k2Y%2FZh9lAjfLnNL4iwPCXpfaJOoO5qV3E2r6Qi81bUkfEBE%2Br9rMtx%2Bhw8VmXR3tcCtTnfA2inn7r4Xr08pA8ihKffHu","accept-language":"zh-CN,zh;q=0.8,en-US;q=0.6,en;q=0.4"},"body":{},"query":{"v":"b5301c75d8"}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 07:32:48 GMT","etag":"W/\"d76-15ec766fb30\"","content-type":"application/javascript","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"3ms"},"msg":"","time":"2017-09-29T00:36:36.315Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"401963c0-a4ae-11e7-ad29-7b3837c864ae","userId":null},"url":"/assets/js/infinitescroll.js?v=b5301c75d8","method":"GET","originalUrl":"/assets/js/infinitescroll.js?v=b5301c75d8","params":{},"headers":{"x-forwarded-for":"117.185.27.114","x-real-ip":"117.185.27.114","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","user-agent":"Mozilla/5.0 (Linux; U; Android 4.4.4; zh-CN; HUAWEI ALE-CL00 Build/HuaweiALE-CL00) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/40.0.2214.89 UCBrowser/11.3.0.907 Mobile Safari/537.36","accept":"*/*","accept-encoding":"gzip, deflate, sdch, br","referer":"http://47.95.197.107/?nsukey=o85Kvugp%2FzuPjeoq%2F8rxbpmFuLCvbfw%2BVel%2FVF4oe4YjfmplO1zT%2Bpbhr1K5SBxidoTNqO0zY92q4m7fefYGmS0A9DgTIf9EcSq0k2Y%2FZh9lAjfLnNL4iwPCXpfaJOoO5qV3E2r6Qi81bUkfEBE%2Br9rMtx%2Bhw8VmXR3tcCtTnfA2inn7r4Xr08pA8ihKffHu","accept-language":"zh-CN,zh;q=0.8,en-US;q=0.6,en;q=0.4"},"body":{},"query":{"v":"b5301c75d8"}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 07:32:48 GMT","etag":"W/\"8d6-15ec766fb30\"","content-type":"application/javascript","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"2ms"},"msg":"","time":"2017-09-29T00:36:36.480Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"8212bba0-a4ae-11e7-ad29-7b3837c864ae","userId":null},"url":"/","method":"GET","originalUrl":"/","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","accept":"*/*","accept-encoding":"gzip, deflate","accept-language":"zh-CN","if-none-match":"W/\"18ec-REm7EI5PRNQBPOX3tazx112V2MA\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"20b1-qt7RHaZA7PxPQZjB5hbMY4mYxZU\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"47ms"},"msg":"","time":"2017-09-29T00:38:27.210Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"8210bfd0-a4ae-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/authentication/revoke","method":"POST","originalUrl":"/ghost/api/v0.1/authentication/revoke","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","content-length":"275","origin":"http://47.95.197.107","app-pragma":"no-cache","content-type":"application/x-www-form-urlencoded","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"1.9","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{"token_type_hint":"access_token","token":"T5OllfaDNrfpJadEh4P5xnjhurUsjKDl9u7U263FG3rRhm6g6GjsJ1RmeXn5Jrwb8NRzOgmOoiTanf9jfrAQC4KlTyPOskl4wSdI1ZlyolIk1huTnCo9ZYBRQAutDJfPHNz3Vq7PoNzIvrMF6N4Uy95yaFDLVObYcMinp28MBpXSvUsPM5LZBpFzZcxGT4p","client_id":"ghost-admin","client_secret":"e7e8e511f0c9"},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"http://47.95.197.107","vary":"Origin, Accept-Encoding","content-type":"application/json; charset=utf-8","content-length":"203","etag":"W/\"cb-TXPk/1BmAHE0FKIcWCLUsEECOsE\""},"statusCode":200,"responseTime":"64ms"},"msg":"","time":"2017-09-29T00:38:27.213Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"82121f60-a4ae-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/authentication/revoke","method":"POST","originalUrl":"/ghost/api/v0.1/authentication/revoke","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","content-length":"276","origin":"http://47.95.197.107","app-pragma":"no-cache","content-type":"application/x-www-form-urlencoded","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"1.9","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{"token_type_hint":"refresh_token","token":"HqX32tAssD2Gdx9t3o7PF5cjtdUPt89HdkDvkpkZaqtsITEWKhIdEEHVNzdO3SQaRgVLBYHvYG5LdeJR5wsK8icrmTUB32LDTz3nEwp2JNRGm6pRpxmlGYuDB5yYg4KNiYOrbewehsLqXqsiNEuHjlnkSO1ge2lNikmEkdUVOHqaH3CLUJbUxrSihApQePD","client_id":"ghost-admin","client_secret":"e7e8e511f0c9"},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"http://47.95.197.107","vary":"Origin, Accept-Encoding","content-type":"application/json; charset=utf-8","content-length":"203","etag":"W/\"cb-0VaVp5RlAkVtYeGCYVD36zwy8tk\""},"statusCode":200,"responseTime":"58ms"},"msg":"","time":"2017-09-29T00:38:27.216Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"821d9110-a4ae-11e7-ad29-7b3837c864ae","userId":null},"url":"/","method":"GET","originalUrl":"/","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","accept":"*/*","accept-encoding":"gzip, deflate","accept-language":"zh-CN","if-none-match":"W/\"20b1-qt7RHaZA7PxPQZjB5hbMY4mYxZU\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","etag":"W/\"20b1-qt7RHaZA7PxPQZjB5hbMY4mYxZU\""},"statusCode":304,"responseTime":"23ms"},"msg":"","time":"2017-09-29T00:38:27.257Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"82258050-a4ae-11e7-ad29-7b3837c864ae","userId":null},"url":"/","method":"GET","originalUrl":"/ghost/","params":{"0":"/"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","upgrade-insecure-requests":"1","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","accept-ranges":"bytes","last-modified":"Tue, 26 Sep 2017 05:55:30 GMT","etag":"W/\"d3e-15ebcc12c50\"","content-type":"text/html; charset=UTF-8","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"4ms"},"msg":"","time":"2017-09-29T00:38:27.290Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"828ec970-a4ae-11e7-ad29-7b3837c864ae","userId":null},"url":"/configuration/","method":"GET","originalUrl":"/ghost/api/v0.1/configuration/","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"1.9","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","content-type":"application/json; charset=UTF-8","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","content-length":"332","etag":"W/\"14c-weLJ0SrbCHNnBbxCHcrQWt9PAc8\"","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"4ms"},"msg":"","time":"2017-09-29T00:38:27.980Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"82955920-a4ae-11e7-ad29-7b3837c864ae","userId":null},"url":"/authentication/setup/","method":"GET","originalUrl":"/ghost/api/v0.1/authentication/setup/","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"1.9","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","content-type":"application/json; charset=UTF-8","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","content-length":"27","etag":"W/\"1b-06ef8FdrIIahUXEQyo6H3V0+dJg\"","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"7ms"},"msg":"","time":"2017-09-29T00:38:28.026Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"829902a0-a4ae-11e7-ad29-7b3837c864ae","userId":null},"url":"/","method":"GET","originalUrl":"/","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","accept":"*/*","accept-encoding":"gzip, deflate","accept-language":"zh-CN","if-none-match":"W/\"20b1-qt7RHaZA7PxPQZjB5hbMY4mYxZU\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","etag":"W/\"20b1-qt7RHaZA7PxPQZjB5hbMY4mYxZU\""},"statusCode":304,"responseTime":"20ms"},"msg":"","time":"2017-09-29T00:38:28.063Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":50,"req":{"meta":{"requestId":"8802a930-a4ae-11e7-ad29-7b3837c864ae","userId":null},"url":"/authentication/token","method":"POST","originalUrl":"/ghost/api/v0.1/authentication/token","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","content-length":"123","origin":"http://47.95.197.107","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","content-type":"application/x-www-form-urlencoded","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"1.9","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{"grant_type":"password","username":"10041051@buaa.edu.cn"},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","content-length":"124","etag":"W/\"7c-ivmlgJsSiTOhqS5rH3IOo3nuoXE\"","vary":"Accept-Encoding"},"statusCode":422,"responseTime":"165ms"},"err":{"id":"881baf70-a4ae-11e7-ad29-7b3837c864ae","domain":"http://47.95.197.107:2368","code":"PASSWORD_INCORRECT","name":"ValidationError","statusCode":422,"level":"normal","message":"Your password is incorrect.","context":"Your password is incorrect.","help":"Visit and save your profile after logging in to check for problems.","stack":"ValidationError: Your password is incorrect.\n    at new ValidationError (/home/www/ghost/node_modules/ghost-ignition/lib/errors/index.js:115:23)\n    at /home/www/ghost/core/server/models/user.js:718:39\n    at tryCatcher (/home/www/ghost/node_modules/bluebird/js/release/util.js:16:23)\n    at Promise._settlePromiseFromHandler (/home/www/ghost/node_modules/bluebird/js/release/promise.js:512:31)\n    at Promise._settlePromise (/home/www/ghost/node_modules/bluebird/js/release/promise.js:569:18)\n    at Promise._settlePromise0 (/home/www/ghost/node_modules/bluebird/js/release/promise.js:614:10)\n    at Promise._settlePromises (/home/www/ghost/node_modules/bluebird/js/release/promise.js:693:18)\n    at Promise._fulfill (/home/www/ghost/node_modules/bluebird/js/release/promise.js:638:18)\n    at /home/www/ghost/node_modules/bluebird/js/release/nodeback.js:42:21\n    at /home/www/ghost/node_modules/bcryptjs/dist/bcrypt.js:297:21\n    at /home/www/ghost/node_modules/bcryptjs/dist/bcrypt.js:1353:21\n    at Immediate.next (/home/www/ghost/node_modules/bcryptjs/dist/bcrypt.js:1233:21)\n    at runCallback (timers.js:672:20)\n    at tryOnImmediate (timers.js:645:5)\n    at processImmediate [as _immediateCallback] (timers.js:617:5)"},"msg":"Your password is incorrect.","time":"2017-09-29T00:38:37.292Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"8b2b1250-a4ae-11e7-ad29-7b3837c864ae","userId":null},"url":"/authentication/token","method":"POST","originalUrl":"/ghost/api/v0.1/authentication/token","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","content-length":"121","origin":"http://47.95.197.107","app-pragma":"no-cache","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","content-type":"application/x-www-form-urlencoded","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"1.9","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{"grant_type":"password","username":"10041051@buaa.edu.cn"},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-store","content-type":"application/json","pragma":"no-cache","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"144ms"},"msg":"","time":"2017-09-29T00:38:42.567Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"8b443fa0-a4ae-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/users/me/?include=roles","method":"GET","originalUrl":"/ghost/api/v0.1/users/me/?include=roles","params":{"id":"me"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","x-requested-with":"XMLHttpRequest","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","x-ghost-version":"1.9","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{},"query":{"include":"roles"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","content-length":"796","etag":"W/\"31c-KzL2Lq8M8Shuc1f662Y7uBD9IxQ\"","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"29ms"},"msg":"","time":"2017-09-29T00:38:42.616Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"8b45ed50-a4ae-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/settings/?type=blog%2Ctheme%2Cprivate","method":"GET","originalUrl":"/ghost/api/v0.1/settings/?type=blog%2Ctheme%2Cprivate","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","x-requested-with":"XMLHttpRequest","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","x-ghost-version":"1.9","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{},"query":{"type":"blog,theme,private"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"10f9-XUW7FwCmrbQLro66S0+SS7DhAZM\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"20ms"},"msg":"","time":"2017-09-29T00:38:42.618Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"8b5c8290-a4ae-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/notifications/","method":"GET","originalUrl":"/ghost/api/v0.1/notifications/","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","x-requested-with":"XMLHttpRequest","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","x-ghost-version":"1.9","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","content-length":"20","etag":"W/\"14-rGnko0plFblBZ6cCxL9htMA8NKo\"","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"20ms"},"msg":"","time":"2017-09-29T00:38:42.766Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"8b5b7120-a4ae-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/posts/?limit=30&page=1&status=all&staticPages=all&formats=mobiledoc%2Cplaintext&include=tags","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?limit=30&page=1&status=all&staticPages=all&formats=mobiledoc%2Cplaintext&include=tags","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","x-requested-with":"XMLHttpRequest","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","x-ghost-version":"1.9","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{},"query":{"limit":"30","page":"1","status":"all","staticPages":"all","formats":"mobiledoc,plaintext","include":"tags"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"8819-qS0l6kQoxkfUwBhBPI+ayxXmX/s\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"34ms"},"msg":"","time":"2017-09-29T00:38:42.773Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"8b697ae0-a4ae-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/configuration/private/","method":"GET","originalUrl":"/ghost/api/v0.1/configuration/private/","params":{"key":"private"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","x-requested-with":"XMLHttpRequest","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","x-ghost-version":"1.9","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","content-length":"20","etag":"W/\"14-PQTWA9/xhQpZZaiEQQdpzDore8A\"","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"4ms"},"msg":"","time":"2017-09-29T00:38:42.835Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"8b6ed210-a4ae-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/tags/?limit=all","method":"GET","originalUrl":"/ghost/api/v0.1/tags/?limit=all","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","x-requested-with":"XMLHttpRequest","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","x-ghost-version":"1.9","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{},"query":{"limit":"all"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"520-YgcdWaNwvap4C2937J2+86Q0fY8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"29ms"},"msg":"","time":"2017-09-29T00:38:42.895Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"8b711c00-a4ae-11e7-ad29-7b3837c864ae","userId":null},"url":"/","method":"GET","originalUrl":"/","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","accept":"*/*","accept-encoding":"gzip, deflate","accept-language":"zh-CN","if-none-match":"W/\"20b1-qt7RHaZA7PxPQZjB5hbMY4mYxZU\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","etag":"W/\"20b1-qt7RHaZA7PxPQZjB5hbMY4mYxZU\""},"statusCode":304,"responseTime":"36ms"},"msg":"","time":"2017-09-29T00:38:42.917Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"8b707fc0-a4ae-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/users/?limit=all&include=roles","method":"GET","originalUrl":"/ghost/api/v0.1/users/?limit=all&include=roles","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","x-requested-with":"XMLHttpRequest","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","x-ghost-version":"1.9","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{},"query":{"limit":"all","include":"roles"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","content-length":"887","etag":"W/\"377-wZ7lPvDvUvNsqzBsAazt8RbWO9w\"","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"43ms"},"msg":"","time":"2017-09-29T00:38:42.919Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"8c6f5220-a4ae-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/posts/59ccf296a744810195a3dc03/?status=all&staticPages=all&formats=mobiledoc%2Cplaintext&include=tags","method":"GET","originalUrl":"/ghost/api/v0.1/posts/59ccf296a744810195a3dc03/?status=all&staticPages=all&formats=mobiledoc%2Cplaintext&include=tags","params":{"id":"59ccf296a744810195a3dc03"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","x-requested-with":"XMLHttpRequest","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","x-ghost-version":"1.9","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{},"query":{"status":"all","staticPages":"all","formats":"mobiledoc,plaintext","include":"tags"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"38f2-Y6+aOlfbXd+nNjwRLZT1nWU2bxo\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"21ms"},"msg":"","time":"2017-09-29T00:38:44.568Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"8c754590-a4ae-11e7-ad29-7b3837c864ae","userId":null},"url":"/","method":"GET","originalUrl":"/","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","accept":"*/*","accept-encoding":"gzip, deflate","accept-language":"zh-CN","if-none-match":"W/\"20b1-qt7RHaZA7PxPQZjB5hbMY4mYxZU\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","etag":"W/\"20b1-qt7RHaZA7PxPQZjB5hbMY4mYxZU\""},"statusCode":304,"responseTime":"18ms"},"msg":"","time":"2017-09-29T00:38:44.604Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"8c7a2790-a4ae-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/users/?limit=all&include=roles","method":"GET","originalUrl":"/ghost/api/v0.1/users/?limit=all&include=roles","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","x-requested-with":"XMLHttpRequest","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","x-ghost-version":"1.9","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{},"query":{"limit":"all","include":"roles"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","content-length":"887","etag":"W/\"377-wZ7lPvDvUvNsqzBsAazt8RbWO9w\"","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"16ms"},"msg":"","time":"2017-09-29T00:38:44.633Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"8c7fa5d0-a4ae-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/tags/?limit=all","method":"GET","originalUrl":"/ghost/api/v0.1/tags/?limit=all","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","x-requested-with":"XMLHttpRequest","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","x-ghost-version":"1.9","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{},"query":{"limit":"all"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"520-YgcdWaNwvap4C2937J2+86Q0fY8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"12ms"},"msg":"","time":"2017-09-29T00:38:44.665Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"8cc00a30-a4ae-11e7-ad29-7b3837c864ae","userId":null},"url":"/2017/09/ghost.png","method":"GET","originalUrl":"/content/images/2017/09/ghost.png","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","accept":"image/webp,image/*,*/*;q=0.8","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 15:17:51 GMT","etag":"W/\"37a86-15ec910bf89\"","content-type":"image/png","content-length":227974},"statusCode":200,"responseTime":"3ms"},"msg":"","time":"2017-09-29T00:38:45.078Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"cb111a90-a4ae-11e7-ad29-7b3837c864ae","userId":null},"url":"/?nsukey=o85Kvugp%2FzuPjeoq%2F8rxbpmFuLCvbfw%2BVel%2FVF4oe4YjfmplO1zT%2Bpbhr1K5SBxidoTNqO0zY92q4m7fefYGmS0A9DgTIf9EcSq0k2Y%2FZh9lAjfLnNL4iwPCXpfaJOoO5qV3E2r6Qi81bUkfEBE%2Br9rMtx%2Bhw8VmXR3tcCtTnfA2inn7r4Xr08pA8ihKffHu","method":"GET","originalUrl":"/?nsukey=o85Kvugp%2FzuPjeoq%2F8rxbpmFuLCvbfw%2BVel%2FVF4oe4YjfmplO1zT%2Bpbhr1K5SBxidoTNqO0zY92q4m7fefYGmS0A9DgTIf9EcSq0k2Y%2FZh9lAjfLnNL4iwPCXpfaJOoO5qV3E2r6Qi81bUkfEBE%2Br9rMtx%2Bhw8VmXR3tcCtTnfA2inn7r4Xr08pA8ihKffHu","params":{},"headers":{"x-forwarded-for":"101.226.33.225","x-real-ip":"101.226.33.225","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","user-agent":"Mozilla/5.0 (iPhone; CPU iPhone OS 10_2_1 like Mac OS X) AppleWebKit/602.4.6 (KHTML, like Gecko) Mobile/14D27 MicroMessenger/6.5.5 NetType/WIFI Language/zh_CN","accept":"*/*","accept-encoding":"gzip, deflate, sdch, br","accept-language":"zh-CN,zh;q=0.8,en-US;q=0.6,en;q=0.4"},"body":{},"query":{"nsukey":"o85Kvugp/zuPjeoq/8rxbpmFuLCvbfw+Vel/VF4oe4YjfmplO1zT+pbhr1K5SBxidoTNqO0zY92q4m7fefYGmS0A9DgTIf9EcSq0k2Y/Zh9lAjfLnNL4iwPCXpfaJOoO5qV3E2r6Qi81bUkfEBE+r9rMtx+hw8VmXR3tcCtTnfA2inn7r4Xr08pA8ihKffHu"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"20b1-qt7RHaZA7PxPQZjB5hbMY4mYxZU\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"25ms"},"msg":"","time":"2017-09-29T00:40:29.650Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"cd121ab0-a4ae-11e7-ad29-7b3837c864ae","userId":null},"url":"/public/ghost-sdk.min.js?v=b5301c75d8","method":"GET","originalUrl":"/public/ghost-sdk.min.js?v=b5301c75d8","params":{},"headers":{"x-forwarded-for":"101.226.33.225","x-real-ip":"101.226.33.225","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","user-agent":"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 MicroMessenger/6.5.2.501 NetType/WIFI WindowsWechat QBCore/3.43.27.400 QQBrowser/9.0.2524.400","accept":"*/*","accept-encoding":"gzip, deflate, sdch, br","referer":"http://47.95.197.107/?nsukey=o85Kvugp%2FzuPjeoq%2F8rxbpmFuLCvbfw%2BVel%2FVF4oe4YjfmplO1zT%2Bpbhr1K5SBxidoTNqO0zY92q4m7fefYGmS0A9DgTIf9EcSq0k2Y%2FZh9lAjfLnNL4iwPCXpfaJOoO5qV3E2r6Qi81bUkfEBE%2Br9rMtx%2Bhw8VmXR3tcCtTnfA2inn7r4Xr08pA8ihKffHu","accept-language":"zh-CN,zh;q=0.8,en-US;q=0.6,en;q=0.4"},"body":{},"query":{"v":"b5301c75d8"}},"res":{"_headers":{"x-powered-by":"Express","content-type":"application/javascript","content-length":765,"etag":"\"30c3227170bdaa36ca322470e2b77a33\"","cache-control":"public, max-age=3600","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"0ms"},"msg":"","time":"2017-09-29T00:40:32.988Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"d1698df0-a4ae-11e7-ad29-7b3837c864ae","userId":null},"url":"/assets/js/jquery.fitvids.js?v=b5301c75d8","method":"GET","originalUrl":"/assets/js/jquery.fitvids.js?v=b5301c75d8","params":{},"headers":{"x-forwarded-for":"101.226.33.225","x-real-ip":"101.226.33.225","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","user-agent":"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 MicroMessenger/6.5.2.501 NetType/WIFI WindowsWechat QBCore/3.43.27.400 QQBrowser/9.0.2524.400","accept":"*/*","accept-encoding":"gzip, deflate, sdch, br","referer":"http://47.95.197.107/?nsukey=o85Kvugp%2FzuPjeoq%2F8rxbpmFuLCvbfw%2BVel%2FVF4oe4YjfmplO1zT%2Bpbhr1K5SBxidoTNqO0zY92q4m7fefYGmS0A9DgTIf9EcSq0k2Y%2FZh9lAjfLnNL4iwPCXpfaJOoO5qV3E2r6Qi81bUkfEBE%2Br9rMtx%2Bhw8VmXR3tcCtTnfA2inn7r4Xr08pA8ihKffHu","accept-language":"zh-CN,zh;q=0.8,en-US;q=0.6,en;q=0.4"},"body":{},"query":{"v":"b5301c75d8"}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 07:32:48 GMT","etag":"W/\"d76-15ec766fb30\"","content-type":"application/javascript","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"3ms"},"msg":"","time":"2017-09-29T00:40:40.274Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"d3820db0-a4ae-11e7-ad29-7b3837c864ae","userId":null},"url":"/assets/js/infinitescroll.js?v=b5301c75d8","method":"GET","originalUrl":"/assets/js/infinitescroll.js?v=b5301c75d8","params":{},"headers":{"x-forwarded-for":"101.226.33.225","x-real-ip":"101.226.33.225","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","user-agent":"Mozilla/5.0 (iPhone; CPU iPhone OS 10_2_1 like Mac OS X) AppleWebKit/602.4.6 (KHTML, like Gecko) Mobile/14D27 MicroMessenger/6.5.5 NetType/WIFI Language/en","accept":"*/*","accept-encoding":"gzip, deflate, sdch, br","referer":"http://47.95.197.107/?nsukey=o85Kvugp%2FzuPjeoq%2F8rxbpmFuLCvbfw%2BVel%2FVF4oe4YjfmplO1zT%2Bpbhr1K5SBxidoTNqO0zY92q4m7fefYGmS0A9DgTIf9EcSq0k2Y%2FZh9lAjfLnNL4iwPCXpfaJOoO5qV3E2r6Qi81bUkfEBE%2Br9rMtx%2Bhw8VmXR3tcCtTnfA2inn7r4Xr08pA8ihKffHu","accept-language":"zh-CN,zh;q=0.8,en-US;q=0.6,en;q=0.4"},"body":{},"query":{"v":"b5301c75d8"}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 07:32:48 GMT","etag":"W/\"8d6-15ec766fb30\"","content-type":"application/javascript","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"1ms"},"msg":"","time":"2017-09-29T00:40:43.789Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"9a8833b0-a4b6-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/posts/59ccf296a744810195a3dc03/?include=tags","method":"PUT","originalUrl":"/ghost/api/v0.1/posts/59ccf296a744810195a3dc03/?include=tags","params":{"id":"59ccf296a744810195a3dc03"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","content-length":"15555","origin":"http://47.95.197.107","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"1.9","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{"posts":{"0":{"id":"59ccf296a744810195a3dc03","created_at":"2017-09-28T13:01:10.000Z","created_by":"1","featured":false,"feature_image":"/content/images/2017/09/ghost.png","codeinjection_foot":"","codeinjection_head":"","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\\n什么是ghost？\\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\\n但是这并不影响我们搭建ghost服务器。吼吼吼~\\n\\n# 搭建准备\\n在[**阿里云**](https://www.aliyun.com/)上购买了一年的ECS服务器，配置如下:\\nCPU 1核；\\n内存 2G；\\n带宽 1Mbps；\\n硬盘 40G。\\n系统 CentOS 7.3 64位\\n\\n# 云服务器配置\\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\\n> 云服务器ECS——网络和安全——安全组——配置规则\\n![--------](/content/images/2017/09/--------.jpg)\\n![-------](/content/images/2017/09/-------.jpg)\\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\\n这里的设置主要是参考了[**阿里云的官方帮助文档**](https://help.aliyun.com/knowledge_detail/34403.html)。\\n# 安装ghost\\n\\n## 需要用到的东西\\n\\n* 一个完成A记录解析设置的域名（建议做好ICP备案）；（可选）\\n* 使用 [**MySQL**](https://www.mysql.com/) 做数据库服务；\\n* 使用 [**Nginx**](https://nginx.org/) 做网页服务器（Ghost的代理服务）；\\n* 使用 [**NodeJS**](https://nodejs.org/) 做后端服务；\\n* [**Ghost**](https://ghost.org/)一个开源的博客系统；\\n\\n## 基础设置\\n\\n### 查看一下系统信息：\\n\\n```\\ncat /etc/redhat-release  \\n```\\n> #>>> CentOS Linux release 7.3.1611 (Core)\\n\\n\\n### 更新一下系统，安装一些基础工具：\\n\\n阿里云的centos已经优化了yum的源，你也可以自行修改\\n```\\nyum update -y && yum upgrage -y && yum clean all\\n```\\ncurl, wget都是方便后边的下载\\nvim作为一个老牌Linux文本编辑工具，你值得拥有\\n```\\nyum install curl wget vim -y\\n```\\n\\n### 更新全系统的vim配置\\n```\\ncurl https://raw.githubusercontent.com/tonyc726/vim-for-server/master/vimrc > /etc/vimrc  \\n```\\n\\n## MySQL安装设置\\n由于CentOS7已经不带Mysql数据库了（默认的数据库是MariaDB，Mysql的一个分支），所以需要先安裝MySQL Repository（具体的版本号，可以参考 https://dev.mysql.com/downloads/repo/yum/）:\\n\\n### 安裝 MySQL Repository\\n```\\nrpm -Uvh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\\n```\\n### 安装MySQL数据库的服务器社区稳定版\\n```\\nyum install mysql-community-server -y\\n```\\n### 启动MySQL服务\\n```\\nsystemctl start mysqld.service\\n```\\n### 设置随系统自启动\\n```\\nsystemctl enable mysqld.service  \\n```\\n### 初始化设置\\n```\\nmysql_secure_installation\\n```\\n由于MySQL5.7默认会初始化Root用户的密码，所以在执行之前需要获取这个初始密码：\\n（本次设置中并没有执行如下操作，应为默认安装后第一次运行时不需密码，在初始化过程中会提示设置密码）\\n```\\ngrep \\\"password\\\" /var/log/mysqld.log  \\n```\\n\\n\\n### 创建Ghost需要的用户及数据库：\\n\\n运行以后输入刚才拿到的密码\\n```\\nmysql -uroot -p \\n```\\n添加新数据库blog，后面Ghost会用到\\n```\\nCREATE DATABASE blog;\\n```\\n添加新用户ghost（password替换为你需要的密码）\\n```\\nCREATE USER ghost IDENTIFIED BY 'password';\\n```\\n授予ghost用户在blog数据库上的所有权限\\n（password就是你刚才创建ghost账户时设置的密码）\\n```\\nGRANT ALL PRIVILEGES ON blog.* TO 'ghost'@'localhost' IDENTIFIED BY 'password';\\n```\\n刷新权限\\n（当执行过GRANT，CREATE USER，REVOKE命令之后，必须要执行刷新权限才能生效）\\n```\\nFLUSH PRIVILEGES;\\n```\\nCtrl+D 退出\\n\\n好了，以上就是MySQL部分\\n\\n## NodeJS安装设置\\n\\n推荐使用以下方式安装NodeJS\\n本系统使用V6稳定版，如需其它版本，你可以自行调整\\n```\\ncurl -sL https://rpm.nodesource.com/setup_6.x | sudo -E bash -  \\n```\\n### 安装NodeJS及其依赖包\\nyum install gcc-c++ make nodejs -y\\n\\nNodeJS安装以后，默认已经自带的NPM\\n不过npm之前一直被吐槽，建议***升级最新版或者用yarn代替***\\n### 升级npm至最新版本(^v5.0.4)\\n```\\nnpm install npm@latest -g\\n```\\n### 安装yarn代替（推荐）\\n```\\ncurl --silent --location https://rpm.nodesource.com/setup_6.x | bash -  \\nyum install yarn -y\\n```\\n\\n### 测试一下\\n```\\nnode -v\\n```\\n\\n> #>>> v6.11.0\\n```\\nnpm -v\\n```\\n> #>>> v5.1.0\\n```\\nyarn -v\\n```\\n> #>>> v0.27.5\\n\\n这里有个坑，如果直接使用yum install nodejs -y也是可以安装NodeJS的，不过nodesource维护的更加好，而且可以升级npm。\\n\\n如果你已经看到了最后输出的信息，那么久代表NodeJS已经就绪了。\\n## Nginx安装配置\\n\\n### 直接安装即可\\n```\\nyum install nginx -y\\n```\\n### 立即启动\\n```\\nsystemctl start nginx\\n```\\n### 设置开机自启动\\n```\\nsystemctl enable nginx  \\n```\\n\\n现在，打开你的浏览器，输入你的公网IP，不出意外，你就已经可以看到一个Nginx的欢迎页面了。\\n\\n不过，出于后期的扩展或者安全性考虑，我们需要为系统创建一个名为www的用户，专门用于管理网站.\\n\\n### 反向代理80端口\\n\\n众所周知，网站基本都以 80 端口作为默认端口（除非你不想让别人访问你的网站），也就是说：访问域名或服务器 IP 地址，实际上是在访问该服务器的 80 端口。而 Ghost 博客默认运行在 2368 端口上。\\n\\n为了输入域名或服务器 IP 地址就可以访问到你的 Ghost 博客，需要将访问 80 端口的请求，反向代理到 Ghost 的 2368 端口上。\\n\\n进入 Nginx 配置目录：\\n    ```\\n    cd /etc/nginx/conf.d\\n    ```\\n新建 Ghost 博客的 Nginx 配置文件：\\n```\\nvim ghost.conf\\n```\\n按 i 输入以下内容：\\n\\n> server {  \\n>     listen 80;\\n>     server_name loyalsoldier.me //这里修改为你的域名；如果没有域名，则改为服务器 IP 地址;\\n> \\n>     gzip on;\\n>     gzip_types text/plain application/xml text/css application/javascript application/json application/font-woff application/font-woff2 application/vnd.ms-fontobject application/x-font-ttf font/opentype application/pdf image/png image/bmp image/gif image/jpeg image/webp image/svg+xml;\\n>     gzip_proxied no-cache no-store private expired auth;\\n>     gzip_vary on;\\n>     gzip_min_length 1024;\\n> \\n>     location / {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>     }\\n> \\n>     location ~* .*\\\\.(jpg|jpeg|bmp|png|gif|ico|js|css|eot|woff|woff2|svg|ttf|otf)$ {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n> \\n>         add_header Cache-Control max-age=2592000;\\n>         expires    30d;\\n>         etag       on;\\n>     }\\n> }\\n\\n按 ESC 键结束编辑，输入 :wq 保存文件并退出编辑\\n使用 nginx -t 测试 Nginx 配置文件是否语法正确：\\n\\n```\\nsudo nginx -t\\n```\\n若输出的结果有 ok、successful 等字样，表示配置正确\\n\\n如果正确的话，重启Nginx服务\\n```\\nsystemctl restart nginx.service  \\n```\\n\\n\\n## 添加新用户\\n创建一个名为www的用户组\\n```\\nadduser www\\n```\\n\\n### 设置密码(请记录下你的密码，以后需要用到)\\n```\\npasswd www\\n```\\n\\n### 分配Root权限 - 让我们新创建的www用户拥有Root用户的权限\\n```\\ngpasswd -a www wheel\\n```\\n### 将nginx用户添加入www的用户组，方便后期的权限控制\\n```\\nusermod -a -G nginx,www nginx  \\n```\\n\\n## 安装ghost\\n以上就是Ghost需要用到的基础系统了，下面就来安装Ghost，新开一个Terminal窗口，用www账户登录：\\n```\\nssh www@xxx.xxx.xxx.xxx  \\n```\\n然后下载Ghost最新的代码。\\n\\n### 下载Ghost最新的稳定版\\n```\\ncurl -L https://ghost.org/zip/ghost-latest.zip -o ghost.zip\\n```\\n### 解压\\n```\\nunzip -uo ghost.zip -d ghost\\n```\\n### 进入Ghost的目录并安装生产环境的依赖\\n```\\ncd ghost && npm install --production\\n```\\n### 修改Ghost的config，修改数据库配置\\n```\\nvim config.js  \\n```\\n完整的config.js配置如下：\\n\\n> var path = require('path'),  \\n>     config;\\n> \\n> config = {  \\n>     production: {\\n>         url: 'https://www.xxxx.xxx',（换成服务器ip或者申请的域名）\\n>         mail: {},\\n>         database: {\\n>             client: 'mysql',（前面安装的mysql数据库，这里一定要对应）\\n>             connection: {\\n>                 host     : '127.0.0.1',\\n>                 user     : 'ghost', //用户名\\n>                 password : 'password', //ghost的密码，之前设置的\\n>                 database : 'blog', //数据库名\\n>                 charset  : 'utf8'\\n>             },\\n>             debug: false\\n>         },\\n> \\n>         server: {\\n>             host: '127.0.0.1',\\n>             port: '2368'\\n>         }\\n>     }\\n> };\\n> \\n> module.exports = config;  \\n\\n### 安装knex-migrator\\n实际上这个时候用生产模式运行ghost会报错，提示没有安装knex-migrator\\n需要使用下面指令安装，需要在ghost安装文件夹下面执行，但是执行之前需要先编辑***MigrtorConfig.js***文件。\\n\\n```\\nnpm install -g knex-migrator\\n```\\n\\n使用vim编写MigrtorConfig.js文件\\n\\n```\\nvim MigrtorConfig.js\\n```\\n\\n\\n\\n\\n\\n运行一下：\\n```\\nnpm start --production\\n```\\n如果看到下面的提示，证明你已经完成80%了：\\n\\n\\n> Ghost is running in production...  \\n> Your blog is now available on https://www.itony.net  \\n> Ctrl+C to shut down  \\n\\n### 问题及解决方案\\n在执行npm start --production的时候\\n\\n\\n\\n## 全局安装PM2\\n目前你是开着远程连接到你的服务器，一旦你把窗口关闭了，那么你刚才起的npm start --production可就悲剧了，如何避免呢，这时候我们就需要一个能帮我们在后台稳定运行node服务的工具了，目前比较火热的要数PM2了：\\n\\n``\\nyarn global add pm2 --prefix /usr/local\\n``\\n### 用PM2来启动Ghost的node服务\\n先切到ghost的目录，然后再运行\\n```\\nNODE_ENV=production pm2 start index.js --name \\\"blog\\\"\\n```\\n### 检查运行结果\\n```\\npm2 show blog  \\n```\\n\"}]],\"sections\":[[10,0]]}","page":false,"plaintext":"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\n什么是ghost？\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\n但是这并不影响我们搭建ghost服务器。吼吼吼~\n\n搭建准备\n在阿里云 [https://www.aliyun.com/]上购买了一年的ECS服务器，配置如下:\nCPU 1核；\n内存 2G；\n带宽 1Mbps；\n硬盘 40G。\n系统 CentOS 7.3 64位\n\n云服务器配置\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\n\n云服务器ECS——网络和安全——安全组——配置规则\n\n\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\n这里的设置主要是参考了阿里云的官方帮助文档 [https://help.aliyun.com/knowledge_detail/34403.html]。","published_at":"2017-09-28T13:41:32.000Z","slug":"shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost","status":"published","title":"搭建Ghost服务器","updated_at":"2017-09-28T15:50:35.000Z","updated_by":"1","tags":{"0":{"id":"59ccb425a744810195a3dc01","name":"技术","slug":"ji-zhu","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T08:34:45.000Z","updated_at":"2017-09-28T08:34:45.000Z","created_by":"1","updated_by":"1"},"1":{"id":"59cd12bfa744810195a3dc06","name":"博客","slug":"bo-ke","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T15:18:23.000Z","updated_at":"2017-09-28T15:18:23.000Z","created_by":"1","updated_by":"1"}},"author_id":"1"}}},"query":{"include":"tags"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"http://47.95.197.107","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/*","content-type":"application/json; charset=utf-8","etag":"W/\"3d3e-EChjXLA07J4C3X5fliTCQJRoxcQ\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"73ms"},"msg":"","time":"2017-09-29T01:36:24.247Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"fefb1380-a4b6-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/posts/59ccf296a744810195a3dc03/?include=tags","method":"PUT","originalUrl":"/ghost/api/v0.1/posts/59ccf296a744810195a3dc03/?include=tags","params":{"id":"59ccf296a744810195a3dc03"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","content-length":"16375","origin":"http://47.95.197.107","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"1.9","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{"posts":{"0":{"id":"59ccf296a744810195a3dc03","created_at":"2017-09-28T13:01:10.000Z","created_by":"1","featured":false,"feature_image":"/content/images/2017/09/ghost.png","codeinjection_foot":"","codeinjection_head":"","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\\n什么是ghost？\\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\\n但是这并不影响我们搭建ghost服务器。吼吼吼~\\n\\n# 搭建准备\\n在[**阿里云**](https://www.aliyun.com/)上购买了一年的ECS服务器，配置如下:\\nCPU 1核；\\n内存 2G；\\n带宽 1Mbps；\\n硬盘 40G。\\n系统 CentOS 7.3 64位\\n\\n# 云服务器配置\\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\\n> 云服务器ECS——网络和安全——安全组——配置规则\\n![--------](/content/images/2017/09/--------.jpg)\\n![-------](/content/images/2017/09/-------.jpg)\\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\\n这里的设置主要是参考了[**阿里云的官方帮助文档**](https://help.aliyun.com/knowledge_detail/34403.html)。\\n# 安装ghost\\n\\n## 需要用到的东西\\n\\n* 一个完成A记录解析设置的域名（建议做好ICP备案）；（可选）\\n* 使用 [**MySQL**](https://www.mysql.com/) 做数据库服务；\\n* 使用 [**Nginx**](https://nginx.org/) 做网页服务器（Ghost的代理服务）；\\n* 使用 [**NodeJS**](https://nodejs.org/) 做后端服务；\\n* [**Ghost**](https://ghost.org/)一个开源的博客系统；\\n\\n## 基础设置\\n\\n### 查看一下系统信息：\\n\\n```\\ncat /etc/redhat-release  \\n```\\n> #>>> CentOS Linux release 7.3.1611 (Core)\\n\\n\\n### 更新一下系统，安装一些基础工具：\\n\\n阿里云的centos已经优化了yum的源，你也可以自行修改\\n```\\nyum update -y && yum upgrage -y && yum clean all\\n```\\ncurl, wget都是方便后边的下载\\nvim作为一个老牌Linux文本编辑工具，你值得拥有\\n```\\nyum install curl wget vim -y\\n```\\n\\n### 更新全系统的vim配置\\n```\\ncurl https://raw.githubusercontent.com/tonyc726/vim-for-server/master/vimrc > /etc/vimrc  \\n```\\n\\n## MySQL安装设置\\n由于CentOS7已经不带Mysql数据库了（默认的数据库是MariaDB，Mysql的一个分支），所以需要先安裝MySQL Repository（具体的版本号，可以参考 https://dev.mysql.com/downloads/repo/yum/）:\\n\\n### 安裝 MySQL Repository\\n```\\nrpm -Uvh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\\n```\\n### 安装MySQL数据库的服务器社区稳定版\\n```\\nyum install mysql-community-server -y\\n```\\n### 启动MySQL服务\\n```\\nsystemctl start mysqld.service\\n```\\n### 设置随系统自启动\\n```\\nsystemctl enable mysqld.service  \\n```\\n### 初始化设置\\n```\\nmysql_secure_installation\\n```\\n由于MySQL5.7默认会初始化Root用户的密码，所以在执行之前需要获取这个初始密码：\\n（本次设置中并没有执行如下操作，应为默认安装后第一次运行时不需密码，在初始化过程中会提示设置密码）\\n```\\ngrep \\\"password\\\" /var/log/mysqld.log  \\n```\\n\\n\\n### 创建Ghost需要的用户及数据库：\\n\\n运行以后输入刚才拿到的密码\\n```\\nmysql -uroot -p \\n```\\n添加新数据库blog，后面Ghost会用到\\n```\\nCREATE DATABASE blog;\\n```\\n添加新用户ghost（password替换为你需要的密码）\\n```\\nCREATE USER ghost IDENTIFIED BY 'password';\\n```\\n授予ghost用户在blog数据库上的所有权限\\n（password就是你刚才创建ghost账户时设置的密码）\\n```\\nGRANT ALL PRIVILEGES ON blog.* TO 'ghost'@'localhost' IDENTIFIED BY 'password';\\n```\\n刷新权限\\n（当执行过GRANT，CREATE USER，REVOKE命令之后，必须要执行刷新权限才能生效）\\n```\\nFLUSH PRIVILEGES;\\n```\\nCtrl+D 退出\\n\\n好了，以上就是MySQL部分\\n\\n## NodeJS安装设置\\n\\n推荐使用以下方式安装NodeJS\\n本系统使用V6稳定版，如需其它版本，你可以自行调整\\n```\\ncurl -sL https://rpm.nodesource.com/setup_6.x | sudo -E bash -  \\n```\\n### 安装NodeJS及其依赖包\\nyum install gcc-c++ make nodejs -y\\n\\nNodeJS安装以后，默认已经自带的NPM\\n不过npm之前一直被吐槽，建议***升级最新版或者用yarn代替***\\n### 升级npm至最新版本(^v5.0.4)\\n```\\nnpm install npm@latest -g\\n```\\n### 安装yarn代替（推荐）\\n```\\ncurl --silent --location https://rpm.nodesource.com/setup_6.x | bash -  \\nyum install yarn -y\\n```\\n\\n### 测试一下\\n```\\nnode -v\\n```\\n\\n> #>>> v6.11.0\\n```\\nnpm -v\\n```\\n> #>>> v5.1.0\\n```\\nyarn -v\\n```\\n> #>>> v0.27.5\\n\\n这里有个坑，如果直接使用yum install nodejs -y也是可以安装NodeJS的，不过nodesource维护的更加好，而且可以升级npm。\\n\\n如果你已经看到了最后输出的信息，那么久代表NodeJS已经就绪了。\\n## Nginx安装配置\\n\\n### 直接安装即可\\n```\\nyum install nginx -y\\n```\\n### 立即启动\\n```\\nsystemctl start nginx\\n```\\n### 设置开机自启动\\n```\\nsystemctl enable nginx  \\n```\\n\\n现在，打开你的浏览器，输入你的公网IP，不出意外，你就已经可以看到一个Nginx的欢迎页面了。\\n\\n不过，出于后期的扩展或者安全性考虑，我们需要为系统创建一个名为www的用户，专门用于管理网站.\\n\\n### 反向代理80端口\\n\\n众所周知，网站基本都以 80 端口作为默认端口（除非你不想让别人访问你的网站），也就是说：访问域名或服务器 IP 地址，实际上是在访问该服务器的 80 端口。而 Ghost 博客默认运行在 2368 端口上。\\n\\n为了输入域名或服务器 IP 地址就可以访问到你的 Ghost 博客，需要将访问 80 端口的请求，反向代理到 Ghost 的 2368 端口上。\\n\\n进入 Nginx 配置目录：\\n    ```\\n    cd /etc/nginx/conf.d\\n    ```\\n新建 Ghost 博客的 Nginx 配置文件：\\n```\\nvim ghost.conf\\n```\\n按 i 输入以下内容：\\n\\n> server {  \\n>     listen 80;\\n>     server_name loyalsoldier.me //这里修改为你的域名；如果没有域名，则改为服务器 IP 地址;\\n> \\n>     gzip on;\\n>     gzip_types text/plain application/xml text/css application/javascript application/json application/font-woff application/font-woff2 application/vnd.ms-fontobject application/x-font-ttf font/opentype application/pdf image/png image/bmp image/gif image/jpeg image/webp image/svg+xml;\\n>     gzip_proxied no-cache no-store private expired auth;\\n>     gzip_vary on;\\n>     gzip_min_length 1024;\\n> \\n>     location / {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>     }\\n> \\n>     location ~* .*\\\\.(jpg|jpeg|bmp|png|gif|ico|js|css|eot|woff|woff2|svg|ttf|otf)$ {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n> \\n>         add_header Cache-Control max-age=2592000;\\n>         expires    30d;\\n>         etag       on;\\n>     }\\n> }\\n\\n按 ESC 键结束编辑，输入 :wq 保存文件并退出编辑\\n使用 nginx -t 测试 Nginx 配置文件是否语法正确：\\n\\n```\\nsudo nginx -t\\n```\\n若输出的结果有 ok、successful 等字样，表示配置正确\\n\\n如果正确的话，重启Nginx服务\\n```\\nsystemctl restart nginx.service  \\n```\\n\\n\\n## 添加新用户\\n创建一个名为www的用户组\\n```\\nadduser www\\n```\\n\\n### 设置密码(请记录下你的密码，以后需要用到)\\n```\\npasswd www\\n```\\n\\n### 分配Root权限 - 让我们新创建的www用户拥有Root用户的权限\\n```\\ngpasswd -a www wheel\\n```\\n### 将nginx用户添加入www的用户组，方便后期的权限控制\\n```\\nusermod -a -G nginx,www nginx  \\n```\\n\\n## 安装ghost\\n以上就是Ghost需要用到的基础系统了，下面就来安装Ghost，新开一个Terminal窗口，用www账户登录：\\n```\\nssh www@xxx.xxx.xxx.xxx  \\n```\\n然后下载Ghost最新的代码。\\n\\n### 下载Ghost最新的稳定版\\n```\\ncurl -L https://ghost.org/zip/ghost-latest.zip -o ghost.zip\\n```\\n### 解压\\n```\\nunzip -uo ghost.zip -d ghost\\n```\\n### 进入Ghost的目录并安装生产环境的依赖\\n```\\ncd ghost && npm install --production\\n```\\n### 修改Ghost的config，修改数据库配置\\n```\\nvim config.js  \\n```\\n完整的config.js配置如下：\\n\\n> var path = require('path'),  \\n>     config;\\n> \\n> config = {  \\n>     production: {\\n>         url: 'https://www.xxxx.xxx',（换成服务器ip或者申请的域名）\\n>         mail: {},\\n>         database: {\\n>             client: 'mysql',（前面安装的mysql数据库，这里一定要对应）\\n>             connection: {\\n>                 host     : '127.0.0.1',\\n>                 user     : 'ghost', //用户名\\n>                 password : 'password', //ghost的密码，之前设置的\\n>                 database : 'blog', //数据库名\\n>                 charset  : 'utf8'\\n>             },\\n>             debug: false\\n>         },\\n> \\n>         server: {\\n>             host: '127.0.0.1',\\n>             port: '2368'\\n>         }\\n>     }\\n> };\\n> \\n> module.exports = config;  \\n\\n### 安装knex-migrator\\n实际上这个时候用生产模式运行ghost会报错，提示没有安装knex-migrator\\n需要使用下面指令安装，需要在ghost安装文件夹下面执行，但是执行之前需要先编辑***MigrtorConfig.js***文件。\\n\\n```\\nnpm install -g knex-migrator\\n```\\n\\n使用vim编写MigrtorConfig.js文件\\n\\n```\\nvim MigrtorConfig.js\\n```\\n\\n\\n> module.exports = {\\n>     database: {\\n>         client: 'mysql',\\n>         connection: {\\n>             host: '127.0.0.1',\\n>             user: 'ghost',\\n>             password: 'password',（改成mysql的ghost用户密码）\\n>             charset: 'utf8',\\n>             name: 'blog'\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version',\\n>     subfolder: 'upgrades'  [default: versions]\\n> }\\n> \\n> module.exports = {\\n>     database: {\\n>         client: 'sqlite3',\\n>         connection: {\\n>             filename: 'path/to/your.db'\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version'\\n> }\\n> \\n\\n\\n运行一下：\\n```\\nnpm start --production\\n```\\n如果看到下面的提示，证明你已经完成80%了：\\n\\n\\n> Ghost is running in production...  \\n> Your blog is now available on https://www.itony.net  \\n> Ctrl+C to shut down  \\n\\n### 问题及解决方案\\n在执行npm start --production的时候\\n\\n\\n\\n## 全局安装PM2\\n目前你是开着远程连接到你的服务器，一旦你把窗口关闭了，那么你刚才起的npm start --production可就悲剧了，如何避免呢，这时候我们就需要一个能帮我们在后台稳定运行node服务的工具了，目前比较火热的要数PM2了：\\n\\n``\\nyarn global add pm2 --prefix /usr/local\\n``\\n### 用PM2来启动Ghost的node服务\\n先切到ghost的目录，然后再运行\\n```\\nNODE_ENV=production pm2 start index.js --name \\\"blog\\\"\\n```\\n### 检查运行结果\\n```\\npm2 show blog  \\n```\\n\"}]],\"sections\":[[10,0]]}","page":false,"plaintext":"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\n什么是ghost？\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\n但是这并不影响我们搭建ghost服务器。吼吼吼~\n\n搭建准备\n在阿里云 [https://www.aliyun.com/]上购买了一年的ECS服务器，配置如下:\nCPU 1核；\n内存 2G；\n带宽 1Mbps；\n硬盘 40G。\n系统 CentOS 7.3 64位\n\n云服务器配置\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\n\n云服务器ECS——网络和安全——安全组——配置规则\n\n\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\n这里的设置主要是参考了阿里云的官方帮助文档 [https://help.aliyun.com/knowledge_detail/34403.html]。","published_at":"2017-09-28T13:41:32.000Z","slug":"shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost","status":"published","title":"搭建Ghost服务器","updated_at":"2017-09-29T01:36:24.000Z","updated_by":"1","tags":{"0":{"id":"59ccb425a744810195a3dc01","name":"技术","slug":"ji-zhu","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T08:34:45.000Z","updated_at":"2017-09-28T08:34:45.000Z","created_by":"1","updated_by":"1"},"1":{"id":"59cd12bfa744810195a3dc06","name":"博客","slug":"bo-ke","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T15:18:23.000Z","updated_at":"2017-09-28T15:18:23.000Z","created_by":"1","updated_by":"1"}},"author_id":"1"}}},"query":{"include":"tags"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"http://47.95.197.107","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/*","content-type":"application/json; charset=utf-8","etag":"W/\"400b-kUfo3/XeBItSuYWNsRWRSf3Mu+I\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"55ms"},"msg":"","time":"2017-09-29T01:39:12.753Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"4860bfc0-a4b7-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/posts/59ccf296a744810195a3dc03/?include=tags","method":"PUT","originalUrl":"/ghost/api/v0.1/posts/59ccf296a744810195a3dc03/?include=tags","params":{"id":"59ccf296a744810195a3dc03"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","content-length":"16625","origin":"http://47.95.197.107","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"1.9","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{"posts":{"0":{"id":"59ccf296a744810195a3dc03","created_at":"2017-09-28T13:01:10.000Z","created_by":"1","featured":false,"feature_image":"/content/images/2017/09/ghost.png","codeinjection_foot":"","codeinjection_head":"","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\\n什么是ghost？\\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\\n但是这并不影响我们搭建ghost服务器。吼吼吼~\\n\\n# 搭建准备\\n在[**阿里云**](https://www.aliyun.com/)上购买了一年的ECS服务器，配置如下:\\nCPU 1核；\\n内存 2G；\\n带宽 1Mbps；\\n硬盘 40G。\\n系统 CentOS 7.3 64位\\n\\n# 云服务器配置\\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\\n> 云服务器ECS——网络和安全——安全组——配置规则\\n![--------](/content/images/2017/09/--------.jpg)\\n![-------](/content/images/2017/09/-------.jpg)\\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\\n这里的设置主要是参考了[**阿里云的官方帮助文档**](https://help.aliyun.com/knowledge_detail/34403.html)。\\n# 安装ghost\\n\\n## 需要用到的东西\\n\\n* 一个完成A记录解析设置的域名（建议做好ICP备案）；（可选）\\n* 使用 [**MySQL**](https://www.mysql.com/) 做数据库服务；\\n* 使用 [**Nginx**](https://nginx.org/) 做网页服务器（Ghost的代理服务）；\\n* 使用 [**NodeJS**](https://nodejs.org/) 做后端服务；\\n* [**Ghost**](https://ghost.org/)一个开源的博客系统；\\n\\n## 基础设置\\n\\n### 查看一下系统信息：\\n\\n```\\ncat /etc/redhat-release  \\n```\\n> #>>> CentOS Linux release 7.3.1611 (Core)\\n\\n\\n### 更新一下系统，安装一些基础工具：\\n\\n阿里云的centos已经优化了yum的源，你也可以自行修改\\n```\\nyum update -y && yum upgrage -y && yum clean all\\n```\\ncurl, wget都是方便后边的下载\\nvim作为一个老牌Linux文本编辑工具，你值得拥有\\n```\\nyum install curl wget vim -y\\n```\\n\\n### 更新全系统的vim配置\\n```\\ncurl https://raw.githubusercontent.com/tonyc726/vim-for-server/master/vimrc > /etc/vimrc  \\n```\\n\\n## MySQL安装设置\\n由于CentOS7已经不带Mysql数据库了（默认的数据库是MariaDB，Mysql的一个分支），所以需要先安裝MySQL Repository（具体的版本号，可以参考 https://dev.mysql.com/downloads/repo/yum/）:\\n\\n### 安裝 MySQL Repository\\n```\\nrpm -Uvh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\\n```\\n### 安装MySQL数据库的服务器社区稳定版\\n```\\nyum install mysql-community-server -y\\n```\\n### 启动MySQL服务\\n```\\nsystemctl start mysqld.service\\n```\\n### 设置随系统自启动\\n```\\nsystemctl enable mysqld.service  \\n```\\n### 初始化设置\\n```\\nmysql_secure_installation\\n```\\n由于MySQL5.7默认会初始化Root用户的密码，所以在执行之前需要获取这个初始密码：\\n（本次设置中并没有执行如下操作，应为默认安装后第一次运行时不需密码，在初始化过程中会提示设置密码）\\n```\\ngrep \\\"password\\\" /var/log/mysqld.log  \\n```\\n\\n\\n### 创建Ghost需要的用户及数据库：\\n\\n运行以后输入刚才拿到的密码\\n```\\nmysql -uroot -p \\n```\\n添加新数据库blog，后面Ghost会用到\\n```\\nCREATE DATABASE blog;\\n```\\n添加新用户ghost（password替换为你需要的密码）\\n```\\nCREATE USER ghost IDENTIFIED BY 'password';\\n```\\n授予ghost用户在blog数据库上的所有权限\\n（password就是你刚才创建ghost账户时设置的密码）\\n```\\nGRANT ALL PRIVILEGES ON blog.* TO 'ghost'@'localhost' IDENTIFIED BY 'password';\\n```\\n刷新权限\\n（当执行过GRANT，CREATE USER，REVOKE命令之后，必须要执行刷新权限才能生效）\\n```\\nFLUSH PRIVILEGES;\\n```\\nCtrl+D 退出\\n\\n好了，以上就是MySQL部分\\n\\n## NodeJS安装设置\\n\\n推荐使用以下方式安装NodeJS\\n本系统使用V6稳定版，如需其它版本，你可以自行调整\\n```\\ncurl -sL https://rpm.nodesource.com/setup_6.x | sudo -E bash -  \\n```\\n### 安装NodeJS及其依赖包\\nyum install gcc-c++ make nodejs -y\\n\\nNodeJS安装以后，默认已经自带的NPM\\n不过npm之前一直被吐槽，建议***升级最新版或者用yarn代替***\\n### 升级npm至最新版本(^v5.0.4)\\n```\\nnpm install npm@latest -g\\n```\\n### 安装yarn代替（推荐）\\n```\\ncurl --silent --location https://rpm.nodesource.com/setup_6.x | bash -  \\nyum install yarn -y\\n```\\n\\n### 测试一下\\n```\\nnode -v\\n```\\n\\n> #>>> v6.11.0\\n```\\nnpm -v\\n```\\n> #>>> v5.1.0\\n```\\nyarn -v\\n```\\n> #>>> v0.27.5\\n\\n这里有个坑，如果直接使用yum install nodejs -y也是可以安装NodeJS的，不过nodesource维护的更加好，而且可以升级npm。\\n\\n如果你已经看到了最后输出的信息，那么久代表NodeJS已经就绪了。\\n## Nginx安装配置\\n\\n### 直接安装即可\\n```\\nyum install nginx -y\\n```\\n### 立即启动\\n```\\nsystemctl start nginx\\n```\\n### 设置开机自启动\\n```\\nsystemctl enable nginx  \\n```\\n\\n现在，打开你的浏览器，输入你的公网IP，不出意外，你就已经可以看到一个Nginx的欢迎页面了。\\n\\n不过，出于后期的扩展或者安全性考虑，我们需要为系统创建一个名为www的用户，专门用于管理网站.\\n\\n### 反向代理80端口\\n\\n众所周知，网站基本都以 80 端口作为默认端口（除非你不想让别人访问你的网站），也就是说：访问域名或服务器 IP 地址，实际上是在访问该服务器的 80 端口。而 Ghost 博客默认运行在 2368 端口上。\\n\\n为了输入域名或服务器 IP 地址就可以访问到你的 Ghost 博客，需要将访问 80 端口的请求，反向代理到 Ghost 的 2368 端口上。\\n\\n进入 Nginx 配置目录：\\n    ```\\n    cd /etc/nginx/conf.d\\n    ```\\n新建 Ghost 博客的 Nginx 配置文件：\\n```\\nvim ghost.conf\\n```\\n按 i 输入以下内容：\\n\\n> server {  \\n>     listen 80;\\n>     server_name loyalsoldier.me //这里修改为你的域名；如果没有域名，则改为服务器 IP 地址;\\n> \\n>     gzip on;\\n>     gzip_types text/plain application/xml text/css application/javascript application/json application/font-woff application/font-woff2 application/vnd.ms-fontobject application/x-font-ttf font/opentype application/pdf image/png image/bmp image/gif image/jpeg image/webp image/svg+xml;\\n>     gzip_proxied no-cache no-store private expired auth;\\n>     gzip_vary on;\\n>     gzip_min_length 1024;\\n> \\n>     location / {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>     }\\n> \\n>     location ~* .*\\\\.(jpg|jpeg|bmp|png|gif|ico|js|css|eot|woff|woff2|svg|ttf|otf)$ {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n> \\n>         add_header Cache-Control max-age=2592000;\\n>         expires    30d;\\n>         etag       on;\\n>     }\\n> }\\n\\n按 ESC 键结束编辑，输入 :wq 保存文件并退出编辑\\n使用 nginx -t 测试 Nginx 配置文件是否语法正确：\\n\\n```\\nsudo nginx -t\\n```\\n若输出的结果有 ok、successful 等字样，表示配置正确\\n\\n如果正确的话，重启Nginx服务\\n```\\nsystemctl restart nginx.service  \\n```\\n\\n\\n## 添加新用户\\n创建一个名为www的用户组\\n```\\nadduser www\\n```\\n\\n### 设置密码(请记录下你的密码，以后需要用到)\\n```\\npasswd www\\n```\\n\\n### 分配Root权限 - 让我们新创建的www用户拥有Root用户的权限\\n```\\ngpasswd -a www wheel\\n```\\n### 将nginx用户添加入www的用户组，方便后期的权限控制\\n```\\nusermod -a -G nginx,www nginx  \\n```\\n\\n## 安装ghost\\n以上就是Ghost需要用到的基础系统了，下面就来安装Ghost，新开一个Terminal窗口，用www账户登录：\\n```\\nssh www@xxx.xxx.xxx.xxx  \\n```\\n然后下载Ghost最新的代码。\\n\\n### 下载Ghost最新的稳定版\\n```\\ncurl -L https://ghost.org/zip/ghost-latest.zip -o ghost.zip\\n```\\n### 解压\\n```\\nunzip -uo ghost.zip -d ghost\\n```\\n### 进入Ghost的目录并安装生产环境的依赖\\n```\\ncd ghost && npm install --production\\n```\\n### 修改Ghost的config，修改数据库配置\\n```\\nvim config.js  \\n```\\n完整的config.js配置如下：\\n\\n> var path = require('path'),  \\n>     config;\\n> \\n> config = {  \\n>     production: {\\n>         url: 'https://www.xxxx.xxx',（换成服务器ip或者申请的域名）\\n>         mail: {},\\n>         database: {\\n>             client: 'mysql',（前面安装的mysql数据库，这里一定要对应）\\n>             connection: {\\n>                 host     : '127.0.0.1',\\n>                 user     : 'ghost', //用户名\\n>                 password : 'password', //ghost的密码，之前设置的\\n>                 database : 'blog', //数据库名\\n>                 charset  : 'utf8'\\n>             },\\n>             debug: false\\n>         },\\n> \\n>         server: {\\n>             host: '127.0.0.1',\\n>             port: '2368'\\n>         }\\n>     }\\n> };\\n> \\n> module.exports = config;  \\n\\n### 安装knex-migrator\\n实际上这个时候用生产模式运行ghost会报错，提示没有安装knex-migrator\\n需要使用下面指令安装，需要在ghost安装文件夹下面执行，但是执行之前需要先编辑***MigrtorConfig.js***文件。\\n\\n```\\nnpm install -g knex-migrator\\n```\\n\\n使用vim编写MigrtorConfig.js文件\\n\\n```\\nvim MigrtorConfig.js\\n```\\n\\n\\n> module.exports = {\\n>     database: {\\n>         client: 'mysql',\\n>         connection: {\\n>             host: '127.0.0.1',\\n>             user: 'ghost',（之前mysql设置时建立的用户名）\\n>             password: 'password',（改成mysql的ghost用户密码）\\n>             charset: 'utf8',\\n>             name: 'blog'（之前mysql设置时建立的数据库）\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version',\\n>  /**\\n>     subfolder: 'upgrades'  [default: versions]\\n>     （这一部分在执行时总出问题，就注释掉了）\\n>  */\\n> }\\n> （下面应该是数据库使用sqlite3时的设置，可以不用设置）\\n> module.exports = {\\n>     database: {\\n>         client: 'sqlite3',\\n>         connection: {\\n>             filename: 'path/to/your.db'\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version'\\n> }\\n> \\n\\n\\n运行一下：\\n```\\nnpm start --production\\n```\\n如果看到下面的提示，证明你已经完成80%了：\\n\\n\\n> Ghost is running in production...  \\n> Your blog is now available on https://www.itony.net  \\n> Ctrl+C to shut down  \\n\\n### 问题及解决方案\\n在执行npm start --production的时候\\n\\n\\n\\n## 全局安装PM2\\n目前你是开着远程连接到你的服务器，一旦你把窗口关闭了，那么你刚才起的npm start --production可就悲剧了，如何避免呢，这时候我们就需要一个能帮我们在后台稳定运行node服务的工具了，目前比较火热的要数PM2了：\\n\\n``\\nyarn global add pm2 --prefix /usr/local\\n``\\n### 用PM2来启动Ghost的node服务\\n先切到ghost的目录，然后再运行\\n```\\nNODE_ENV=production pm2 start index.js --name \\\"blog\\\"\\n```\\n### 检查运行结果\\n```\\npm2 show blog  \\n```\\n\"}]],\"sections\":[[10,0]]}","page":false,"plaintext":"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\n什么是ghost？\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\n但是这并不影响我们搭建ghost服务器。吼吼吼~\n\n搭建准备\n在阿里云 [https://www.aliyun.com/]上购买了一年的ECS服务器，配置如下:\nCPU 1核；\n内存 2G；\n带宽 1Mbps；\n硬盘 40G。\n系统 CentOS 7.3 64位\n\n云服务器配置\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\n\n云服务器ECS——网络和安全——安全组——配置规则\n\n\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\n这里的设置主要是参考了阿里云的官方帮助文档 [https://help.aliyun.com/knowledge_detail/34403.html]。","published_at":"2017-09-28T13:41:32.000Z","slug":"shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost","status":"published","title":"搭建Ghost服务器","updated_at":"2017-09-29T01:39:12.000Z","updated_by":"1","tags":{"0":{"id":"59ccb425a744810195a3dc01","name":"技术","slug":"ji-zhu","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T08:34:45.000Z","updated_at":"2017-09-28T08:34:45.000Z","created_by":"1","updated_by":"1"},"1":{"id":"59cd12bfa744810195a3dc06","name":"博客","slug":"bo-ke","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T15:18:23.000Z","updated_at":"2017-09-28T15:18:23.000Z","created_by":"1","updated_by":"1"}},"author_id":"1"}}},"query":{"include":"tags"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"http://47.95.197.107","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/*","content-type":"application/json; charset=utf-8","etag":"W/\"4105-ih9gYk3pF36qN5c8z5/KWMkqc2g\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"60ms"},"msg":"","time":"2017-09-29T01:41:15.898Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"52e5c5d0-a4b7-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/posts/59ccf296a744810195a3dc03/?include=tags","method":"PUT","originalUrl":"/ghost/api/v0.1/posts/59ccf296a744810195a3dc03/?include=tags","params":{"id":"59ccf296a744810195a3dc03"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","content-length":"16666","origin":"http://47.95.197.107","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"1.9","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{"posts":{"0":{"id":"59ccf296a744810195a3dc03","created_at":"2017-09-28T13:01:10.000Z","created_by":"1","featured":false,"feature_image":"/content/images/2017/09/ghost.png","codeinjection_foot":"","codeinjection_head":"","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\\n什么是ghost？\\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\\n但是这并不影响我们搭建ghost服务器。吼吼吼~\\n\\n# 搭建准备\\n在[**阿里云**](https://www.aliyun.com/)上购买了一年的ECS服务器，配置如下:\\nCPU 1核；\\n内存 2G；\\n带宽 1Mbps；\\n硬盘 40G。\\n系统 CentOS 7.3 64位\\n\\n# 云服务器配置\\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\\n> 云服务器ECS——网络和安全——安全组——配置规则\\n![--------](/content/images/2017/09/--------.jpg)\\n![-------](/content/images/2017/09/-------.jpg)\\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\\n这里的设置主要是参考了[**阿里云的官方帮助文档**](https://help.aliyun.com/knowledge_detail/34403.html)。\\n# 安装ghost\\n\\n## 需要用到的东西\\n\\n* 一个完成A记录解析设置的域名（建议做好ICP备案）；（可选）\\n* 使用 [**MySQL**](https://www.mysql.com/) 做数据库服务；\\n* 使用 [**Nginx**](https://nginx.org/) 做网页服务器（Ghost的代理服务）；\\n* 使用 [**NodeJS**](https://nodejs.org/) 做后端服务；\\n* [**Ghost**](https://ghost.org/)一个开源的博客系统；\\n\\n## 基础设置\\n\\n### 查看一下系统信息：\\n\\n```\\ncat /etc/redhat-release  \\n```\\n> #>>> CentOS Linux release 7.3.1611 (Core)\\n\\n\\n### 更新一下系统，安装一些基础工具：\\n\\n阿里云的centos已经优化了yum的源，你也可以自行修改\\n```\\nyum update -y && yum upgrage -y && yum clean all\\n```\\ncurl, wget都是方便后边的下载\\nvim作为一个老牌Linux文本编辑工具，你值得拥有\\n```\\nyum install curl wget vim -y\\n```\\n\\n### 更新全系统的vim配置\\n```\\ncurl https://raw.githubusercontent.com/tonyc726/vim-for-server/master/vimrc > /etc/vimrc  \\n```\\n\\n## MySQL安装设置\\n由于CentOS7已经不带Mysql数据库了（默认的数据库是MariaDB，Mysql的一个分支），所以需要先安裝MySQL Repository（具体的版本号，可以参考 https://dev.mysql.com/downloads/repo/yum/）:\\n\\n### 安裝 MySQL Repository\\n```\\nrpm -Uvh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\\n```\\n### 安装MySQL数据库的服务器社区稳定版\\n```\\nyum install mysql-community-server -y\\n```\\n### 启动MySQL服务\\n```\\nsystemctl start mysqld.service\\n```\\n### 设置随系统自启动\\n```\\nsystemctl enable mysqld.service  \\n```\\n### 初始化设置\\n```\\nmysql_secure_installation\\n```\\n由于MySQL5.7默认会初始化Root用户的密码，所以在执行之前需要获取这个初始密码：\\n（本次设置中并没有执行如下操作，应为默认安装后第一次运行时不需密码，在初始化过程中会提示设置密码）\\n```\\ngrep \\\"password\\\" /var/log/mysqld.log  \\n```\\n\\n\\n### 创建Ghost需要的用户及数据库：\\n\\n运行以后输入刚才拿到的密码\\n```\\nmysql -uroot -p \\n```\\n添加新数据库blog，后面Ghost会用到\\n```\\nCREATE DATABASE blog;\\n```\\n添加新用户ghost（password替换为你需要的密码）\\n```\\nCREATE USER ghost IDENTIFIED BY 'password';\\n```\\n授予ghost用户在blog数据库上的所有权限\\n（password就是你刚才创建ghost账户时设置的密码）\\n```\\nGRANT ALL PRIVILEGES ON blog.* TO 'ghost'@'localhost' IDENTIFIED BY 'password';\\n```\\n刷新权限\\n（当执行过GRANT，CREATE USER，REVOKE命令之后，必须要执行刷新权限才能生效）\\n```\\nFLUSH PRIVILEGES;\\n```\\nCtrl+D 退出\\n\\n好了，以上就是MySQL部分\\n\\n## NodeJS安装设置\\n\\n推荐使用以下方式安装NodeJS\\n本系统使用V6稳定版，如需其它版本，你可以自行调整\\n```\\ncurl -sL https://rpm.nodesource.com/setup_6.x | sudo -E bash -  \\n```\\n### 安装NodeJS及其依赖包\\nyum install gcc-c++ make nodejs -y\\n\\nNodeJS安装以后，默认已经自带的NPM\\n不过npm之前一直被吐槽，建议***升级最新版或者用yarn代替***\\n### 升级npm至最新版本(^v5.0.4)\\n```\\nnpm install npm@latest -g\\n```\\n### 安装yarn代替（推荐）\\n```\\ncurl --silent --location https://rpm.nodesource.com/setup_6.x | bash -  \\nyum install yarn -y\\n```\\n\\n### 测试一下\\n```\\nnode -v\\n```\\n\\n> #>>> v6.11.0\\n```\\nnpm -v\\n```\\n> #>>> v5.1.0\\n```\\nyarn -v\\n```\\n> #>>> v0.27.5\\n\\n这里有个坑，如果直接使用yum install nodejs -y也是可以安装NodeJS的，不过nodesource维护的更加好，而且可以升级npm。\\n\\n如果你已经看到了最后输出的信息，那么久代表NodeJS已经就绪了。\\n## Nginx安装配置\\n\\n### 直接安装即可\\n```\\nyum install nginx -y\\n```\\n### 立即启动\\n```\\nsystemctl start nginx\\n```\\n### 设置开机自启动\\n```\\nsystemctl enable nginx  \\n```\\n\\n现在，打开你的浏览器，输入你的公网IP，不出意外，你就已经可以看到一个Nginx的欢迎页面了。\\n\\n不过，出于后期的扩展或者安全性考虑，我们需要为系统创建一个名为www的用户，专门用于管理网站.\\n\\n### 反向代理80端口\\n\\n众所周知，网站基本都以 80 端口作为默认端口（除非你不想让别人访问你的网站），也就是说：访问域名或服务器 IP 地址，实际上是在访问该服务器的 80 端口。而 Ghost 博客默认运行在 2368 端口上。\\n\\n为了输入域名或服务器 IP 地址就可以访问到你的 Ghost 博客，需要将访问 80 端口的请求，反向代理到 Ghost 的 2368 端口上。\\n\\n进入 Nginx 配置目录：\\n    ```\\n    cd /etc/nginx/conf.d\\n    ```\\n新建 Ghost 博客的 Nginx 配置文件：\\n```\\nvim ghost.conf\\n```\\n按 i 输入以下内容：\\n\\n> server {  \\n>     listen 80;\\n>     server_name loyalsoldier.me //这里修改为你的域名；如果没有域名，则改为服务器 IP 地址;\\n> \\n>     gzip on;\\n>     gzip_types text/plain application/xml text/css application/javascript application/json application/font-woff application/font-woff2 application/vnd.ms-fontobject application/x-font-ttf font/opentype application/pdf image/png image/bmp image/gif image/jpeg image/webp image/svg+xml;\\n>     gzip_proxied no-cache no-store private expired auth;\\n>     gzip_vary on;\\n>     gzip_min_length 1024;\\n> \\n>     location / {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>     }\\n> \\n>     location ~* .*\\\\.(jpg|jpeg|bmp|png|gif|ico|js|css|eot|woff|woff2|svg|ttf|otf)$ {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n> \\n>         add_header Cache-Control max-age=2592000;\\n>         expires    30d;\\n>         etag       on;\\n>     }\\n> }\\n\\n按 ESC 键结束编辑，输入 :wq 保存文件并退出编辑\\n使用 nginx -t 测试 Nginx 配置文件是否语法正确：\\n\\n```\\nsudo nginx -t\\n```\\n若输出的结果有 ok、successful 等字样，表示配置正确\\n\\n如果正确的话，重启Nginx服务\\n```\\nsystemctl restart nginx.service  \\n```\\n\\n\\n## 添加新用户\\n创建一个名为www的用户组\\n```\\nadduser www\\n```\\n\\n### 设置密码(请记录下你的密码，以后需要用到)\\n```\\npasswd www\\n```\\n\\n### 分配Root权限 - 让我们新创建的www用户拥有Root用户的权限\\n```\\ngpasswd -a www wheel\\n```\\n### 将nginx用户添加入www的用户组，方便后期的权限控制\\n```\\nusermod -a -G nginx,www nginx  \\n```\\n\\n## 安装ghost\\n以上就是Ghost需要用到的基础系统了，下面就来安装Ghost，新开一个Terminal窗口，用www账户登录：\\n```\\nssh www@xxx.xxx.xxx.xxx  \\n```\\n然后下载Ghost最新的代码。\\n\\n### 下载Ghost最新的稳定版\\n```\\ncurl -L https://ghost.org/zip/ghost-latest.zip -o ghost.zip\\n```\\n### 解压\\n```\\nunzip -uo ghost.zip -d ghost\\n```\\n### 进入Ghost的目录并安装生产环境的依赖\\n```\\ncd ghost && npm install --production\\n```\\n### 修改Ghost的config，修改数据库配置\\n```\\nvim config.js  \\n```\\n完整的config.js配置如下：\\n\\n> var path = require('path'),  \\n>     config;\\n> \\n> config = {  \\n>     production: {\\n>         url: 'https://www.xxxx.xxx',（换成服务器ip或者申请的域名）\\n>         mail: {},\\n>         database: {\\n>             client: 'mysql',（前面安装的mysql数据库，这里一定要对应）\\n>             connection: {\\n>                 host     : '127.0.0.1',\\n>                 user     : 'ghost', //用户名\\n>                 password : 'password', //ghost的密码，之前设置的\\n>                 database : 'blog', //数据库名\\n>                 charset  : 'utf8'\\n>             },\\n>             debug: false\\n>         },\\n> \\n>         server: {\\n>             host: '127.0.0.1',\\n>             port: '2368'\\n>         }\\n>     }\\n> };\\n> \\n> module.exports = config;  \\n\\n### 安装knex-migrator\\n实际上这个时候用生产模式运行ghost会报错，提示没有安装knex-migrator\\n需要使用下面指令安装，需要在ghost安装文件夹下面执行，但是执行之前需要先编辑***MigrtorConfig.js***文件。\\n\\n```\\nnpm install -g knex-migrator\\n```\\n\\n使用vim编写MigrtorConfig.js文件\\n\\n```\\nvim MigrtorConfig.js\\n```\\n\\n\\n> module.exports = {\\n>     database: {\\n>         client: 'mysql',\\n>         connection: {\\n>             host: '127.0.0.1',\\n>             user: 'ghost',（之前mysql设置时建立的用户名）\\n>             password: 'password',（改成mysql的ghost用户密码）\\n>             charset: 'utf8',\\n>             name: 'blog'（之前mysql设置时建立的数据库）\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version',\\n>  /**\\n>     subfolder: 'upgrades'  [default: versions]\\n>     （这一部分在执行时总出问题，就注释掉了）\\n>  */\\n> }\\n> （下面应该是数据库使用sqlite3时的设置，由于本方案使用的mysql，所以可以不用写进去）\\n> module.exports = {\\n>     database: {\\n>         client: 'sqlite3',\\n>         connection: {\\n>             filename: 'path/to/your.db'\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version'\\n> }\\n> \\n\\n\\n运行一下：\\n```\\nnpm start --production\\n```\\n如果看到下面的提示，证明你已经完成80%了：\\n\\n\\n> Ghost is running in production...  \\n> Your blog is now available on https://www.itony.net  \\n> Ctrl+C to shut down  \\n\\n### 问题及解决方案\\n在执行npm start --production的时候\\n\\n\\n\\n## 全局安装PM2\\n目前你是开着远程连接到你的服务器，一旦你把窗口关闭了，那么你刚才起的npm start --production可就悲剧了，如何避免呢，这时候我们就需要一个能帮我们在后台稳定运行node服务的工具了，目前比较火热的要数PM2了：\\n\\n``\\nyarn global add pm2 --prefix /usr/local\\n``\\n### 用PM2来启动Ghost的node服务\\n先切到ghost的目录，然后再运行\\n```\\nNODE_ENV=production pm2 start index.js --name \\\"blog\\\"\\n```\\n### 检查运行结果\\n```\\npm2 show blog  \\n```\\n\"}]],\"sections\":[[10,0]]}","page":false,"plaintext":"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\n什么是ghost？\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\n但是这并不影响我们搭建ghost服务器。吼吼吼~\n\n搭建准备\n在阿里云 [https://www.aliyun.com/]上购买了一年的ECS服务器，配置如下:\nCPU 1核；\n内存 2G；\n带宽 1Mbps；\n硬盘 40G。\n系统 CentOS 7.3 64位\n\n云服务器配置\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\n\n云服务器ECS——网络和安全——安全组——配置规则\n\n\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\n这里的设置主要是参考了阿里云的官方帮助文档 [https://help.aliyun.com/knowledge_detail/34403.html]。","published_at":"2017-09-28T13:41:32.000Z","slug":"shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost","status":"published","title":"搭建Ghost服务器","updated_at":"2017-09-29T01:41:15.000Z","updated_by":"1","tags":{"0":{"id":"59ccb425a744810195a3dc01","name":"技术","slug":"ji-zhu","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T08:34:45.000Z","updated_at":"2017-09-28T08:34:45.000Z","created_by":"1","updated_by":"1"},"1":{"id":"59cd12bfa744810195a3dc06","name":"博客","slug":"bo-ke","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T15:18:23.000Z","updated_at":"2017-09-28T15:18:23.000Z","created_by":"1","updated_by":"1"}},"author_id":"1"}}},"query":{"include":"tags"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"http://47.95.197.107","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/*","content-type":"application/json; charset=utf-8","etag":"W/\"412e-q9WqgKHENXJtDcs48/USJy6p+Cs\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"55ms"},"msg":"","time":"2017-09-29T01:41:33.543Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"88b1bed0-a4b7-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/posts/59ccf296a744810195a3dc03/?include=tags","method":"PUT","originalUrl":"/ghost/api/v0.1/posts/59ccf296a744810195a3dc03/?include=tags","params":{"id":"59ccf296a744810195a3dc03"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","content-length":"16645","origin":"http://47.95.197.107","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"1.9","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{"posts":{"0":{"id":"59ccf296a744810195a3dc03","created_at":"2017-09-28T13:01:10.000Z","created_by":"1","featured":false,"feature_image":"/content/images/2017/09/ghost.png","codeinjection_foot":"","codeinjection_head":"","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\\n什么是ghost？\\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\\n但是这并不影响我们搭建ghost服务器。吼吼吼~\\n\\n# 搭建准备\\n在[**阿里云**](https://www.aliyun.com/)上购买了一年的ECS服务器，配置如下:\\nCPU 1核；\\n内存 2G；\\n带宽 1Mbps；\\n硬盘 40G。\\n系统 CentOS 7.3 64位\\n\\n# 云服务器配置\\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\\n> 云服务器ECS——网络和安全——安全组——配置规则\\n![--------](/content/images/2017/09/--------.jpg)\\n![-------](/content/images/2017/09/-------.jpg)\\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\\n这里的设置主要是参考了[**阿里云的官方帮助文档**](https://help.aliyun.com/knowledge_detail/34403.html)。\\n# 安装ghost\\n\\n## 需要用到的东西\\n\\n* 一个完成A记录解析设置的域名（建议做好ICP备案）；（可选）\\n* 使用 [**MySQL**](https://www.mysql.com/) 做数据库服务；\\n* 使用 [**Nginx**](https://nginx.org/) 做网页服务器（Ghost的代理服务）；\\n* 使用 [**NodeJS**](https://nodejs.org/) 做后端服务；\\n* [**Ghost**](https://ghost.org/)一个开源的博客系统；\\n\\n## 基础设置\\n\\n### 查看一下系统信息：\\n\\n```\\ncat /etc/redhat-release  \\n```\\n> #>>> CentOS Linux release 7.3.1611 (Core)\\n\\n\\n### 更新一下系统，安装一些基础工具：\\n\\n阿里云的centos已经优化了yum的源，你也可以自行修改\\n```\\nyum update -y && yum upgrage -y && yum clean all\\n```\\ncurl, wget都是方便后边的下载\\nvim作为一个老牌Linux文本编辑工具，你值得拥有\\n```\\nyum install curl wget vim -y\\n```\\n\\n### 更新全系统的vim配置\\n```\\ncurl https://raw.githubusercontent.com/tonyc726/vim-for-server/master/vimrc > /etc/vimrc  \\n```\\n\\n## MySQL安装设置\\n由于CentOS7已经不带Mysql数据库了（默认的数据库是MariaDB，Mysql的一个分支），所以需要先安裝MySQL Repository（具体的版本号，可以参考 https://dev.mysql.com/downloads/repo/yum/）:\\n\\n### 安裝 MySQL Repository\\n```\\nrpm -Uvh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\\n```\\n### 安装MySQL数据库的服务器社区稳定版\\n```\\nyum install mysql-community-server -y\\n```\\n### 启动MySQL服务\\n```\\nsystemctl start mysqld.service\\n```\\n### 设置随系统自启动\\n```\\nsystemctl enable mysqld.service  \\n```\\n### 初始化设置\\n```\\nmysql_secure_installation\\n```\\n由于MySQL5.7默认会初始化Root用户的密码，所以在执行之前需要获取这个初始密码：\\n（本次设置中并没有执行如下操作，应为默认安装后第一次运行时不需密码，在初始化过程中会提示设置密码）\\n```\\ngrep \\\"password\\\" /var/log/mysqld.log  \\n```\\n\\n\\n### 创建Ghost需要的用户及数据库：\\n\\n运行以后输入刚才拿到的密码\\n```\\nmysql -uroot -p \\n```\\n添加新数据库blog，后面Ghost会用到\\n```\\nCREATE DATABASE blog;\\n```\\n添加新用户ghost（password替换为你需要的密码）\\n```\\nCREATE USER ghost IDENTIFIED BY 'password';\\n```\\n授予ghost用户在blog数据库上的所有权限\\n（password就是你刚才创建ghost账户时设置的密码）\\n```\\nGRANT ALL PRIVILEGES ON blog.* TO 'ghost'@'localhost' IDENTIFIED BY 'password';\\n```\\n刷新权限\\n（当执行过GRANT，CREATE USER，REVOKE命令之后，必须要执行刷新权限才能生效）\\n```\\nFLUSH PRIVILEGES;\\n```\\nCtrl+D 退出\\n\\n好了，以上就是MySQL部分\\n\\n## NodeJS安装设置\\n\\n推荐使用以下方式安装NodeJS\\n本系统使用V6稳定版，如需其它版本，你可以自行调整\\n```\\ncurl -sL https://rpm.nodesource.com/setup_6.x | sudo -E bash -  \\n```\\n### 安装NodeJS及其依赖包\\nyum install gcc-c++ make nodejs -y\\n\\nNodeJS安装以后，默认已经自带的NPM\\n不过npm之前一直被吐槽，建议***升级最新版或者用yarn代替***\\n### 升级npm至最新版本(^v5.0.4)\\n```\\nnpm install npm@latest -g\\n```\\n### 安装yarn代替（推荐）\\n```\\ncurl --silent --location https://rpm.nodesource.com/setup_6.x | bash -  \\nyum install yarn -y\\n```\\n\\n### 测试一下\\n```\\nnode -v\\n```\\n\\n> #>>> v6.11.0\\n```\\nnpm -v\\n```\\n> #>>> v5.1.0\\n```\\nyarn -v\\n```\\n> #>>> v0.27.5\\n\\n这里有个坑，如果直接使用yum install nodejs -y也是可以安装NodeJS的，不过nodesource维护的更加好，而且可以升级npm。\\n\\n如果你已经看到了最后输出的信息，那么久代表NodeJS已经就绪了。\\n## Nginx安装配置\\n\\n### 直接安装即可\\n```\\nyum install nginx -y\\n```\\n### 立即启动\\n```\\nsystemctl start nginx\\n```\\n### 设置开机自启动\\n```\\nsystemctl enable nginx  \\n```\\n\\n现在，打开你的浏览器，输入你的公网IP，不出意外，你就已经可以看到一个Nginx的欢迎页面了。\\n\\n不过，出于后期的扩展或者安全性考虑，我们需要为系统创建一个名为www的用户，专门用于管理网站.\\n\\n### 反向代理80端口\\n\\n众所周知，网站基本都以 80 端口作为默认端口（除非你不想让别人访问你的网站），也就是说：访问域名或服务器 IP 地址，实际上是在访问该服务器的 80 端口。而 Ghost 博客默认运行在 2368 端口上。\\n\\n为了输入域名或服务器 IP 地址就可以访问到你的 Ghost 博客，需要将访问 80 端口的请求，反向代理到 Ghost 的 2368 端口上。\\n\\n进入 Nginx 配置目录：\\n    ```\\n    cd /etc/nginx/conf.d\\n    ```\\n新建 Ghost 博客的 Nginx 配置文件：\\n```\\nvim ghost.conf\\n```\\n按 i 输入以下内容：\\n\\n> server {  \\n>     listen 80;\\n>     server_name loyalsoldier.me //这里修改为你的域名；如果没有域名，则改为服务器 IP 地址;\\n> \\n>     gzip on;\\n>     gzip_types text/plain application/xml text/css application/javascript application/json application/font-woff application/font-woff2 application/vnd.ms-fontobject application/x-font-ttf font/opentype application/pdf image/png image/bmp image/gif image/jpeg image/webp image/svg+xml;\\n>     gzip_proxied no-cache no-store private expired auth;\\n>     gzip_vary on;\\n>     gzip_min_length 1024;\\n> \\n>     location / {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>     }\\n> \\n>     location ~* .*\\\\.(jpg|jpeg|bmp|png|gif|ico|js|css|eot|woff|woff2|svg|ttf|otf)$ {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n> \\n>         add_header Cache-Control max-age=2592000;\\n>         expires    30d;\\n>         etag       on;\\n>     }\\n> }\\n\\n按 ESC 键结束编辑，输入 :wq 保存文件并退出编辑\\n使用 nginx -t 测试 Nginx 配置文件是否语法正确：\\n\\n```\\nsudo nginx -t\\n```\\n若输出的结果有 ok、successful 等字样，表示配置正确\\n\\n如果正确的话，重启Nginx服务\\n```\\nsystemctl restart nginx.service  \\n```\\n\\n\\n## 添加新用户\\n创建一个名为www的用户组\\n```\\nadduser www\\n```\\n\\n### 设置密码(请记录下你的密码，以后需要用到)\\n```\\npasswd www\\n```\\n\\n### 分配Root权限 - 让我们新创建的www用户拥有Root用户的权限\\n```\\ngpasswd -a www wheel\\n```\\n### 将nginx用户添加入www的用户组，方便后期的权限控制\\n```\\nusermod -a -G nginx,www nginx  \\n```\\n\\n## 安装ghost\\n以上就是Ghost需要用到的基础系统了，下面就来安装Ghost，新开一个Terminal窗口，用www账户登录：\\n```\\nssh www@xxx.xxx.xxx.xxx  \\n```\\n然后下载Ghost最新的代码。\\n\\n### 下载Ghost最新的稳定版\\n```\\ncurl -L https://ghost.org/zip/ghost-latest.zip -o ghost.zip\\n```\\n### 解压\\n```\\nunzip -uo ghost.zip -d ghost\\n```\\n### 进入Ghost的目录并安装生产环境的依赖\\n```\\ncd ghost && npm install --production\\n```\\n### 修改Ghost的config，修改数据库配置\\n```\\nvim config.js  \\n```\\n完整的config.js配置如下：\\n\\n> var path = require('path'),  \\n>     config;\\n> \\n> config = {  \\n>     production: {\\n>         url: 'https://www.xxxx.xxx',（换成服务器ip或者申请的域名）\\n>         mail: {},\\n>         database: {\\n>             client: 'mysql',（前面安装的mysql数据库，这里一定要对应）\\n>             connection: {\\n>                 host     : '127.0.0.1',\\n>                 user     : 'ghost', //用户名\\n>                 password : 'password', //ghost的密码，之前设置的\\n>                 database : 'blog', //数据库名\\n>                 charset  : 'utf8'\\n>             },\\n>             debug: false\\n>         },\\n> \\n>         server: {\\n>             host: '127.0.0.1',\\n>             port: '2368'\\n>         }\\n>     }\\n> };\\n> \\n> module.exports = config;  \\n\\n### 安装knex-migrator\\n实际上这个时候用生产模式运行ghost会报错，提示没有安装knex-migrator。\\n安装之前需要先编辑ghost安装文件夹下的***MigrtorConfig.js***文件。\\n\\n\\n使用vim编写MigrtorConfig.js文件\\n\\n```\\nvim MigrtorConfig.js\\n```\\n\\n\\n> module.exports = {\\n>     database: {\\n>         client: 'mysql',\\n>         connection: {\\n>             host: '127.0.0.1',\\n>             user: 'ghost',（之前mysql设置时建立的用户名）\\n>             password: 'password',（改成mysql的ghost用户密码）\\n>             charset: 'utf8',\\n>             name: 'blog'（之前mysql设置时建立的数据库）\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version',\\n>  /**\\n>     subfolder: 'upgrades'  [default: versions]\\n>     （这一部分在执行时总出问题，就注释掉了）\\n>  */\\n> }\\n> （下面应该是数据库使用sqlite3时的设置，由于本方案使用的mysql，所以可以不用写进去）\\n> module.exports = {\\n>     database: {\\n>         client: 'sqlite3',\\n>         connection: {\\n>             filename: 'path/to/your.db'\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version'\\n> }\\n> \\n\\n使用下面指令安装：\\n```\\nnpm install -g knex-migrator\\n```\\n\\n\\n运行一下：\\n```\\nnpm start --production\\n```\\n如果看到下面的提示，证明你已经完成80%了：\\n\\n\\n> Ghost is running in production...  \\n> Your blog is now available on https://www.itony.net  \\n> Ctrl+C to shut down  \\n\\n### 问题及解决方案\\n在执行npm start --production的时候\\n\\n\\n\\n## 全局安装PM2\\n目前你是开着远程连接到你的服务器，一旦你把窗口关闭了，那么你刚才起的npm start --production可就悲剧了，如何避免呢，这时候我们就需要一个能帮我们在后台稳定运行node服务的工具了，目前比较火热的要数PM2了：\\n\\n``\\nyarn global add pm2 --prefix /usr/local\\n``\\n### 用PM2来启动Ghost的node服务\\n先切到ghost的目录，然后再运行\\n```\\nNODE_ENV=production pm2 start index.js --name \\\"blog\\\"\\n```\\n### 检查运行结果\\n```\\npm2 show blog  \\n```\\n\"}]],\"sections\":[[10,0]]}","page":false,"plaintext":"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\n什么是ghost？\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\n但是这并不影响我们搭建ghost服务器。吼吼吼~\n\n搭建准备\n在阿里云 [https://www.aliyun.com/]上购买了一年的ECS服务器，配置如下:\nCPU 1核；\n内存 2G；\n带宽 1Mbps；\n硬盘 40G。\n系统 CentOS 7.3 64位\n\n云服务器配置\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\n\n云服务器ECS——网络和安全——安全组——配置规则\n\n\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\n这里的设置主要是参考了阿里云的官方帮助文档 [https://help.aliyun.com/knowledge_detail/34403.html]。","published_at":"2017-09-28T13:41:32.000Z","slug":"shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost","status":"published","title":"搭建Ghost服务器","updated_at":"2017-09-29T01:41:33.000Z","updated_by":"1","tags":{"0":{"id":"59ccb425a744810195a3dc01","name":"技术","slug":"ji-zhu","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T08:34:45.000Z","updated_at":"2017-09-28T08:34:45.000Z","created_by":"1","updated_by":"1"},"1":{"id":"59cd12bfa744810195a3dc06","name":"博客","slug":"bo-ke","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T15:18:23.000Z","updated_at":"2017-09-28T15:18:23.000Z","created_by":"1","updated_by":"1"}},"author_id":"1"}}},"query":{"include":"tags"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"http://47.95.197.107","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/*","content-type":"application/json; charset=utf-8","etag":"W/\"411c-5mv8u73eYfi6afuIZVnJj8lFtfA\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"48ms"},"msg":"","time":"2017-09-29T01:43:03.791Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"c45bcb10-a4b7-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/posts/59ccf296a744810195a3dc03/?include=tags","method":"PUT","originalUrl":"/ghost/api/v0.1/posts/59ccf296a744810195a3dc03/?include=tags","params":{"id":"59ccf296a744810195a3dc03"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","content-length":"16888","origin":"http://47.95.197.107","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"1.9","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{"posts":{"0":{"id":"59ccf296a744810195a3dc03","created_at":"2017-09-28T13:01:10.000Z","created_by":"1","featured":false,"feature_image":"/content/images/2017/09/ghost.png","codeinjection_foot":"","codeinjection_head":"","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\\n什么是ghost？\\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\\n但是这并不影响我们搭建ghost服务器。吼吼吼~\\n\\n# 搭建准备\\n在[**阿里云**](https://www.aliyun.com/)上购买了一年的ECS服务器，配置如下:\\nCPU 1核；\\n内存 2G；\\n带宽 1Mbps；\\n硬盘 40G。\\n系统 CentOS 7.3 64位\\n\\n# 云服务器配置\\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\\n> 云服务器ECS——网络和安全——安全组——配置规则\\n![--------](/content/images/2017/09/--------.jpg)\\n![-------](/content/images/2017/09/-------.jpg)\\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\\n这里的设置主要是参考了[**阿里云的官方帮助文档**](https://help.aliyun.com/knowledge_detail/34403.html)。\\n# 安装ghost\\n\\n## 需要用到的东西\\n\\n* 一个完成A记录解析设置的域名（建议做好ICP备案）；（可选）\\n* 使用 [**MySQL**](https://www.mysql.com/) 做数据库服务；\\n* 使用 [**Nginx**](https://nginx.org/) 做网页服务器（Ghost的代理服务）；\\n* 使用 [**NodeJS**](https://nodejs.org/) 做后端服务；\\n* [**Ghost**](https://ghost.org/)一个开源的博客系统；\\n\\n## 基础设置\\n\\n### 查看一下系统信息：\\n\\n```\\ncat /etc/redhat-release  \\n```\\n> #>>> CentOS Linux release 7.3.1611 (Core)\\n\\n\\n### 更新一下系统，安装一些基础工具：\\n\\n阿里云的centos已经优化了yum的源，你也可以自行修改\\n```\\nyum update -y && yum upgrage -y && yum clean all\\n```\\ncurl, wget都是方便后边的下载\\nvim作为一个老牌Linux文本编辑工具，你值得拥有\\n```\\nyum install curl wget vim -y\\n```\\n\\n### 更新全系统的vim配置\\n```\\ncurl https://raw.githubusercontent.com/tonyc726/vim-for-server/master/vimrc > /etc/vimrc  \\n```\\n\\n## MySQL安装设置\\n由于CentOS7已经不带Mysql数据库了（默认的数据库是MariaDB，Mysql的一个分支），所以需要先安裝MySQL Repository（具体的版本号，可以参考 https://dev.mysql.com/downloads/repo/yum/）:\\n\\n### 安裝 MySQL Repository\\n```\\nrpm -Uvh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\\n```\\n### 安装MySQL数据库的服务器社区稳定版\\n```\\nyum install mysql-community-server -y\\n```\\n### 启动MySQL服务\\n```\\nsystemctl start mysqld.service\\n```\\n### 设置随系统自启动\\n```\\nsystemctl enable mysqld.service  \\n```\\n### 初始化设置\\n```\\nmysql_secure_installation\\n```\\n由于MySQL5.7默认会初始化Root用户的密码，所以在执行之前需要获取这个初始密码：\\n（本次设置中并没有执行如下操作，应为默认安装后第一次运行时不需密码，在初始化过程中会提示设置密码）\\n```\\ngrep \\\"password\\\" /var/log/mysqld.log  \\n```\\n\\n\\n### 创建Ghost需要的用户及数据库：\\n\\n运行以后输入刚才拿到的密码\\n```\\nmysql -uroot -p \\n```\\n添加新数据库blog，后面Ghost会用到\\n```\\nCREATE DATABASE blog;\\n```\\n添加新用户ghost（password替换为你需要的密码）\\n```\\nCREATE USER ghost IDENTIFIED BY 'password';\\n```\\n授予ghost用户在blog数据库上的所有权限\\n（password就是你刚才创建ghost账户时设置的密码）\\n```\\nGRANT ALL PRIVILEGES ON blog.* TO 'ghost'@'localhost' IDENTIFIED BY 'password';\\n```\\n刷新权限\\n（当执行过GRANT，CREATE USER，REVOKE命令之后，必须要执行刷新权限才能生效）\\n```\\nFLUSH PRIVILEGES;\\n```\\nCtrl+D 退出\\n\\n好了，以上就是MySQL部分\\n\\n## NodeJS安装设置\\n\\n推荐使用以下方式安装NodeJS\\n本系统使用V6稳定版，如需其它版本，你可以自行调整\\n```\\ncurl -sL https://rpm.nodesource.com/setup_6.x | sudo -E bash -  \\n```\\n### 安装NodeJS及其依赖包\\nyum install gcc-c++ make nodejs -y\\n\\nNodeJS安装以后，默认已经自带的NPM\\n不过npm之前一直被吐槽，建议***升级最新版或者用yarn代替***\\n### 升级npm至最新版本(^v5.0.4)\\n```\\nnpm install npm@latest -g\\n```\\n### 安装yarn代替（推荐）\\n```\\ncurl --silent --location https://rpm.nodesource.com/setup_6.x | bash -  \\nyum install yarn -y\\n```\\n\\n### 测试一下\\n```\\nnode -v\\n```\\n\\n> #>>> v6.11.0\\n```\\nnpm -v\\n```\\n> #>>> v5.1.0\\n```\\nyarn -v\\n```\\n> #>>> v0.27.5\\n\\n这里有个坑，如果直接使用yum install nodejs -y也是可以安装NodeJS的，不过nodesource维护的更加好，而且可以升级npm。\\n\\n如果你已经看到了最后输出的信息，那么久代表NodeJS已经就绪了。\\n## Nginx安装配置\\n\\n### 直接安装即可\\n```\\nyum install nginx -y\\n```\\n### 立即启动\\n```\\nsystemctl start nginx\\n```\\n### 设置开机自启动\\n```\\nsystemctl enable nginx  \\n```\\n\\n现在，打开你的浏览器，输入你的公网IP，不出意外，你就已经可以看到一个Nginx的欢迎页面了。\\n\\n不过，出于后期的扩展或者安全性考虑，我们需要为系统创建一个名为www的用户，专门用于管理网站.\\n\\n### 反向代理80端口\\n\\n众所周知，网站基本都以 80 端口作为默认端口（除非你不想让别人访问你的网站），也就是说：访问域名或服务器 IP 地址，实际上是在访问该服务器的 80 端口。而 Ghost 博客默认运行在 2368 端口上。\\n\\n为了输入域名或服务器 IP 地址就可以访问到你的 Ghost 博客，需要将访问 80 端口的请求，反向代理到 Ghost 的 2368 端口上。\\n\\n进入 Nginx 配置目录：\\n    ```\\n    cd /etc/nginx/conf.d\\n    ```\\n新建 Ghost 博客的 Nginx 配置文件：\\n```\\nvim ghost.conf\\n```\\n按 i 输入以下内容：\\n\\n> server {  \\n>     listen 80;\\n>     server_name loyalsoldier.me //这里修改为你的域名；如果没有域名，则改为服务器 IP 地址;\\n> \\n>     gzip on;\\n>     gzip_types text/plain application/xml text/css application/javascript application/json application/font-woff application/font-woff2 application/vnd.ms-fontobject application/x-font-ttf font/opentype application/pdf image/png image/bmp image/gif image/jpeg image/webp image/svg+xml;\\n>     gzip_proxied no-cache no-store private expired auth;\\n>     gzip_vary on;\\n>     gzip_min_length 1024;\\n> \\n>     location / {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>     }\\n> \\n>     location ~* .*\\\\.(jpg|jpeg|bmp|png|gif|ico|js|css|eot|woff|woff2|svg|ttf|otf)$ {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n> \\n>         add_header Cache-Control max-age=2592000;\\n>         expires    30d;\\n>         etag       on;\\n>     }\\n> }\\n\\n按 ESC 键结束编辑，输入 :wq 保存文件并退出编辑\\n使用 nginx -t 测试 Nginx 配置文件是否语法正确：\\n\\n```\\nsudo nginx -t\\n```\\n若输出的结果有 ok、successful 等字样，表示配置正确\\n\\n如果正确的话，重启Nginx服务\\n```\\nsystemctl restart nginx.service  \\n```\\n\\n\\n## 添加新用户\\n创建一个名为www的用户组\\n```\\nadduser www\\n```\\n\\n### 设置密码(请记录下你的密码，以后需要用到)\\n```\\npasswd www\\n```\\n\\n### 分配Root权限 - 让我们新创建的www用户拥有Root用户的权限\\n```\\ngpasswd -a www wheel\\n```\\n### 将nginx用户添加入www的用户组，方便后期的权限控制\\n```\\nusermod -a -G nginx,www nginx  \\n```\\n\\n## 安装ghost\\n以上就是Ghost需要用到的基础系统了，下面就来安装Ghost，新开一个Terminal窗口，用www账户登录：\\n```\\nssh www@xxx.xxx.xxx.xxx  \\n```\\n然后下载Ghost最新的代码。\\n\\n### 下载Ghost最新的稳定版\\n```\\ncurl -L https://ghost.org/zip/ghost-latest.zip -o ghost.zip\\n```\\n### 解压\\n```\\nunzip -uo ghost.zip -d ghost\\n```\\n### 进入Ghost的目录并安装生产环境的依赖\\n```\\ncd ghost && npm install --production\\n```\\n### 修改Ghost的config，修改数据库配置\\n```\\nvim config.js  \\n```\\n完整的config.js配置如下：\\n\\n> var path = require('path'),  \\n>     config;\\n> \\n> config = {  \\n>     production: {\\n>         url: 'https://www.xxxx.xxx',（换成服务器ip或者申请的域名）\\n>         mail: {},\\n>         database: {\\n>             client: 'mysql',（前面安装的mysql数据库，这里一定要对应）\\n>             connection: {\\n>                 host     : '127.0.0.1',\\n>                 user     : 'ghost', //用户名\\n>                 password : 'password', //ghost的密码，之前设置的\\n>                 database : 'blog', //数据库名\\n>                 charset  : 'utf8'\\n>             },\\n>             debug: false\\n>         },\\n> \\n>         server: {\\n>             host: '127.0.0.1',\\n>             port: '2368'\\n>         }\\n>     }\\n> };\\n> \\n> module.exports = config;  \\n\\n### 安装knex-migrator\\n实际上这个时候用生产模式运行ghost会报错，提示没有安装knex-migrator。\\n安装之前需要先编辑ghost安装文件夹下的***MigrtorConfig.js***文件。\\n\\n\\n使用vim编写MigrtorConfig.js文件\\n\\n```\\nvim MigrtorConfig.js\\n```\\n\\n\\n> module.exports = {\\n>     database: {\\n>         client: 'mysql',\\n>         connection: {\\n>             host: '127.0.0.1',\\n>             user: 'ghost',（之前mysql设置时建立的用户名）\\n>             password: 'password',（改成mysql的ghost用户密码）\\n>             charset: 'utf8',\\n>             name: 'blog'（之前mysql设置时建立的数据库）\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version',\\n>  /**\\n>     subfolder: 'upgrades'  [default: versions]\\n>     （这一部分在执行时总出问题，就注释掉了）\\n>  */\\n> }\\n> （下面应该是数据库使用sqlite3时的设置，由于本方案使用的mysql，所以可以不用写进去）\\n> module.exports = {\\n>     database: {\\n>         client: 'sqlite3',\\n>         connection: {\\n>             filename: 'path/to/your.db'\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version'\\n> }\\n> \\n\\n使用下面指令安装：\\n```\\nnpm install -g knex-migrator\\n```\\n\\n由于国内网络的原因，这个命令可能需要执行多次才能安装完，中间会提示校验错误，这个应该是下载没有完成，而网络链接断开了的原因，再执行一次就行，知道最后完成安装。\\n\\n\\n运行一下：\\n```\\nnpm start --production\\n```\\n如果看到下面的提示，证明你已经完成80%了：\\n\\n\\n> Ghost is running in production...  \\n> Your blog is now available on https://www.itony.net  \\n> Ctrl+C to shut down  \\n\\n### 问题及解决方案\\n在执行npm start --production的时候\\n\\n\\n\\n## 全局安装PM2\\n目前你是开着远程连接到你的服务器，一旦你把窗口关闭了，那么你刚才起的npm start --production可就悲剧了，如何避免呢，这时候我们就需要一个能帮我们在后台稳定运行node服务的工具了，目前比较火热的要数PM2了：\\n\\n``\\nyarn global add pm2 --prefix /usr/local\\n``\\n### 用PM2来启动Ghost的node服务\\n先切到ghost的目录，然后再运行\\n```\\nNODE_ENV=production pm2 start index.js --name \\\"blog\\\"\\n```\\n### 检查运行结果\\n```\\npm2 show blog  \\n```\\n\"}]],\"sections\":[[10,0]]}","page":false,"plaintext":"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\n什么是ghost？\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\n但是这并不影响我们搭建ghost服务器。吼吼吼~\n\n搭建准备\n在阿里云 [https://www.aliyun.com/]上购买了一年的ECS服务器，配置如下:\nCPU 1核；\n内存 2G；\n带宽 1Mbps；\n硬盘 40G。\n系统 CentOS 7.3 64位\n\n云服务器配置\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\n\n云服务器ECS——网络和安全——安全组——配置规则\n\n\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\n这里的设置主要是参考了阿里云的官方帮助文档 [https://help.aliyun.com/knowledge_detail/34403.html]。","published_at":"2017-09-28T13:41:32.000Z","slug":"shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost","status":"published","title":"搭建Ghost服务器","updated_at":"2017-09-29T01:43:03.000Z","updated_by":"1","tags":{"0":{"id":"59ccb425a744810195a3dc01","name":"技术","slug":"ji-zhu","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T08:34:45.000Z","updated_at":"2017-09-28T08:34:45.000Z","created_by":"1","updated_by":"1"},"1":{"id":"59cd12bfa744810195a3dc06","name":"博客","slug":"bo-ke","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T15:18:23.000Z","updated_at":"2017-09-28T15:18:23.000Z","created_by":"1","updated_by":"1"}},"author_id":"1"}}},"query":{"include":"tags"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"http://47.95.197.107","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/*","content-type":"application/json; charset=utf-8","etag":"W/\"4212-XtcLwrIO3Noju98Yr7uEVI/omEU\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"55ms"},"msg":"","time":"2017-09-29T01:44:43.899Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"a0bf0360-a4b8-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/posts/59ccf296a744810195a3dc03/?include=tags","method":"PUT","originalUrl":"/ghost/api/v0.1/posts/59ccf296a744810195a3dc03/?include=tags","params":{"id":"59ccf296a744810195a3dc03"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","content-length":"17160","origin":"http://47.95.197.107","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"1.9","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{"posts":{"0":{"id":"59ccf296a744810195a3dc03","created_at":"2017-09-28T13:01:10.000Z","created_by":"1","featured":false,"feature_image":"/content/images/2017/09/ghost.png","codeinjection_foot":"","codeinjection_head":"","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\\n什么是ghost？\\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\\n但是这并不影响我们搭建ghost服务器。吼吼吼~\\n\\n# 搭建准备\\n在[**阿里云**](https://www.aliyun.com/)上购买了一年的ECS服务器，配置如下:\\nCPU 1核；\\n内存 2G；\\n带宽 1Mbps；\\n硬盘 40G。\\n系统 CentOS 7.3 64位\\n\\n# 云服务器配置\\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\\n> 云服务器ECS——网络和安全——安全组——配置规则\\n![--------](/content/images/2017/09/--------.jpg)\\n![-------](/content/images/2017/09/-------.jpg)\\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\\n这里的设置主要是参考了[**阿里云的官方帮助文档**](https://help.aliyun.com/knowledge_detail/34403.html)。\\n# 安装ghost\\n\\n## 需要用到的东西\\n\\n* 一个完成A记录解析设置的域名（建议做好ICP备案）；（可选）\\n* 使用 [**MySQL**](https://www.mysql.com/) 做数据库服务；\\n* 使用 [**Nginx**](https://nginx.org/) 做网页服务器（Ghost的代理服务）；\\n* 使用 [**NodeJS**](https://nodejs.org/) 做后端服务；\\n* [**Ghost**](https://ghost.org/)一个开源的博客系统；\\n\\n## 基础设置\\n\\n### 查看一下系统信息：\\n\\n```\\ncat /etc/redhat-release  \\n```\\n> #>>> CentOS Linux release 7.3.1611 (Core)\\n\\n\\n### 更新一下系统，安装一些基础工具：\\n\\n阿里云的centos已经优化了yum的源，你也可以自行修改\\n```\\nyum update -y && yum upgrage -y && yum clean all\\n```\\ncurl, wget都是方便后边的下载\\nvim作为一个老牌Linux文本编辑工具，你值得拥有\\n```\\nyum install curl wget vim -y\\n```\\n\\n### 更新全系统的vim配置\\n```\\ncurl https://raw.githubusercontent.com/tonyc726/vim-for-server/master/vimrc > /etc/vimrc  \\n```\\n\\n## MySQL安装设置\\n由于CentOS7已经不带Mysql数据库了（默认的数据库是MariaDB，Mysql的一个分支），所以需要先安裝MySQL Repository（具体的版本号，可以参考 https://dev.mysql.com/downloads/repo/yum/）:\\n\\n### 安裝 MySQL Repository\\n```\\nrpm -Uvh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\\n```\\n### 安装MySQL数据库的服务器社区稳定版\\n```\\nyum install mysql-community-server -y\\n```\\n### 启动MySQL服务\\n```\\nsystemctl start mysqld.service\\n```\\n### 设置随系统自启动\\n```\\nsystemctl enable mysqld.service  \\n```\\n### 初始化设置\\n```\\nmysql_secure_installation\\n```\\n由于MySQL5.7默认会初始化Root用户的密码，所以在执行之前需要获取这个初始密码：\\n（本次设置中并没有执行如下操作，应为默认安装后第一次运行时不需密码，在初始化过程中会提示设置密码）\\n```\\ngrep \\\"password\\\" /var/log/mysqld.log  \\n```\\n\\n\\n### 创建Ghost需要的用户及数据库：\\n\\n运行以后输入刚才拿到的密码\\n```\\nmysql -uroot -p \\n```\\n添加新数据库blog，后面Ghost会用到\\n```\\nCREATE DATABASE blog;\\n```\\n添加新用户ghost（password替换为你需要的密码）\\n```\\nCREATE USER ghost IDENTIFIED BY 'password';\\n```\\n授予ghost用户在blog数据库上的所有权限\\n（password就是你刚才创建ghost账户时设置的密码）\\n```\\nGRANT ALL PRIVILEGES ON blog.* TO 'ghost'@'localhost' IDENTIFIED BY 'password';\\n```\\n刷新权限\\n（当执行过GRANT，CREATE USER，REVOKE命令之后，必须要执行刷新权限才能生效）\\n```\\nFLUSH PRIVILEGES;\\n```\\nCtrl+D 退出\\n\\n好了，以上就是MySQL部分\\n\\n## NodeJS安装设置\\n\\n推荐使用以下方式安装NodeJS\\n本系统使用V6稳定版，如需其它版本，你可以自行调整\\n```\\ncurl -sL https://rpm.nodesource.com/setup_6.x | sudo -E bash -  \\n```\\n### 安装NodeJS及其依赖包\\nyum install gcc-c++ make nodejs -y\\n\\nNodeJS安装以后，默认已经自带的NPM\\n不过npm之前一直被吐槽，建议***升级最新版或者用yarn代替***\\n### 升级npm至最新版本(^v5.0.4)\\n```\\nnpm install npm@latest -g\\n```\\n### 安装yarn代替（推荐）\\n```\\ncurl --silent --location https://rpm.nodesource.com/setup_6.x | bash -  \\nyum install yarn -y\\n```\\n\\n### 测试一下\\n```\\nnode -v\\n```\\n\\n> #>>> v6.11.0\\n```\\nnpm -v\\n```\\n> #>>> v5.1.0\\n```\\nyarn -v\\n```\\n> #>>> v0.27.5\\n\\n这里有个坑，如果直接使用yum install nodejs -y也是可以安装NodeJS的，不过nodesource维护的更加好，而且可以升级npm。\\n\\n如果你已经看到了最后输出的信息，那么久代表NodeJS已经就绪了。\\n## Nginx安装配置\\n\\n### 直接安装即可\\n```\\nyum install nginx -y\\n```\\n### 立即启动\\n```\\nsystemctl start nginx\\n```\\n### 设置开机自启动\\n```\\nsystemctl enable nginx  \\n```\\n\\n现在，打开你的浏览器，输入你的公网IP，不出意外，你就已经可以看到一个Nginx的欢迎页面了。\\n\\n不过，出于后期的扩展或者安全性考虑，我们需要为系统创建一个名为www的用户，专门用于管理网站.\\n\\n### 反向代理80端口\\n\\n众所周知，网站基本都以 80 端口作为默认端口（除非你不想让别人访问你的网站），也就是说：访问域名或服务器 IP 地址，实际上是在访问该服务器的 80 端口。而 Ghost 博客默认运行在 2368 端口上。\\n\\n为了输入域名或服务器 IP 地址就可以访问到你的 Ghost 博客，需要将访问 80 端口的请求，反向代理到 Ghost 的 2368 端口上。\\n\\n进入 Nginx 配置目录：\\n    ```\\n    cd /etc/nginx/conf.d\\n    ```\\n新建 Ghost 博客的 Nginx 配置文件：\\n```\\nvim ghost.conf\\n```\\n按 i 输入以下内容：\\n\\n> server {  \\n>     listen 80;\\n>     server_name loyalsoldier.me //这里修改为你的域名；如果没有域名，则改为服务器 IP 地址;\\n> \\n>     gzip on;\\n>     gzip_types text/plain application/xml text/css application/javascript application/json application/font-woff application/font-woff2 application/vnd.ms-fontobject application/x-font-ttf font/opentype application/pdf image/png image/bmp image/gif image/jpeg image/webp image/svg+xml;\\n>     gzip_proxied no-cache no-store private expired auth;\\n>     gzip_vary on;\\n>     gzip_min_length 1024;\\n> \\n>     location / {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>     }\\n> \\n>     location ~* .*\\\\.(jpg|jpeg|bmp|png|gif|ico|js|css|eot|woff|woff2|svg|ttf|otf)$ {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n> \\n>         add_header Cache-Control max-age=2592000;\\n>         expires    30d;\\n>         etag       on;\\n>     }\\n> }\\n\\n按 ESC 键结束编辑，输入 :wq 保存文件并退出编辑\\n使用 nginx -t 测试 Nginx 配置文件是否语法正确：\\n\\n```\\nsudo nginx -t\\n```\\n若输出的结果有 ok、successful 等字样，表示配置正确\\n\\n如果正确的话，重启Nginx服务\\n```\\nsystemctl restart nginx.service  \\n```\\n\\n\\n## 添加新用户\\n创建一个名为www的用户组\\n```\\nadduser www\\n```\\n\\n### 设置密码(请记录下你的密码，以后需要用到)\\n```\\npasswd www\\n```\\n\\n### 分配Root权限 - 让我们新创建的www用户拥有Root用户的权限\\n```\\ngpasswd -a www wheel\\n```\\n### 将nginx用户添加入www的用户组，方便后期的权限控制\\n```\\nusermod -a -G nginx,www nginx  \\n```\\n\\n## 安装ghost\\n以上就是Ghost需要用到的基础系统了，下面就来安装Ghost，新开一个Terminal窗口，用www账户登录：\\n```\\nssh www@xxx.xxx.xxx.xxx  \\n```\\n然后下载Ghost最新的代码。\\n\\n### 下载Ghost最新的稳定版\\n```\\ncurl -L https://ghost.org/zip/ghost-latest.zip -o ghost.zip\\n```\\n### 解压\\n```\\nunzip -uo ghost.zip -d ghost\\n```\\n### 进入Ghost的目录并安装生产环境的依赖\\n```\\ncd ghost && npm install --production\\n```\\nnpm install --production这个命令可能需要执行多次，也是由于国内网络的原因，导致下载速度很慢，每次都下载不完全，需要多次执行，直到成功安装完成。\\n### 修改Ghost的config，修改数据库配置\\n```\\nvim config.js  \\n```\\n完整的config.js配置如下：\\n\\n> var path = require('path'),  \\n>     config;\\n> \\n> config = {  \\n>     production: {\\n>         url: 'https://www.xxxx.xxx',（换成服务器ip或者申请的域名）\\n>         mail: {},\\n>         database: {\\n>             client: 'mysql',（前面安装的mysql数据库，这里一定要对应）\\n>             connection: {\\n>                 host     : '127.0.0.1',\\n>                 user     : 'ghost', //用户名\\n>                 password : 'password', //ghost的密码，之前设置的\\n>                 database : 'blog', //数据库名\\n>                 charset  : 'utf8'\\n>             },\\n>             debug: false\\n>         },\\n> \\n>         server: {\\n>             host: '127.0.0.1',\\n>             port: '2368'\\n>         }\\n>     }\\n> };\\n> \\n> module.exports = config;  \\n\\n除了ghost安装根目录下\\n\\n### 安装knex-migrator\\n实际上这个时候用生产模式运行ghost会报错，提示没有安装knex-migrator。\\n安装之前需要先编辑ghost安装文件夹下的***MigrtorConfig.js***文件。\\n\\n\\n使用vim编写MigrtorConfig.js文件\\n\\n```\\nvim MigrtorConfig.js\\n```\\n\\n\\n> module.exports = {\\n>     database: {\\n>         client: 'mysql',\\n>         connection: {\\n>             host: '127.0.0.1',\\n>             user: 'ghost',（之前mysql设置时建立的用户名）\\n>             password: 'password',（改成mysql的ghost用户密码）\\n>             charset: 'utf8',\\n>             name: 'blog'（之前mysql设置时建立的数据库）\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version',\\n>  /**\\n>     subfolder: 'upgrades'  [default: versions]\\n>     （这一部分在执行时总出问题，就注释掉了）\\n>  */\\n> }\\n> （下面应该是数据库使用sqlite3时的设置，由于本方案使用的mysql，所以可以不用写进去）\\n> module.exports = {\\n>     database: {\\n>         client: 'sqlite3',\\n>         connection: {\\n>             filename: 'path/to/your.db'\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version'\\n> }\\n> \\n\\n使用下面指令安装：\\n```\\nnpm install -g knex-migrator\\n```\\n\\n由于国内网络的原因，这个命令也可能需要执行多次才能安装完，中间会提示校验错误，这个应该是下载没有完成，而网络链接断开了的原因，再执行一次就行，直到最后完成安装。\\n\\n\\n运行一下：\\n```\\nnpm start --production\\n```\\n如果看到下面的提示，证明你已经完成80%了：\\n\\n\\n> Ghost is running in production...  \\n> Your blog is now available on https://www.itony.net  \\n> Ctrl+C to shut down  \\n\\n### 问题及解决方案\\n在执行npm start --production的时候，遇到npm权限的问题，\\n\\n\\n\\n## 全局安装PM2\\n目前你是开着远程连接到你的服务器，一旦你把窗口关闭了，那么你刚才起的npm start --production可就悲剧了，如何避免呢，这时候我们就需要一个能帮我们在后台稳定运行node服务的工具了，目前比较火热的要数PM2了：\\n\\n``\\nyarn global add pm2 --prefix /usr/local\\n``\\n### 用PM2来启动Ghost的node服务\\n先切到ghost的目录，然后再运行\\n```\\nNODE_ENV=production pm2 start index.js --name \\\"blog\\\"\\n```\\n### 检查运行结果\\n```\\npm2 show blog  \\n```\\n\"}]],\"sections\":[[10,0]]}","page":false,"plaintext":"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\n什么是ghost？\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\n但是这并不影响我们搭建ghost服务器。吼吼吼~\n\n搭建准备\n在阿里云 [https://www.aliyun.com/]上购买了一年的ECS服务器，配置如下:\nCPU 1核；\n内存 2G；\n带宽 1Mbps；\n硬盘 40G。\n系统 CentOS 7.3 64位\n\n云服务器配置\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\n\n云服务器ECS——网络和安全——安全组——配置规则\n\n\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\n这里的设置主要是参考了阿里云的官方帮助文档 [https://help.aliyun.com/knowledge_detail/34403.html]。","published_at":"2017-09-28T13:41:32.000Z","slug":"shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost","status":"published","title":"搭建Ghost服务器","updated_at":"2017-09-29T01:44:43.000Z","updated_by":"1","tags":{"0":{"id":"59ccb425a744810195a3dc01","name":"技术","slug":"ji-zhu","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T08:34:45.000Z","updated_at":"2017-09-28T08:34:45.000Z","created_by":"1","updated_by":"1"},"1":{"id":"59cd12bfa744810195a3dc06","name":"博客","slug":"bo-ke","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T15:18:23.000Z","updated_at":"2017-09-28T15:18:23.000Z","created_by":"1","updated_by":"1"}},"author_id":"1"}}},"query":{"include":"tags"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"http://47.95.197.107","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/*","content-type":"application/json; charset=utf-8","etag":"W/\"432b-/hy78GOWVhuni33HUXbjhvKaczI\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"56ms"},"msg":"","time":"2017-09-29T01:50:53.650Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"a2586810-a4b8-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/posts/59ccf296a744810195a3dc03/?include=tags","method":"PUT","originalUrl":"/ghost/api/v0.1/posts/59ccf296a744810195a3dc03/?include=tags","params":{"id":"59ccf296a744810195a3dc03"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","content-length":"17160","origin":"http://47.95.197.107","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"1.9","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{"posts":{"0":{"id":"59ccf296a744810195a3dc03","created_at":"2017-09-28T13:01:10.000Z","created_by":"1","featured":false,"feature_image":"/content/images/2017/09/ghost.png","codeinjection_foot":"","codeinjection_head":"","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\\n什么是ghost？\\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\\n但是这并不影响我们搭建ghost服务器。吼吼吼~\\n\\n# 搭建准备\\n在[**阿里云**](https://www.aliyun.com/)上购买了一年的ECS服务器，配置如下:\\nCPU 1核；\\n内存 2G；\\n带宽 1Mbps；\\n硬盘 40G。\\n系统 CentOS 7.3 64位\\n\\n# 云服务器配置\\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\\n> 云服务器ECS——网络和安全——安全组——配置规则\\n![--------](/content/images/2017/09/--------.jpg)\\n![-------](/content/images/2017/09/-------.jpg)\\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\\n这里的设置主要是参考了[**阿里云的官方帮助文档**](https://help.aliyun.com/knowledge_detail/34403.html)。\\n# 安装ghost\\n\\n## 需要用到的东西\\n\\n* 一个完成A记录解析设置的域名（建议做好ICP备案）；（可选）\\n* 使用 [**MySQL**](https://www.mysql.com/) 做数据库服务；\\n* 使用 [**Nginx**](https://nginx.org/) 做网页服务器（Ghost的代理服务）；\\n* 使用 [**NodeJS**](https://nodejs.org/) 做后端服务；\\n* [**Ghost**](https://ghost.org/)一个开源的博客系统；\\n\\n## 基础设置\\n\\n### 查看一下系统信息：\\n\\n```\\ncat /etc/redhat-release  \\n```\\n> #>>> CentOS Linux release 7.3.1611 (Core)\\n\\n\\n### 更新一下系统，安装一些基础工具：\\n\\n阿里云的centos已经优化了yum的源，你也可以自行修改\\n```\\nyum update -y && yum upgrage -y && yum clean all\\n```\\ncurl, wget都是方便后边的下载\\nvim作为一个老牌Linux文本编辑工具，你值得拥有\\n```\\nyum install curl wget vim -y\\n```\\n\\n### 更新全系统的vim配置\\n```\\ncurl https://raw.githubusercontent.com/tonyc726/vim-for-server/master/vimrc > /etc/vimrc  \\n```\\n\\n## MySQL安装设置\\n由于CentOS7已经不带Mysql数据库了（默认的数据库是MariaDB，Mysql的一个分支），所以需要先安裝MySQL Repository（具体的版本号，可以参考 https://dev.mysql.com/downloads/repo/yum/）:\\n\\n### 安裝 MySQL Repository\\n```\\nrpm -Uvh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\\n```\\n### 安装MySQL数据库的服务器社区稳定版\\n```\\nyum install mysql-community-server -y\\n```\\n### 启动MySQL服务\\n```\\nsystemctl start mysqld.service\\n```\\n### 设置随系统自启动\\n```\\nsystemctl enable mysqld.service  \\n```\\n### 初始化设置\\n```\\nmysql_secure_installation\\n```\\n由于MySQL5.7默认会初始化Root用户的密码，所以在执行之前需要获取这个初始密码：\\n（本次设置中并没有执行如下操作，应为默认安装后第一次运行时不需密码，在初始化过程中会提示设置密码）\\n```\\ngrep \\\"password\\\" /var/log/mysqld.log  \\n```\\n\\n\\n### 创建Ghost需要的用户及数据库：\\n\\n运行以后输入刚才拿到的密码\\n```\\nmysql -uroot -p \\n```\\n添加新数据库blog，后面Ghost会用到\\n```\\nCREATE DATABASE blog;\\n```\\n添加新用户ghost（password替换为你需要的密码）\\n```\\nCREATE USER ghost IDENTIFIED BY 'password';\\n```\\n授予ghost用户在blog数据库上的所有权限\\n（password就是你刚才创建ghost账户时设置的密码）\\n```\\nGRANT ALL PRIVILEGES ON blog.* TO 'ghost'@'localhost' IDENTIFIED BY 'password';\\n```\\n刷新权限\\n（当执行过GRANT，CREATE USER，REVOKE命令之后，必须要执行刷新权限才能生效）\\n```\\nFLUSH PRIVILEGES;\\n```\\nCtrl+D 退出\\n\\n好了，以上就是MySQL部分\\n\\n## NodeJS安装设置\\n\\n推荐使用以下方式安装NodeJS\\n本系统使用V6稳定版，如需其它版本，你可以自行调整\\n```\\ncurl -sL https://rpm.nodesource.com/setup_6.x | sudo -E bash -  \\n```\\n### 安装NodeJS及其依赖包\\nyum install gcc-c++ make nodejs -y\\n\\nNodeJS安装以后，默认已经自带的NPM\\n不过npm之前一直被吐槽，建议***升级最新版或者用yarn代替***\\n### 升级npm至最新版本(^v5.0.4)\\n```\\nnpm install npm@latest -g\\n```\\n### 安装yarn代替（推荐）\\n```\\ncurl --silent --location https://rpm.nodesource.com/setup_6.x | bash -  \\nyum install yarn -y\\n```\\n\\n### 测试一下\\n```\\nnode -v\\n```\\n\\n> #>>> v6.11.0\\n```\\nnpm -v\\n```\\n> #>>> v5.1.0\\n```\\nyarn -v\\n```\\n> #>>> v0.27.5\\n\\n这里有个坑，如果直接使用yum install nodejs -y也是可以安装NodeJS的，不过nodesource维护的更加好，而且可以升级npm。\\n\\n如果你已经看到了最后输出的信息，那么久代表NodeJS已经就绪了。\\n## Nginx安装配置\\n\\n### 直接安装即可\\n```\\nyum install nginx -y\\n```\\n### 立即启动\\n```\\nsystemctl start nginx\\n```\\n### 设置开机自启动\\n```\\nsystemctl enable nginx  \\n```\\n\\n现在，打开你的浏览器，输入你的公网IP，不出意外，你就已经可以看到一个Nginx的欢迎页面了。\\n\\n不过，出于后期的扩展或者安全性考虑，我们需要为系统创建一个名为www的用户，专门用于管理网站.\\n\\n### 反向代理80端口\\n\\n众所周知，网站基本都以 80 端口作为默认端口（除非你不想让别人访问你的网站），也就是说：访问域名或服务器 IP 地址，实际上是在访问该服务器的 80 端口。而 Ghost 博客默认运行在 2368 端口上。\\n\\n为了输入域名或服务器 IP 地址就可以访问到你的 Ghost 博客，需要将访问 80 端口的请求，反向代理到 Ghost 的 2368 端口上。\\n\\n进入 Nginx 配置目录：\\n    ```\\n    cd /etc/nginx/conf.d\\n    ```\\n新建 Ghost 博客的 Nginx 配置文件：\\n```\\nvim ghost.conf\\n```\\n按 i 输入以下内容：\\n\\n> server {  \\n>     listen 80;\\n>     server_name loyalsoldier.me //这里修改为你的域名；如果没有域名，则改为服务器 IP 地址;\\n> \\n>     gzip on;\\n>     gzip_types text/plain application/xml text/css application/javascript application/json application/font-woff application/font-woff2 application/vnd.ms-fontobject application/x-font-ttf font/opentype application/pdf image/png image/bmp image/gif image/jpeg image/webp image/svg+xml;\\n>     gzip_proxied no-cache no-store private expired auth;\\n>     gzip_vary on;\\n>     gzip_min_length 1024;\\n> \\n>     location / {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>     }\\n> \\n>     location ~* .*\\\\.(jpg|jpeg|bmp|png|gif|ico|js|css|eot|woff|woff2|svg|ttf|otf)$ {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n> \\n>         add_header Cache-Control max-age=2592000;\\n>         expires    30d;\\n>         etag       on;\\n>     }\\n> }\\n\\n按 ESC 键结束编辑，输入 :wq 保存文件并退出编辑\\n使用 nginx -t 测试 Nginx 配置文件是否语法正确：\\n\\n```\\nsudo nginx -t\\n```\\n若输出的结果有 ok、successful 等字样，表示配置正确\\n\\n如果正确的话，重启Nginx服务\\n```\\nsystemctl restart nginx.service  \\n```\\n\\n\\n## 添加新用户\\n创建一个名为www的用户组\\n```\\nadduser www\\n```\\n\\n### 设置密码(请记录下你的密码，以后需要用到)\\n```\\npasswd www\\n```\\n\\n### 分配Root权限 - 让我们新创建的www用户拥有Root用户的权限\\n```\\ngpasswd -a www wheel\\n```\\n### 将nginx用户添加入www的用户组，方便后期的权限控制\\n```\\nusermod -a -G nginx,www nginx  \\n```\\n\\n## 安装ghost\\n以上就是Ghost需要用到的基础系统了，下面就来安装Ghost，新开一个Terminal窗口，用www账户登录：\\n```\\nssh www@xxx.xxx.xxx.xxx  \\n```\\n然后下载Ghost最新的代码。\\n\\n### 下载Ghost最新的稳定版\\n```\\ncurl -L https://ghost.org/zip/ghost-latest.zip -o ghost.zip\\n```\\n### 解压\\n```\\nunzip -uo ghost.zip -d ghost\\n```\\n### 进入Ghost的目录并安装生产环境的依赖\\n```\\ncd ghost && npm install --production\\n```\\nnpm install --production这个命令可能需要执行多次，也是由于国内网络的原因，导致下载速度很慢，每次都下载不完全，需要多次执行，直到成功安装完成。\\n### 修改Ghost的config，修改数据库配置\\n```\\nvim config.js  \\n```\\n完整的config.js配置如下：\\n\\n> var path = require('path'),  \\n>     config;\\n> \\n> config = {  \\n>     production: {\\n>         url: 'https://www.xxxx.xxx',（换成服务器ip或者申请的域名）\\n>         mail: {},\\n>         database: {\\n>             client: 'mysql',（前面安装的mysql数据库，这里一定要对应）\\n>             connection: {\\n>                 host     : '127.0.0.1',\\n>                 user     : 'ghost', //用户名\\n>                 password : 'password', //ghost的密码，之前设置的\\n>                 database : 'blog', //数据库名\\n>                 charset  : 'utf8'\\n>             },\\n>             debug: false\\n>         },\\n> \\n>         server: {\\n>             host: '127.0.0.1',\\n>             port: '2368'\\n>         }\\n>     }\\n> };\\n> \\n> module.exports = config;  \\n\\n除了ghost安装根目录下\\n\\n### 安装knex-migrator\\n实际上这个时候用生产模式运行ghost会报错，提示没有安装knex-migrator。\\n安装之前需要先编辑ghost安装文件夹下的***MigrtorConfig.js***文件。\\n\\n\\n使用vim编写MigrtorConfig.js文件\\n\\n```\\nvim MigrtorConfig.js\\n```\\n\\n\\n> module.exports = {\\n>     database: {\\n>         client: 'mysql',\\n>         connection: {\\n>             host: '127.0.0.1',\\n>             user: 'ghost',（之前mysql设置时建立的用户名）\\n>             password: 'password',（改成mysql的ghost用户密码）\\n>             charset: 'utf8',\\n>             name: 'blog'（之前mysql设置时建立的数据库）\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version',\\n>  /**\\n>     subfolder: 'upgrades'  [default: versions]\\n>     （这一部分在执行时总出问题，就注释掉了）\\n>  */\\n> }\\n> （下面应该是数据库使用sqlite3时的设置，由于本方案使用的mysql，所以可以不用写进去）\\n> module.exports = {\\n>     database: {\\n>         client: 'sqlite3',\\n>         connection: {\\n>             filename: 'path/to/your.db'\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version'\\n> }\\n> \\n\\n使用下面指令安装：\\n```\\nnpm install -g knex-migrator\\n```\\n\\n由于国内网络的原因，这个命令也可能需要执行多次才能安装完，中间会提示校验错误，这个应该是下载没有完成，而网络链接断开了的原因，再执行一次就行，直到最后完成安装。\\n\\n\\n运行一下：\\n```\\nnpm start --production\\n```\\n如果看到下面的提示，证明你已经完成80%了：\\n\\n\\n> Ghost is running in production...  \\n> Your blog is now available on https://www.itony.net  \\n> Ctrl+C to shut down  \\n\\n### 问题及解决方案\\n在执行npm start --production的时候，遇到npm权限的问题，\\n\\n\\n\\n## 全局安装PM2\\n目前你是开着远程连接到你的服务器，一旦你把窗口关闭了，那么你刚才起的npm start --production可就悲剧了，如何避免呢，这时候我们就需要一个能帮我们在后台稳定运行node服务的工具了，目前比较火热的要数PM2了：\\n\\n``\\nyarn global add pm2 --prefix /usr/local\\n``\\n### 用PM2来启动Ghost的node服务\\n先切到ghost的目录，然后再运行\\n```\\nNODE_ENV=production pm2 start index.js --name \\\"blog\\\"\\n```\\n### 检查运行结果\\n```\\npm2 show blog  \\n```\\n\"}]],\"sections\":[[10,0]]}","page":false,"plaintext":"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\n什么是ghost？\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\n但是这并不影响我们搭建ghost服务器。吼吼吼~\n\n搭建准备\n在阿里云 [https://www.aliyun.com/]上购买了一年的ECS服务器，配置如下:\nCPU 1核；\n内存 2G；\n带宽 1Mbps；\n硬盘 40G。\n系统 CentOS 7.3 64位\n\n云服务器配置\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\n\n云服务器ECS——网络和安全——安全组——配置规则\n\n\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\n这里的设置主要是参考了阿里云的官方帮助文档 [https://help.aliyun.com/knowledge_detail/34403.html]。","published_at":"2017-09-28T13:41:32.000Z","slug":"shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost","status":"published","title":"搭建Ghost服务器","updated_at":"2017-09-29T01:50:53.000Z","updated_by":"1","tags":{"0":{"id":"59ccb425a744810195a3dc01","name":"技术","slug":"ji-zhu","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T08:34:45.000Z","updated_at":"2017-09-28T08:34:45.000Z","created_by":"1","updated_by":"1"},"1":{"id":"59cd12bfa744810195a3dc06","name":"博客","slug":"bo-ke","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T15:18:23.000Z","updated_at":"2017-09-28T15:18:23.000Z","created_by":"1","updated_by":"1"}},"author_id":"1"}}},"query":{"include":"tags"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"http://47.95.197.107","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/*","content-type":"application/json; charset=utf-8","etag":"W/\"432b-V7wETVSLt0gLTy99hNjta2DLgZA\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"54ms"},"msg":"","time":"2017-09-29T01:50:56.331Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"1d91dba0-a4ba-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/posts/59ccf296a744810195a3dc03/?include=tags","method":"PUT","originalUrl":"/ghost/api/v0.1/posts/59ccf296a744810195a3dc03/?include=tags","params":{"id":"59ccf296a744810195a3dc03"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","content-length":"18203","origin":"http://47.95.197.107","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"1.9","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{"posts":{"0":{"id":"59ccf296a744810195a3dc03","created_at":"2017-09-28T13:01:10.000Z","created_by":"1","featured":false,"feature_image":"/content/images/2017/09/ghost.png","codeinjection_foot":"","codeinjection_head":"","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\\n什么是ghost？\\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\\n但是这并不影响我们搭建ghost服务器。吼吼吼~\\n\\n# 搭建准备\\n在[**阿里云**](https://www.aliyun.com/)上购买了一年的ECS服务器，配置如下:\\nCPU 1核；\\n内存 2G；\\n带宽 1Mbps；\\n硬盘 40G。\\n系统 CentOS 7.3 64位\\n\\n# 云服务器配置\\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\\n> 云服务器ECS——网络和安全——安全组——配置规则\\n![--------](/content/images/2017/09/--------.jpg)\\n![-------](/content/images/2017/09/-------.jpg)\\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\\n这里的设置主要是参考了[**阿里云的官方帮助文档**](https://help.aliyun.com/knowledge_detail/34403.html)。\\n# 安装ghost\\n\\n## 需要用到的东西\\n\\n* 一个完成A记录解析设置的域名（建议做好ICP备案）；（可选）\\n* 使用 [**MySQL**](https://www.mysql.com/) 做数据库服务；\\n* 使用 [**Nginx**](https://nginx.org/) 做网页服务器（Ghost的代理服务）；\\n* 使用 [**NodeJS**](https://nodejs.org/) 做后端服务；\\n* [**Ghost**](https://ghost.org/)一个开源的博客系统；\\n\\n## 基础设置\\n\\n### 查看一下系统信息：\\n\\n```\\ncat /etc/redhat-release  \\n```\\n> #>>> CentOS Linux release 7.3.1611 (Core)\\n\\n\\n### 更新一下系统，安装一些基础工具：\\n\\n阿里云的centos已经优化了yum的源，你也可以自行修改\\n```\\nyum update -y && yum upgrage -y && yum clean all\\n```\\ncurl, wget都是方便后边的下载\\nvim作为一个老牌Linux文本编辑工具，你值得拥有\\n```\\nyum install curl wget vim -y\\n```\\n\\n### 更新全系统的vim配置\\n```\\ncurl https://raw.githubusercontent.com/tonyc726/vim-for-server/master/vimrc > /etc/vimrc  \\n```\\n\\n## MySQL安装设置\\n由于CentOS7已经不带Mysql数据库了（默认的数据库是MariaDB，Mysql的一个分支），所以需要先安裝MySQL Repository（具体的版本号，可以参考 https://dev.mysql.com/downloads/repo/yum/）:\\n\\n### 安裝 MySQL Repository\\n```\\nrpm -Uvh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\\n```\\n### 安装MySQL数据库的服务器社区稳定版\\n```\\nyum install mysql-community-server -y\\n```\\n### 启动MySQL服务\\n```\\nsystemctl start mysqld.service\\n```\\n### 设置随系统自启动\\n```\\nsystemctl enable mysqld.service  \\n```\\n### 初始化设置\\n```\\nmysql_secure_installation\\n```\\n由于MySQL5.7默认会初始化Root用户的密码，所以在执行之前需要获取这个初始密码：\\n（本次设置中并没有执行如下操作，应为默认安装后第一次运行时不需密码，在初始化过程中会提示设置密码）\\n```\\ngrep \\\"password\\\" /var/log/mysqld.log  \\n```\\n\\n\\n### 创建Ghost需要的用户及数据库：\\n\\n运行以后输入刚才拿到的密码\\n```\\nmysql -uroot -p \\n```\\n添加新数据库blog，后面Ghost会用到\\n```\\nCREATE DATABASE blog;\\n```\\n添加新用户ghost（password替换为你需要的密码）\\n```\\nCREATE USER ghost IDENTIFIED BY 'password';\\n```\\n授予ghost用户在blog数据库上的所有权限\\n（password就是你刚才创建ghost账户时设置的密码）\\n```\\nGRANT ALL PRIVILEGES ON blog.* TO 'ghost'@'localhost' IDENTIFIED BY 'password';\\n```\\n刷新权限\\n（当执行过GRANT，CREATE USER，REVOKE命令之后，必须要执行刷新权限才能生效）\\n```\\nFLUSH PRIVILEGES;\\n```\\nCtrl+D 退出\\n\\n好了，以上就是MySQL部分\\n\\n## NodeJS安装设置\\n\\n推荐使用以下方式安装NodeJS\\n本系统使用V6稳定版，如需其它版本，你可以自行调整\\n```\\ncurl -sL https://rpm.nodesource.com/setup_6.x | sudo -E bash -  \\n```\\n### 安装NodeJS及其依赖包\\nyum install gcc-c++ make nodejs -y\\n\\nNodeJS安装以后，默认已经自带的NPM\\n不过npm之前一直被吐槽，建议***升级最新版或者用yarn代替***\\n### 升级npm至最新版本(^v5.0.4)\\n```\\nnpm install npm@latest -g\\n```\\n### 安装yarn代替（推荐）\\n```\\ncurl --silent --location https://rpm.nodesource.com/setup_6.x | bash -  \\nyum install yarn -y\\n```\\n\\n### 测试一下\\n```\\nnode -v\\n```\\n\\n> #>>> v6.11.0\\n```\\nnpm -v\\n```\\n> #>>> v5.1.0\\n```\\nyarn -v\\n```\\n> #>>> v0.27.5\\n\\n这里有个坑，如果直接使用yum install nodejs -y也是可以安装NodeJS的，不过nodesource维护的更加好，而且可以升级npm。\\n\\n如果你已经看到了最后输出的信息，那么久代表NodeJS已经就绪了。\\n## Nginx安装配置\\n\\n### 直接安装即可\\n```\\nyum install nginx -y\\n```\\n### 立即启动\\n```\\nsystemctl start nginx\\n```\\n### 设置开机自启动\\n```\\nsystemctl enable nginx  \\n```\\n\\n现在，打开你的浏览器，输入你的公网IP，不出意外，你就已经可以看到一个Nginx的欢迎页面了。\\n\\n不过，出于后期的扩展或者安全性考虑，我们需要为系统创建一个名为www的用户，专门用于管理网站.\\n\\n### 反向代理80端口\\n\\n众所周知，网站基本都以 80 端口作为默认端口（除非你不想让别人访问你的网站），也就是说：访问域名或服务器 IP 地址，实际上是在访问该服务器的 80 端口。而 Ghost 博客默认运行在 2368 端口上。\\n\\n为了输入域名或服务器 IP 地址就可以访问到你的 Ghost 博客，需要将访问 80 端口的请求，反向代理到 Ghost 的 2368 端口上。\\n\\n进入 Nginx 配置目录：\\n    ```\\n    cd /etc/nginx/conf.d\\n    ```\\n新建 Ghost 博客的 Nginx 配置文件：\\n```\\nvim ghost.conf\\n```\\n按 i 输入以下内容：\\n\\n> server {  \\n>     listen 80;\\n>     server_name loyalsoldier.me //这里修改为你的域名；如果没有域名，则改为服务器 IP 地址;\\n> \\n>     gzip on;\\n>     gzip_types text/plain application/xml text/css application/javascript application/json application/font-woff application/font-woff2 application/vnd.ms-fontobject application/x-font-ttf font/opentype application/pdf image/png image/bmp image/gif image/jpeg image/webp image/svg+xml;\\n>     gzip_proxied no-cache no-store private expired auth;\\n>     gzip_vary on;\\n>     gzip_min_length 1024;\\n> \\n>     location / {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>     }\\n> \\n>     location ~* .*\\\\.(jpg|jpeg|bmp|png|gif|ico|js|css|eot|woff|woff2|svg|ttf|otf)$ {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n> \\n>         add_header Cache-Control max-age=2592000;\\n>         expires    30d;\\n>         etag       on;\\n>     }\\n> }\\n\\n按 ESC 键结束编辑，输入 :wq 保存文件并退出编辑\\n使用 nginx -t 测试 Nginx 配置文件是否语法正确：\\n\\n```\\nsudo nginx -t\\n```\\n若输出的结果有 ok、successful 等字样，表示配置正确\\n\\n如果正确的话，重启Nginx服务\\n```\\nsystemctl restart nginx.service  \\n```\\n\\n\\n## 添加新用户\\n创建一个名为www的用户组\\n```\\nadduser www\\n```\\n\\n### 设置密码(请记录下你的密码，以后需要用到)\\n```\\npasswd www\\n```\\n\\n### 分配Root权限 - 让我们新创建的www用户拥有Root用户的权限\\n```\\ngpasswd -a www wheel\\n```\\n### 将nginx用户添加入www的用户组，方便后期的权限控制\\n```\\nusermod -a -G nginx,www nginx  \\n```\\n\\n## 安装ghost\\n以上就是Ghost需要用到的基础系统了，下面就来安装Ghost，新开一个Terminal窗口，用**www**账户登录：\\n```\\nssh www@xxx.xxx.xxx.xxx  \\n```\\n然后下载Ghost最新的代码。\\n\\n### 下载Ghost最新的稳定版\\n```\\ncurl -L https://ghost.org/zip/ghost-latest.zip -o ghost.zip\\n```\\n### 解压\\n```\\nunzip -uo ghost.zip -d ghost\\n```\\n### 进入Ghost的目录并安装生产环境的依赖\\n```\\ncd ghost && npm install --production\\n```\\nnpm install --production这个命令可能需要执行多次，也是由于国内网络的原因，导致下载速度很慢，每次都下载不完全，需要多次执行，直到成功安装完成。\\n### 修改Ghost的config，修改数据库配置\\n```\\nvim config.js  \\n```\\n完整的config.js配置如下：\\n\\n> var path = require('path'),  \\n>     config;\\n> \\n> config = {  \\n>     production: {\\n>         url: 'https://www.xxxx.xxx',（换成服务器ip或者申请的域名）\\n>         mail: {},\\n>         database: {\\n>             client: 'mysql',（前面安装的mysql数据库，这里一定要对应）\\n>             connection: {\\n>                 host     : '127.0.0.1',\\n>                 user     : 'ghost', //用户名\\n>                 password : 'password', //ghost的密码，之前设置的\\n>                 database : 'blog', //数据库名\\n>                 charset  : 'utf8'\\n>             },\\n>             debug: false\\n>         },\\n> \\n>         server: {\\n>             host: '127.0.0.1',\\n>             port: '2368'\\n>         }\\n>     }\\n> };\\n> \\n> module.exports = config;  \\n\\n除了ghost安装根目录下\\n\\n### 安装knex-migrator\\n实际上这个时候用生产模式运行ghost会报错，提示没有安装knex-migrator。\\n安装之前需要先编辑ghost安装文件夹下的***MigrtorConfig.js***文件。\\n\\n\\n使用vim编写MigrtorConfig.js文件\\n\\n```\\nvim MigrtorConfig.js\\n```\\n\\n\\n> module.exports = {\\n>     database: {\\n>         client: 'mysql',\\n>         connection: {\\n>             host: '127.0.0.1',\\n>             user: 'ghost',（之前mysql设置时建立的用户名）\\n>             password: 'password',（改成mysql的ghost用户密码）\\n>             charset: 'utf8',\\n>             name: 'blog'（之前mysql设置时建立的数据库）\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version',\\n>  /**\\n>     subfolder: 'upgrades'  [default: versions]\\n>     （这一部分在执行时总出问题，就注释掉了）\\n>  */\\n> }\\n> （下面应该是数据库使用sqlite3时的设置，由于本方案使用的mysql，所以可以不用写进去）\\n> module.exports = {\\n>     database: {\\n>         client: 'sqlite3',\\n>         connection: {\\n>             filename: 'path/to/your.db'\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version'\\n> }\\n> \\n\\n使用下面指令安装：\\n```\\nnpm install -g knex-migrator\\n```\\n\\n由于国内网络的原因，这个命令也可能需要执行多次才能安装完，中间会提示校验错误，这个应该是下载没有完成，而网络链接断开了的原因，再执行一次就行，直到最后完成安装。\\n\\n\\n运行一下：\\n```\\nnpm start --production\\n```\\n如果看到下面的提示，证明你已经完成80%了：\\n\\n\\n> Ghost is running in production...  \\n> Your blog is now available on https://www.itony.net  \\n> Ctrl+C to shut down  \\n\\n### 问题及解决方案\\n在执行npm start --production的时候，遇到npm权限的问题，提示没有node_modules文件夹的写权限，这个时候使用sudo命令进行安装时又提示别的错误，最终采用\\nnpmjs.com网站中的[解决方法2](https://docs.npmjs.com/getting-started/fixing-npm-permissions)。\\n首先检查npm的路径：\\n```\\nnpm config get prefix\\n```\\n发现是/usr\\n然后改变npm的默认路径：\\n1.为全局安装路径建立文件夹：（操作均在www用户下完成）\\n```\\nmkdir ~/.npm-global\\n```\\n2.设置默认路径：\\n```\\nnpm config set prefix '~/.npm-global'\\n```\\n3.加入用户PATH：\\n打开用户家目录下面的profile文件，这里是.bash_profile，加入下面的语句：\\n```\\nexport PATH=~/.npm-global/bin:$PATH\\n```\\n4.更新profile文件\\n```\\nsource ~/.bash_profile\\n```\\n**检验**：全局下载文件包，**不要用sudo**，也可以省去检测\\n``` \\nnpm install -g jshint\\n```\\n也可以使用下面更改环境变量的方式代替2-4步：（如果不想更改profile文件的话）\\n```\\nNPM_CONFIG_PREFIX=~/.npm-global\\n```\\n## 全局安装PM2\\n目前你是开着远程连接到你的服务器，一旦你把窗口关闭了，那么你刚才起的npm start --production可就悲剧了，如何避免呢，这时候我们就需要一个能帮我们在后台稳定运行node服务的工具了，目前比较火热的要数PM2了：\\n\\n``\\nyarn global add pm2 --prefix /usr/local\\n``\\n### 用PM2来启动Ghost的node服务\\n先切到ghost的目录，然后再运行\\n```\\nNODE_ENV=production pm2 start index.js --name \\\"blog\\\"\\n```\\n### 检查运行结果\\n```\\npm2 show blog  \\n```\\n\"}]],\"sections\":[[10,0]]}","page":false,"plaintext":"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\n什么是ghost？\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\n但是这并不影响我们搭建ghost服务器。吼吼吼~\n\n搭建准备\n在阿里云 [https://www.aliyun.com/]上购买了一年的ECS服务器，配置如下:\nCPU 1核；\n内存 2G；\n带宽 1Mbps；\n硬盘 40G。\n系统 CentOS 7.3 64位\n\n云服务器配置\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\n\n云服务器ECS——网络和安全——安全组——配置规则\n\n\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\n这里的设置主要是参考了阿里云的官方帮助文档 [https://help.aliyun.com/knowledge_detail/34403.html]。","published_at":"2017-09-28T13:41:32.000Z","slug":"shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost","status":"published","title":"搭建Ghost服务器","updated_at":"2017-09-29T01:50:56.000Z","updated_by":"1","tags":{"0":{"id":"59ccb425a744810195a3dc01","name":"技术","slug":"ji-zhu","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T08:34:45.000Z","updated_at":"2017-09-28T08:34:45.000Z","created_by":"1","updated_by":"1"},"1":{"id":"59cd12bfa744810195a3dc06","name":"博客","slug":"bo-ke","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T15:18:23.000Z","updated_at":"2017-09-28T15:18:23.000Z","created_by":"1","updated_by":"1"}},"author_id":"1"}}},"query":{"include":"tags"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"http://47.95.197.107","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/*","content-type":"application/json; charset=utf-8","etag":"W/\"4808-J+Xw7sazERozsw/X9EVelqpXMcY\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"78ms"},"msg":"","time":"2017-09-29T02:01:32.587Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"29b43e00-a4ba-11e7-ad29-7b3837c864ae","userId":null},"url":"/","method":"GET","originalUrl":"/","params":{},"headers":{"x-forwarded-for":"71.6.202.198","x-real-ip":"71.6.202.198","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","user-agent":"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64)","accept-encoding":"gzip"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"20b1-qt7RHaZA7PxPQZjB5hbMY4mYxZU\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"54ms"},"msg":"","time":"2017-09-29T02:01:52.919Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"782d3370-a4ba-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/posts/59ccf296a744810195a3dc03/?include=tags","method":"PUT","originalUrl":"/ghost/api/v0.1/posts/59ccf296a744810195a3dc03/?include=tags","params":{"id":"59ccf296a744810195a3dc03"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","content-length":"18507","origin":"http://47.95.197.107","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"1.9","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{"posts":{"0":{"id":"59ccf296a744810195a3dc03","created_at":"2017-09-28T13:01:10.000Z","created_by":"1","featured":false,"feature_image":"/content/images/2017/09/ghost.png","codeinjection_foot":"","codeinjection_head":"","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\\n什么是ghost？\\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\\n但是这并不影响我们搭建ghost服务器。吼吼吼~\\n\\n# 搭建准备\\n在[**阿里云**](https://www.aliyun.com/)上购买了一年的ECS服务器，配置如下:\\nCPU 1核；\\n内存 2G；\\n带宽 1Mbps；\\n硬盘 40G。\\n系统 CentOS 7.3 64位\\n\\n# 云服务器配置\\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\\n> 云服务器ECS——网络和安全——安全组——配置规则\\n![--------](/content/images/2017/09/--------.jpg)\\n![-------](/content/images/2017/09/-------.jpg)\\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\\n这里的设置主要是参考了[**阿里云的官方帮助文档**](https://help.aliyun.com/knowledge_detail/34403.html)。\\n# 安装ghost\\n\\n## 需要用到的东西\\n\\n* 一个完成A记录解析设置的域名（建议做好ICP备案）；（可选）\\n* 使用 [**MySQL**](https://www.mysql.com/) 做数据库服务；\\n* 使用 [**Nginx**](https://nginx.org/) 做网页服务器（Ghost的代理服务）；\\n* 使用 [**NodeJS**](https://nodejs.org/) 做后端服务；\\n* [**Ghost**](https://ghost.org/)一个开源的博客系统；\\n\\n## 基础设置\\n\\n### 查看一下系统信息：\\n\\n```\\ncat /etc/redhat-release  \\n```\\n> #>>> CentOS Linux release 7.3.1611 (Core)\\n\\n\\n### 更新一下系统，安装一些基础工具：\\n\\n阿里云的centos已经优化了yum的源，你也可以自行修改\\n```\\nyum update -y && yum upgrage -y && yum clean all\\n```\\ncurl, wget都是方便后边的下载\\nvim作为一个老牌Linux文本编辑工具，你值得拥有\\n```\\nyum install curl wget vim -y\\n```\\n\\n### 更新全系统的vim配置\\n```\\ncurl https://raw.githubusercontent.com/tonyc726/vim-for-server/master/vimrc > /etc/vimrc  \\n```\\n\\n## MySQL安装设置\\n由于CentOS7已经不带Mysql数据库了（默认的数据库是MariaDB，Mysql的一个分支），所以需要先安裝MySQL Repository（具体的版本号，可以参考 https://dev.mysql.com/downloads/repo/yum/）:\\n\\n### 安裝 MySQL Repository\\n```\\nrpm -Uvh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\\n```\\n### 安装MySQL数据库的服务器社区稳定版\\n```\\nyum install mysql-community-server -y\\n```\\n### 启动MySQL服务\\n```\\nsystemctl start mysqld.service\\n```\\n### 设置随系统自启动\\n```\\nsystemctl enable mysqld.service  \\n```\\n### 初始化设置\\n```\\nmysql_secure_installation\\n```\\n由于MySQL5.7默认会初始化Root用户的密码，所以在执行之前需要获取这个初始密码：\\n（本次设置中并没有执行如下操作，应为默认安装后第一次运行时不需密码，在初始化过程中会提示设置密码）\\n```\\ngrep \\\"password\\\" /var/log/mysqld.log  \\n```\\n\\n\\n### 创建Ghost需要的用户及数据库：\\n\\n运行以后输入刚才拿到的密码\\n```\\nmysql -uroot -p \\n```\\n添加新数据库blog，后面Ghost会用到\\n```\\nCREATE DATABASE blog;\\n```\\n添加新用户ghost（password替换为你需要的密码）\\n```\\nCREATE USER ghost IDENTIFIED BY 'password';\\n```\\n授予ghost用户在blog数据库上的所有权限\\n（password就是你刚才创建ghost账户时设置的密码）\\n```\\nGRANT ALL PRIVILEGES ON blog.* TO 'ghost'@'localhost' IDENTIFIED BY 'password';\\n```\\n刷新权限\\n（当执行过GRANT，CREATE USER，REVOKE命令之后，必须要执行刷新权限才能生效）\\n```\\nFLUSH PRIVILEGES;\\n```\\nCtrl+D 退出\\n\\n好了，以上就是MySQL部分\\n\\n## NodeJS安装设置\\n\\n推荐使用以下方式安装NodeJS\\n本系统使用V6稳定版，如需其它版本，你可以自行调整\\n```\\ncurl -sL https://rpm.nodesource.com/setup_6.x | sudo -E bash -  \\n```\\n### 安装NodeJS及其依赖包\\nyum install gcc-c++ make nodejs -y\\n\\nNodeJS安装以后，默认已经自带的NPM\\n不过npm之前一直被吐槽，建议***升级最新版或者用yarn代替***\\n### 升级npm至最新版本(^v5.0.4)\\n```\\nnpm install npm@latest -g\\n```\\n### 安装yarn代替（推荐）\\n```\\ncurl --silent --location https://rpm.nodesource.com/setup_6.x | bash -  \\nyum install yarn -y\\n```\\n\\n### 测试一下\\n```\\nnode -v\\n```\\n\\n> #>>> v6.11.0\\n```\\nnpm -v\\n```\\n> #>>> v5.1.0\\n```\\nyarn -v\\n```\\n> #>>> v0.27.5\\n\\n这里有个坑，如果直接使用yum install nodejs -y也是可以安装NodeJS的，不过nodesource维护的更加好，而且可以升级npm。\\n\\n如果你已经看到了最后输出的信息，那么久代表NodeJS已经就绪了。\\n## Nginx安装配置\\n\\n### 直接安装即可\\n```\\nyum install nginx -y\\n```\\n### 立即启动\\n```\\nsystemctl start nginx\\n```\\n### 设置开机自启动\\n```\\nsystemctl enable nginx  \\n```\\n\\n现在，打开你的浏览器，输入你的公网IP，不出意外，你就已经可以看到一个Nginx的欢迎页面了。\\n\\n不过，出于后期的扩展或者安全性考虑，我们需要为系统创建一个名为www的用户，专门用于管理网站.\\n\\n### 反向代理80端口\\n\\n众所周知，网站基本都以 80 端口作为默认端口（除非你不想让别人访问你的网站），也就是说：访问域名或服务器 IP 地址，实际上是在访问该服务器的 80 端口。而 Ghost 博客默认运行在 2368 端口上。\\n\\n为了输入域名或服务器 IP 地址就可以访问到你的 Ghost 博客，需要将访问 80 端口的请求，反向代理到 Ghost 的 2368 端口上。\\n\\n进入 Nginx 配置目录：\\n    ```\\n    cd /etc/nginx/conf.d\\n    ```\\n新建 Ghost 博客的 Nginx 配置文件：\\n```\\nvim ghost.conf\\n```\\n按 i 输入以下内容：\\n\\n> server {  \\n>     listen 80;\\n>     server_name loyalsoldier.me //这里修改为你的域名；如果没有域名，则改为服务器 IP 地址;\\n> \\n>     gzip on;\\n>     gzip_types text/plain application/xml text/css application/javascript application/json application/font-woff application/font-woff2 application/vnd.ms-fontobject application/x-font-ttf font/opentype application/pdf image/png image/bmp image/gif image/jpeg image/webp image/svg+xml;\\n>     gzip_proxied no-cache no-store private expired auth;\\n>     gzip_vary on;\\n>     gzip_min_length 1024;\\n> \\n>     location / {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>     }\\n> \\n>     location ~* .*\\\\.(jpg|jpeg|bmp|png|gif|ico|js|css|eot|woff|woff2|svg|ttf|otf)$ {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n> \\n>         add_header Cache-Control max-age=2592000;\\n>         expires    30d;\\n>         etag       on;\\n>     }\\n> }\\n\\n按 ESC 键结束编辑，输入 :wq 保存文件并退出编辑\\n使用 nginx -t 测试 Nginx 配置文件是否语法正确：\\n\\n```\\nsudo nginx -t\\n```\\n若输出的结果有 ok、successful 等字样，表示配置正确\\n\\n如果正确的话，重启Nginx服务\\n```\\nsystemctl restart nginx.service  \\n```\\n\\n\\n## 添加新用户\\n创建一个名为www的用户组\\n```\\nadduser www\\n```\\n\\n### 设置密码(请记录下你的密码，以后需要用到)\\n```\\npasswd www\\n```\\n\\n### 分配Root权限 - 让我们新创建的www用户拥有Root用户的权限\\n```\\ngpasswd -a www wheel\\n```\\n### 将nginx用户添加入www的用户组，方便后期的权限控制\\n```\\nusermod -a -G nginx,www nginx  \\n```\\n\\n## 安装ghost\\n以上就是Ghost需要用到的基础系统了，下面就来安装Ghost，新开一个Terminal窗口，用**www**账户登录：\\n```\\nssh www@xxx.xxx.xxx.xxx  \\n```\\n然后下载Ghost最新的代码。\\n\\n### 下载Ghost最新的稳定版\\n```\\ncurl -L https://ghost.org/zip/ghost-latest.zip -o ghost.zip\\n```\\n### 解压\\n```\\nunzip -uo ghost.zip -d ghost\\n```\\n### 进入Ghost的目录并安装生产环境的依赖\\n```\\ncd ghost && npm install --production\\n```\\nnpm install --production这个命令可能需要执行多次，也是由于国内网络的原因，导致下载速度很慢，每次都下载不完全，需要多次执行，直到成功安装完成。\\n### 修改Ghost的config，修改数据库配置\\n```\\nvim config.js  \\n```\\n完整的config.js配置如下：\\n\\n> var path = require('path'),  \\n>     config;\\n> \\n> config = {  \\n>     production: {\\n>         url: 'https://www.xxxx.xxx',（换成服务器ip或者申请的域名）\\n>         mail: {},\\n>         database: {\\n>             client: 'mysql',（前面安装的mysql数据库，这里一定要对应）\\n>             connection: {\\n>                 host     : '127.0.0.1',\\n>                 user     : 'ghost', //用户名\\n>                 password : 'password', //ghost的密码，之前设置的\\n>                 database : 'blog', //数据库名\\n>                 charset  : 'utf8'\\n>             },\\n>             debug: false\\n>         },\\n> \\n>         server: {\\n>             host: '127.0.0.1',\\n>             port: '2368'\\n>         }\\n>     }\\n> };\\n> \\n> module.exports = config;  \\n\\n除了ghost安装根目录下的这个配置文件，还要检查一下/ghost/core/server/config下面的相应的配置文件，将相应的项更改正确。\\n\\n### 安装knex-migrator\\n实际上这个时候用生产模式运行ghost会报错，提示没有安装knex-migrator。\\n安装之前需要先编辑ghost安装文件夹下的***MigrtorConfig.js***文件。\\n\\n\\n使用vim编写MigrtorConfig.js文件\\n\\n```\\nvim MigrtorConfig.js\\n```\\n\\n\\n> module.exports = {\\n>     database: {\\n>         client: 'mysql',\\n>         connection: {\\n>             host: '127.0.0.1',\\n>             user: 'ghost',（之前mysql设置时建立的用户名）\\n>             password: 'password',（改成mysql的ghost用户密码）\\n>             charset: 'utf8',\\n>             name: 'blog'（之前mysql设置时建立的数据库）\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version',\\n>  /**\\n>     subfolder: 'upgrades'  [default: versions]\\n>     （这一部分在执行时总出问题，就注释掉了）\\n>  */\\n> }\\n> （下面应该是数据库使用sqlite3时的设置，由于本方案使用的mysql，所以可以不用写进去）\\n> module.exports = {\\n>     database: {\\n>         client: 'sqlite3',\\n>         connection: {\\n>             filename: 'path/to/your.db'\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version'\\n> }\\n> \\n\\n使用下面指令安装：\\n```\\nnpm install -g knex-migrator\\n```\\n\\n由于国内网络的原因，这个命令也可能需要执行多次才能安装完，中间会提示校验错误，这个应该是下载没有完成，而网络链接断开了的原因，再执行一次就行，直到最后完成安装。\\n\\n\\n运行一下：\\n```\\nnpm start --production\\n```\\n如果看到下面的提示，证明你已经完成80%了：\\n\\n\\n> Ghost is running in production...  \\n> Your blog is now available on https://www.itony.net  \\n> Ctrl+C to shut down  \\n\\n### 问题及解决方案\\n\\n#### 权限问题\\n在执行npm start --production的时候，遇到npm权限的问题，提示没有node_modules文件夹的写权限，这个时候使用sudo命令进行安装时又提示别的错误，最终采用\\nnpmjs.com网站中的[解决方法2](https://docs.npmjs.com/getting-started/fixing-npm-permissions)。\\n首先检查npm的路径：\\n```\\nnpm config get prefix\\n```\\n发现是/usr\\n然后改变npm的默认路径：\\n1.为全局安装路径建立文件夹：（操作均在www用户下完成）\\n```\\nmkdir ~/.npm-global\\n```\\n2.设置默认路径：\\n```\\nnpm config set prefix '~/.npm-global'\\n```\\n3.加入用户PATH：\\n打开用户家目录下面的profile文件，这里是.bash_profile，加入下面的语句：\\n```\\nexport PATH=~/.npm-global/bin:$PATH\\n```\\n4.更新profile文件\\n```\\nsource ~/.bash_profile\\n```\\n**检验**：全局下载文件包，**不要用sudo**，也可以省去检测\\n``` \\nnpm install -g jshint\\n```\\n也可以使用下面更改环境变量的方式代替2-4步：（如果不想更改profile文件的话）\\n```\\nNPM_CONFIG_PREFIX=~/.npm-global\\n```\\n#### 语法错误问题\\n> Syntax error: Unexpected token\\n出现上面的语句就要检查一下相应的配置文件的语法是否有错误。\\n## 全局安装PM2\\n目前你是开着远程连接到你的服务器，一旦你把窗口关闭了，那么你刚才起的npm start --production可就悲剧了，如何避免呢，这时候我们就需要一个能帮我们在后台稳定运行node服务的工具了，目前比较火热的要数PM2了：\\n\\n``\\nyarn global add pm2 --prefix /usr/local\\n``\\n### 用PM2来启动Ghost的node服务\\n先切到ghost的目录，然后再运行\\n```\\nNODE_ENV=production pm2 start index.js --name \\\"blog\\\"\\n```\\n### 检查运行结果\\n```\\npm2 show blog  \\n```\\n\"}]],\"sections\":[[10,0]]}","page":false,"plaintext":"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\n什么是ghost？\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\n但是这并不影响我们搭建ghost服务器。吼吼吼~\n\n搭建准备\n在阿里云 [https://www.aliyun.com/]上购买了一年的ECS服务器，配置如下:\nCPU 1核；\n内存 2G；\n带宽 1Mbps；\n硬盘 40G。\n系统 CentOS 7.3 64位\n\n云服务器配置\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\n\n云服务器ECS——网络和安全——安全组——配置规则\n\n\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\n这里的设置主要是参考了阿里云的官方帮助文档 [https://help.aliyun.com/knowledge_detail/34403.html]。","published_at":"2017-09-28T13:41:32.000Z","slug":"shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost","status":"published","title":"搭建Ghost服务器","updated_at":"2017-09-29T02:01:32.000Z","updated_by":"1","tags":{"0":{"id":"59ccb425a744810195a3dc01","name":"技术","slug":"ji-zhu","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T08:34:45.000Z","updated_at":"2017-09-28T08:34:45.000Z","created_by":"1","updated_by":"1"},"1":{"id":"59cd12bfa744810195a3dc06","name":"博客","slug":"bo-ke","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T15:18:23.000Z","updated_at":"2017-09-28T15:18:23.000Z","created_by":"1","updated_by":"1"}},"author_id":"1"}}},"query":{"include":"tags"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"http://47.95.197.107","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/*","content-type":"application/json; charset=utf-8","etag":"W/\"496f-jad3lN0E84frSLzfUHAmSPpCq3g\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"84ms"},"msg":"","time":"2017-09-29T02:04:04.605Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"868c3f60-a4ba-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/posts/59ccf296a744810195a3dc03/?include=tags","method":"PUT","originalUrl":"/ghost/api/v0.1/posts/59ccf296a744810195a3dc03/?include=tags","params":{"id":"59ccf296a744810195a3dc03"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","content-length":"18561","origin":"http://47.95.197.107","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"1.9","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{"posts":{"0":{"id":"59ccf296a744810195a3dc03","created_at":"2017-09-28T13:01:10.000Z","created_by":"1","featured":false,"feature_image":"/content/images/2017/09/ghost.png","codeinjection_foot":"","codeinjection_head":"","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\\n什么是ghost？\\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\\n但是这并不影响我们搭建ghost服务器。吼吼吼~\\n\\n# 搭建准备\\n在[**阿里云**](https://www.aliyun.com/)上购买了一年的ECS服务器，配置如下:\\nCPU 1核；\\n内存 2G；\\n带宽 1Mbps；\\n硬盘 40G。\\n系统 CentOS 7.3 64位\\n\\n# 云服务器配置\\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\\n> 云服务器ECS——网络和安全——安全组——配置规则\\n![--------](/content/images/2017/09/--------.jpg)\\n![-------](/content/images/2017/09/-------.jpg)\\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\\n这里的设置主要是参考了[**阿里云的官方帮助文档**](https://help.aliyun.com/knowledge_detail/34403.html)。\\n# 安装ghost\\n\\n## 需要用到的东西\\n\\n* 一个完成A记录解析设置的域名（建议做好ICP备案）；（可选）\\n* 使用 [**MySQL**](https://www.mysql.com/) 做数据库服务；\\n* 使用 [**Nginx**](https://nginx.org/) 做网页服务器（Ghost的代理服务）；\\n* 使用 [**NodeJS**](https://nodejs.org/) 做后端服务；\\n* [**Ghost**](https://ghost.org/)一个开源的博客系统；\\n\\n## 基础设置\\n\\n### 查看一下系统信息：\\n\\n```\\ncat /etc/redhat-release  \\n```\\n> #>>> CentOS Linux release 7.3.1611 (Core)\\n\\n\\n### 更新一下系统，安装一些基础工具：\\n\\n阿里云的centos已经优化了yum的源，你也可以自行修改\\n```\\nyum update -y && yum upgrage -y && yum clean all\\n```\\ncurl, wget都是方便后边的下载\\nvim作为一个老牌Linux文本编辑工具，你值得拥有\\n```\\nyum install curl wget vim -y\\n```\\n\\n### 更新全系统的vim配置\\n```\\ncurl https://raw.githubusercontent.com/tonyc726/vim-for-server/master/vimrc > /etc/vimrc  \\n```\\n\\n## MySQL安装设置\\n由于CentOS7已经不带Mysql数据库了（默认的数据库是MariaDB，Mysql的一个分支），所以需要先安裝MySQL Repository（具体的版本号，可以参考 https://dev.mysql.com/downloads/repo/yum/）:\\n\\n### 安裝 MySQL Repository\\n```\\nrpm -Uvh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\\n```\\n### 安装MySQL数据库的服务器社区稳定版\\n```\\nyum install mysql-community-server -y\\n```\\n### 启动MySQL服务\\n```\\nsystemctl start mysqld.service\\n```\\n### 设置随系统自启动\\n```\\nsystemctl enable mysqld.service  \\n```\\n### 初始化设置\\n```\\nmysql_secure_installation\\n```\\n由于MySQL5.7默认会初始化Root用户的密码，所以在执行之前需要获取这个初始密码：\\n（本次设置中并没有执行如下操作，应为默认安装后第一次运行时不需密码，在初始化过程中会提示设置密码）\\n```\\ngrep \\\"password\\\" /var/log/mysqld.log  \\n```\\n\\n\\n### 创建Ghost需要的用户及数据库：\\n\\n运行以后输入刚才拿到的密码\\n```\\nmysql -uroot -p \\n```\\n添加新数据库blog，后面Ghost会用到\\n```\\nCREATE DATABASE blog;\\n```\\n添加新用户ghost（password替换为你需要的密码）\\n```\\nCREATE USER ghost IDENTIFIED BY 'password';\\n```\\n授予ghost用户在blog数据库上的所有权限\\n（password就是你刚才创建ghost账户时设置的密码）\\n```\\nGRANT ALL PRIVILEGES ON blog.* TO 'ghost'@'localhost' IDENTIFIED BY 'password';\\n```\\n刷新权限\\n（当执行过GRANT，CREATE USER，REVOKE命令之后，必须要执行刷新权限才能生效）\\n```\\nFLUSH PRIVILEGES;\\n```\\nCtrl+D 退出\\n\\n好了，以上就是MySQL部分\\n\\n## NodeJS安装设置\\n\\n推荐使用以下方式安装NodeJS\\n本系统使用V6稳定版，如需其它版本，你可以自行调整\\n```\\ncurl -sL https://rpm.nodesource.com/setup_6.x | sudo -E bash -  \\n```\\n### 安装NodeJS及其依赖包\\nyum install gcc-c++ make nodejs -y\\n\\nNodeJS安装以后，默认已经自带的NPM\\n不过npm之前一直被吐槽，建议***升级最新版或者用yarn代替***\\n### 升级npm至最新版本(^v5.0.4)\\n```\\nnpm install npm@latest -g\\n```\\n### 安装yarn代替（推荐）\\n```\\ncurl --silent --location https://rpm.nodesource.com/setup_6.x | bash -  \\nyum install yarn -y\\n```\\n\\n### 测试一下\\n```\\nnode -v\\n```\\n\\n> #>>> v6.11.0\\n```\\nnpm -v\\n```\\n> #>>> v5.1.0\\n```\\nyarn -v\\n```\\n> #>>> v0.27.5\\n\\n这里有个坑，如果直接使用yum install nodejs -y也是可以安装NodeJS的，不过nodesource维护的更加好，而且可以升级npm。\\n\\n如果你已经看到了最后输出的信息，那么久代表NodeJS已经就绪了。\\n## Nginx安装配置\\n\\n### 直接安装即可\\n```\\nyum install nginx -y\\n```\\n### 立即启动\\n```\\nsystemctl start nginx\\n```\\n### 设置开机自启动\\n```\\nsystemctl enable nginx  \\n```\\n\\n现在，打开你的浏览器，输入你的公网IP，不出意外，你就已经可以看到一个Nginx的欢迎页面了。\\n\\n不过，出于后期的扩展或者安全性考虑，我们需要为系统创建一个名为www的用户，专门用于管理网站.\\n\\n### 反向代理80端口\\n\\n众所周知，网站基本都以 80 端口作为默认端口（除非你不想让别人访问你的网站），也就是说：访问域名或服务器 IP 地址，实际上是在访问该服务器的 80 端口。而 Ghost 博客默认运行在 2368 端口上。\\n\\n为了输入域名或服务器 IP 地址就可以访问到你的 Ghost 博客，需要将访问 80 端口的请求，反向代理到 Ghost 的 2368 端口上。\\n\\n进入 Nginx 配置目录：\\n    ```\\n    cd /etc/nginx/conf.d\\n    ```\\n新建 Ghost 博客的 Nginx 配置文件：\\n```\\nvim ghost.conf\\n```\\n按 i 输入以下内容：\\n\\n> server {  \\n>     listen 80;\\n>     server_name loyalsoldier.me //这里修改为你的域名；如果没有域名，则改为服务器 IP 地址;\\n> \\n>     gzip on;\\n>     gzip_types text/plain application/xml text/css application/javascript application/json application/font-woff application/font-woff2 application/vnd.ms-fontobject application/x-font-ttf font/opentype application/pdf image/png image/bmp image/gif image/jpeg image/webp image/svg+xml;\\n>     gzip_proxied no-cache no-store private expired auth;\\n>     gzip_vary on;\\n>     gzip_min_length 1024;\\n> \\n>     location / {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>     }\\n> \\n>     location ~* .*\\\\.(jpg|jpeg|bmp|png|gif|ico|js|css|eot|woff|woff2|svg|ttf|otf)$ {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n> \\n>         add_header Cache-Control max-age=2592000;\\n>         expires    30d;\\n>         etag       on;\\n>     }\\n> }\\n\\n按 ESC 键结束编辑，输入 :wq 保存文件并退出编辑\\n使用 nginx -t 测试 Nginx 配置文件是否语法正确：\\n\\n```\\nsudo nginx -t\\n```\\n若输出的结果有 ok、successful 等字样，表示配置正确\\n\\n如果正确的话，重启Nginx服务\\n```\\nsystemctl restart nginx.service  \\n```\\n\\n\\n## 添加新用户\\n创建一个名为www的用户组\\n```\\nadduser www\\n```\\n\\n### 设置密码(请记录下你的密码，以后需要用到)\\n```\\npasswd www\\n```\\n\\n### 分配Root权限 - 让我们新创建的www用户拥有Root用户的权限\\n```\\ngpasswd -a www wheel\\n```\\n### 将nginx用户添加入www的用户组，方便后期的权限控制\\n```\\nusermod -a -G nginx,www nginx  \\n```\\n\\n## 安装ghost\\n以上就是Ghost需要用到的基础系统了，下面就来安装Ghost，新开一个Terminal窗口，用**www**账户登录：\\n```\\nssh www@xxx.xxx.xxx.xxx  \\n```\\n然后下载Ghost最新的代码。\\n\\n### 下载Ghost最新的稳定版\\n```\\ncurl -L https://ghost.org/zip/ghost-latest.zip -o ghost.zip\\n```\\n### 解压\\n```\\nunzip -uo ghost.zip -d ghost\\n```\\n### 进入Ghost的目录并安装生产环境的依赖\\n```\\ncd ghost && npm install --production\\n```\\nnpm install --production这个命令可能需要执行多次，也是由于国内网络的原因，导致下载速度很慢，每次都下载不完全，需要多次执行，直到成功安装完成。\\n### 修改Ghost的config，修改数据库配置\\n```\\nvim config.js  \\n```\\n完整的config.js配置如下：\\n\\n> var path = require('path'),  \\n>     config;\\n> \\n> config = {  \\n>     production: {\\n>         url: 'https://www.xxxx.xxx',（换成服务器ip或者申请的域名）\\n>         mail: {},\\n>         database: {\\n>             client: 'mysql',（前面安装的mysql数据库，这里一定要对应）\\n>             connection: {\\n>                 host     : '127.0.0.1',\\n>                 user     : 'ghost', //用户名\\n>                 password : 'password', //ghost的密码，之前设置的\\n>                 database : 'blog', //数据库名\\n>                 charset  : 'utf8'\\n>             },\\n>             debug: false\\n>         },\\n> \\n>         server: {\\n>             host: '127.0.0.1',\\n>             port: '2368'\\n>         }\\n>     }\\n> };\\n> \\n> module.exports = config;  \\n\\n除了ghost安装根目录下的这个配置文件，还要检查一下/ghost/core/server/config下面的相应的配置文件，将相应的项更改正确，端口由于使用反向代理，因此不要更改。\\n\\n### 安装knex-migrator\\n实际上这个时候用生产模式运行ghost会报错，提示没有安装knex-migrator。\\n安装之前需要先编辑ghost安装文件夹下的***MigrtorConfig.js***文件。\\n\\n\\n使用vim编写MigrtorConfig.js文件\\n\\n```\\nvim MigrtorConfig.js\\n```\\n\\n\\n> module.exports = {\\n>     database: {\\n>         client: 'mysql',\\n>         connection: {\\n>             host: '127.0.0.1',\\n>             user: 'ghost',（之前mysql设置时建立的用户名）\\n>             password: 'password',（改成mysql的ghost用户密码）\\n>             charset: 'utf8',\\n>             name: 'blog'（之前mysql设置时建立的数据库）\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version',\\n>  /**\\n>     subfolder: 'upgrades'  [default: versions]\\n>     （这一部分在执行时总出问题，就注释掉了）\\n>  */\\n> }\\n> （下面应该是数据库使用sqlite3时的设置，由于本方案使用的mysql，所以可以不用写进去）\\n> module.exports = {\\n>     database: {\\n>         client: 'sqlite3',\\n>         connection: {\\n>             filename: 'path/to/your.db'\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version'\\n> }\\n> \\n\\n使用下面指令安装：\\n```\\nnpm install -g knex-migrator\\n```\\n\\n由于国内网络的原因，这个命令也可能需要执行多次才能安装完，中间会提示校验错误，这个应该是下载没有完成，而网络链接断开了的原因，再执行一次就行，直到最后完成安装。\\n\\n\\n运行一下：\\n```\\nnpm start --production\\n```\\n如果看到下面的提示，证明你已经完成80%了：\\n\\n\\n> Ghost is running in production...  \\n> Your blog is now available on https://www.itony.net  \\n> Ctrl+C to shut down  \\n\\n### 问题及解决方案\\n\\n#### 权限问题\\n在执行npm start --production的时候，遇到npm权限的问题，提示没有node_modules文件夹的写权限，这个时候使用sudo命令进行安装时又提示别的错误，最终采用\\nnpmjs.com网站中的[解决方法2](https://docs.npmjs.com/getting-started/fixing-npm-permissions)。\\n首先检查npm的路径：\\n```\\nnpm config get prefix\\n```\\n发现是/usr\\n然后改变npm的默认路径：\\n1.为全局安装路径建立文件夹：（操作均在www用户下完成）\\n```\\nmkdir ~/.npm-global\\n```\\n2.设置默认路径：\\n```\\nnpm config set prefix '~/.npm-global'\\n```\\n3.加入用户PATH：\\n打开用户家目录下面的profile文件，这里是.bash_profile，加入下面的语句：\\n```\\nexport PATH=~/.npm-global/bin:$PATH\\n```\\n4.更新profile文件\\n```\\nsource ~/.bash_profile\\n```\\n**检验**：全局下载文件包，**不要用sudo**，也可以省去检测\\n``` \\nnpm install -g jshint\\n```\\n也可以使用下面更改环境变量的方式代替2-4步：（如果不想更改profile文件的话）\\n```\\nNPM_CONFIG_PREFIX=~/.npm-global\\n```\\n#### 语法错误问题\\n> Syntax error: Unexpected token\\n出现上面的语句就要检查一下相应的配置文件的语法是否有错误。\\n## 全局安装PM2\\n目前你是开着远程连接到你的服务器，一旦你把窗口关闭了，那么你刚才起的npm start --production可就悲剧了，如何避免呢，这时候我们就需要一个能帮我们在后台稳定运行node服务的工具了，目前比较火热的要数PM2了：\\n\\n``\\nyarn global add pm2 --prefix /usr/local\\n``\\n### 用PM2来启动Ghost的node服务\\n先切到ghost的目录，然后再运行\\n```\\nNODE_ENV=production pm2 start index.js --name \\\"blog\\\"\\n```\\n### 检查运行结果\\n```\\npm2 show blog  \\n```\\n\"}]],\"sections\":[[10,0]]}","page":false,"plaintext":"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\n什么是ghost？\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\n但是这并不影响我们搭建ghost服务器。吼吼吼~\n\n搭建准备\n在阿里云 [https://www.aliyun.com/]上购买了一年的ECS服务器，配置如下:\nCPU 1核；\n内存 2G；\n带宽 1Mbps；\n硬盘 40G。\n系统 CentOS 7.3 64位\n\n云服务器配置\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\n\n云服务器ECS——网络和安全——安全组——配置规则\n\n\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\n这里的设置主要是参考了阿里云的官方帮助文档 [https://help.aliyun.com/knowledge_detail/34403.html]。","published_at":"2017-09-28T13:41:32.000Z","slug":"shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost","status":"published","title":"搭建Ghost服务器","updated_at":"2017-09-29T02:04:04.000Z","updated_by":"1","tags":{"0":{"id":"59ccb425a744810195a3dc01","name":"技术","slug":"ji-zhu","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T08:34:45.000Z","updated_at":"2017-09-28T08:34:45.000Z","created_by":"1","updated_by":"1"},"1":{"id":"59cd12bfa744810195a3dc06","name":"博客","slug":"bo-ke","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T15:18:23.000Z","updated_at":"2017-09-28T15:18:23.000Z","created_by":"1","updated_by":"1"}},"author_id":"1"}}},"query":{"include":"tags"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"http://47.95.197.107","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/*","content-type":"application/json; charset=utf-8","etag":"W/\"49a5-b7WtL3itPBhK141BKPQF3/rtik8\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"59ms"},"msg":"","time":"2017-09-29T02:04:28.692Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"9a9b49b0-a4ba-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/posts/59ccf296a744810195a3dc03/?include=tags","method":"PUT","originalUrl":"/ghost/api/v0.1/posts/59ccf296a744810195a3dc03/?include=tags","params":{"id":"59ccf296a744810195a3dc03"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","content-length":"18614","origin":"http://47.95.197.107","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"1.9","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{"posts":{"0":{"id":"59ccf296a744810195a3dc03","created_at":"2017-09-28T13:01:10.000Z","created_by":"1","featured":false,"feature_image":"/content/images/2017/09/ghost.png","codeinjection_foot":"","codeinjection_head":"","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\\n什么是ghost？\\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\\n但是这并不影响我们搭建ghost服务器。吼吼吼~\\n\\n# 搭建准备\\n在[**阿里云**](https://www.aliyun.com/)上购买了一年的ECS服务器，配置如下:\\nCPU 1核；\\n内存 2G；\\n带宽 1Mbps；\\n硬盘 40G。\\n系统 CentOS 7.3 64位\\n\\n# 云服务器配置\\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\\n> 云服务器ECS——网络和安全——安全组——配置规则\\n![--------](/content/images/2017/09/--------.jpg)\\n![-------](/content/images/2017/09/-------.jpg)\\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\\n这里的设置主要是参考了[**阿里云的官方帮助文档**](https://help.aliyun.com/knowledge_detail/34403.html)。\\n# 安装ghost\\n\\n## 需要用到的东西\\n\\n* 一个完成A记录解析设置的域名（建议做好ICP备案）；（可选）\\n* 使用 [**MySQL**](https://www.mysql.com/) 做数据库服务；\\n* 使用 [**Nginx**](https://nginx.org/) 做网页服务器（Ghost的代理服务）；\\n* 使用 [**NodeJS**](https://nodejs.org/) 做后端服务；\\n* [**Ghost**](https://ghost.org/)一个开源的博客系统；\\n\\n## 基础设置\\n\\n### 查看一下系统信息：\\n\\n```\\ncat /etc/redhat-release  \\n```\\n> #>>> CentOS Linux release 7.3.1611 (Core)\\n\\n\\n### 更新一下系统，安装一些基础工具：\\n\\n阿里云的centos已经优化了yum的源，你也可以自行修改\\n```\\nyum update -y && yum upgrage -y && yum clean all\\n```\\ncurl, wget都是方便后边的下载\\nvim作为一个老牌Linux文本编辑工具，你值得拥有\\n```\\nyum install curl wget vim -y\\n```\\n\\n### 更新全系统的vim配置\\n```\\ncurl https://raw.githubusercontent.com/tonyc726/vim-for-server/master/vimrc > /etc/vimrc  \\n```\\n\\n## MySQL安装设置\\n由于CentOS7已经不带Mysql数据库了（默认的数据库是MariaDB，Mysql的一个分支），所以需要先安裝MySQL Repository（具体的版本号，可以参考 https://dev.mysql.com/downloads/repo/yum/）:\\n\\n### 安裝 MySQL Repository\\n```\\nrpm -Uvh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\\n```\\n### 安装MySQL数据库的服务器社区稳定版\\n```\\nyum install mysql-community-server -y\\n```\\n### 启动MySQL服务\\n```\\nsystemctl start mysqld.service\\n```\\n### 设置随系统自启动\\n```\\nsystemctl enable mysqld.service  \\n```\\n### 初始化设置\\n```\\nmysql_secure_installation\\n```\\n由于MySQL5.7默认会初始化Root用户的密码，所以在执行之前需要获取这个初始密码：\\n（本次设置中并没有执行如下操作，应为默认安装后第一次运行时不需密码，在初始化过程中会提示设置密码）\\n```\\ngrep \\\"password\\\" /var/log/mysqld.log  \\n```\\n\\n\\n### 创建Ghost需要的用户及数据库：\\n\\n运行以后输入刚才拿到的密码\\n```\\nmysql -uroot -p \\n```\\n添加新数据库blog，后面Ghost会用到\\n```\\nCREATE DATABASE blog;\\n```\\n添加新用户ghost（password替换为你需要的密码）\\n```\\nCREATE USER ghost IDENTIFIED BY 'password';\\n```\\n授予ghost用户在blog数据库上的所有权限\\n（password就是你刚才创建ghost账户时设置的密码）\\n```\\nGRANT ALL PRIVILEGES ON blog.* TO 'ghost'@'localhost' IDENTIFIED BY 'password';\\n```\\n刷新权限\\n（当执行过GRANT，CREATE USER，REVOKE命令之后，必须要执行刷新权限才能生效）\\n```\\nFLUSH PRIVILEGES;\\n```\\nCtrl+D 退出\\n\\n好了，以上就是MySQL部分\\n\\n## NodeJS安装设置\\n\\n推荐使用以下方式安装NodeJS\\n本系统使用V6稳定版，如需其它版本，你可以自行调整\\n```\\ncurl -sL https://rpm.nodesource.com/setup_6.x | sudo -E bash -  \\n```\\n### 安装NodeJS及其依赖包\\nyum install gcc-c++ make nodejs -y\\n\\nNodeJS安装以后，默认已经自带的NPM\\n不过npm之前一直被吐槽，建议***升级最新版或者用yarn代替***\\n### 升级npm至最新版本(^v5.0.4)\\n```\\nnpm install npm@latest -g\\n```\\n### 安装yarn代替（推荐）\\n```\\ncurl --silent --location https://rpm.nodesource.com/setup_6.x | bash -  \\nyum install yarn -y\\n```\\n\\n### 测试一下\\n```\\nnode -v\\n```\\n\\n> #>>> v6.11.0\\n```\\nnpm -v\\n```\\n> #>>> v5.1.0\\n```\\nyarn -v\\n```\\n> #>>> v0.27.5\\n\\n这里有个坑，如果直接使用yum install nodejs -y也是可以安装NodeJS的，不过nodesource维护的更加好，而且可以升级npm。\\n\\n如果你已经看到了最后输出的信息，那么久代表NodeJS已经就绪了。\\n## Nginx安装配置\\n\\n### 直接安装即可\\n```\\nyum install nginx -y\\n```\\n### 立即启动\\n```\\nsystemctl start nginx\\n```\\n### 设置开机自启动\\n```\\nsystemctl enable nginx  \\n```\\n\\n现在，打开你的浏览器，输入你的公网IP，不出意外，你就已经可以看到一个Nginx的欢迎页面了。\\n\\n不过，出于后期的扩展或者安全性考虑，我们需要为系统创建一个名为www的用户，专门用于管理网站.\\n\\n### 反向代理80端口\\n\\n众所周知，网站基本都以 80 端口作为默认端口（除非你不想让别人访问你的网站），也就是说：访问域名或服务器 IP 地址，实际上是在访问该服务器的 80 端口。而 Ghost 博客默认运行在 2368 端口上。\\n\\n为了输入域名或服务器 IP 地址就可以访问到你的 Ghost 博客，需要将访问 80 端口的请求，反向代理到 Ghost 的 2368 端口上。\\n\\n进入 Nginx 配置目录：\\n    ```\\n    cd /etc/nginx/conf.d\\n    ```\\n新建 Ghost 博客的 Nginx 配置文件：\\n```\\nvim ghost.conf\\n```\\n按 i 输入以下内容：\\n\\n> server {  \\n>     listen 80;\\n>     server_name loyalsoldier.me //这里修改为你的域名；如果没有域名，则改为服务器 IP 地址;\\n> \\n>     gzip on;\\n>     gzip_types text/plain application/xml text/css application/javascript application/json application/font-woff application/font-woff2 application/vnd.ms-fontobject application/x-font-ttf font/opentype application/pdf image/png image/bmp image/gif image/jpeg image/webp image/svg+xml;\\n>     gzip_proxied no-cache no-store private expired auth;\\n>     gzip_vary on;\\n>     gzip_min_length 1024;\\n> \\n>     location / {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>     }\\n> \\n>     location ~* .*\\\\.(jpg|jpeg|bmp|png|gif|ico|js|css|eot|woff|woff2|svg|ttf|otf)$ {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n> \\n>         add_header Cache-Control max-age=2592000;\\n>         expires    30d;\\n>         etag       on;\\n>     }\\n> }\\n\\n按 ESC 键结束编辑，输入 :wq 保存文件并退出编辑\\n使用 nginx -t 测试 Nginx 配置文件是否语法正确：\\n\\n```\\nsudo nginx -t\\n```\\n若输出的结果有 ok、successful 等字样，表示配置正确\\n\\n如果正确的话，重启Nginx服务\\n```\\nsystemctl restart nginx.service  \\n```\\n\\n\\n## 添加新用户\\n创建一个名为www的用户组\\n```\\nadduser www\\n```\\n\\n### 设置密码(请记录下你的密码，以后需要用到)\\n```\\npasswd www\\n```\\n\\n### 分配Root权限 - 让我们新创建的www用户拥有Root用户的权限\\n```\\ngpasswd -a www wheel\\n```\\n### 将nginx用户添加入www的用户组，方便后期的权限控制\\n```\\nusermod -a -G nginx,www nginx  \\n```\\n\\n## 安装ghost\\n以上就是Ghost需要用到的基础系统了，下面就来安装Ghost，新开一个Terminal窗口，用**www**账户登录：\\n```\\nssh www@xxx.xxx.xxx.xxx  \\n```\\n然后下载Ghost最新的代码。\\n\\n### 下载Ghost最新的稳定版\\n```\\ncurl -L https://ghost.org/zip/ghost-latest.zip -o ghost.zip\\n```\\n### 解压\\n```\\nunzip -uo ghost.zip -d ghost\\n```\\n### 进入Ghost的目录并安装生产环境的依赖\\n```\\ncd ghost && npm install --production\\n```\\nnpm install --production这个命令可能需要执行多次，也是由于国内网络的原因，导致下载速度很慢，每次都下载不完全，需要多次执行，直到成功安装完成。\\n### 修改Ghost的config，修改数据库配置\\n```\\nvim config.js  \\n```\\n完整的config.js配置如下：\\n\\n> var path = require('path'),  \\n>     config;\\n> \\n> config = {  \\n>     production: {\\n>         url: 'https://www.xxxx.xxx',（换成服务器ip或者申请的域名）\\n>         mail: {},\\n>         database: {\\n>             client: 'mysql',（前面安装的mysql数据库，这里一定要对应）\\n>             connection: {\\n>                 host     : '127.0.0.1',\\n>                 user     : 'ghost', //用户名\\n>                 password : 'password', //ghost的密码，之前设置的\\n>                 database : 'blog', //数据库名\\n>                 charset  : 'utf8'\\n>             },\\n>             debug: false\\n>         },\\n> \\n>         server: {\\n>             host: '127.0.0.1',\\n>             port: '2368'\\n>         }\\n>     }\\n> };\\n> \\n> module.exports = config;  \\n\\n除了ghost安装根目录下的这个配置文件，还要检查一下/ghost/core/server/config下面的相应的配置文件，将相应的项更改正确，端口由于使用反向代理，因此不要更改，主要看一下url和database下面相应的设置。\\n\\n### 安装knex-migrator\\n实际上这个时候用生产模式运行ghost会报错，提示没有安装knex-migrator。\\n安装之前需要先编辑ghost安装文件夹下的***MigrtorConfig.js***文件。\\n\\n\\n使用vim编写MigrtorConfig.js文件\\n\\n```\\nvim MigrtorConfig.js\\n```\\n\\n\\n> module.exports = {\\n>     database: {\\n>         client: 'mysql',\\n>         connection: {\\n>             host: '127.0.0.1',\\n>             user: 'ghost',（之前mysql设置时建立的用户名）\\n>             password: 'password',（改成mysql的ghost用户密码）\\n>             charset: 'utf8',\\n>             name: 'blog'（之前mysql设置时建立的数据库）\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version',\\n>  /**\\n>     subfolder: 'upgrades'  [default: versions]\\n>     （这一部分在执行时总出问题，就注释掉了）\\n>  */\\n> }\\n> （下面应该是数据库使用sqlite3时的设置，由于本方案使用的mysql，所以可以不用写进去）\\n> module.exports = {\\n>     database: {\\n>         client: 'sqlite3',\\n>         connection: {\\n>             filename: 'path/to/your.db'\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version'\\n> }\\n> \\n\\n使用下面指令安装：\\n```\\nnpm install -g knex-migrator\\n```\\n\\n由于国内网络的原因，这个命令也可能需要执行多次才能安装完，中间会提示校验错误，这个应该是下载没有完成，而网络链接断开了的原因，再执行一次就行，直到最后完成安装。\\n\\n\\n运行一下：\\n```\\nnpm start --production\\n```\\n如果看到下面的提示，证明你已经完成80%了：\\n\\n\\n> Ghost is running in production...  \\n> Your blog is now available on https://www.itony.net  \\n> Ctrl+C to shut down  \\n\\n### 问题及解决方案\\n\\n#### 权限问题\\n在执行npm start --production的时候，遇到npm权限的问题，提示没有node_modules文件夹的写权限，这个时候使用sudo命令进行安装时又提示别的错误，最终采用\\nnpmjs.com网站中的[解决方法2](https://docs.npmjs.com/getting-started/fixing-npm-permissions)。\\n首先检查npm的路径：\\n```\\nnpm config get prefix\\n```\\n发现是/usr\\n然后改变npm的默认路径：\\n1.为全局安装路径建立文件夹：（操作均在www用户下完成）\\n```\\nmkdir ~/.npm-global\\n```\\n2.设置默认路径：\\n```\\nnpm config set prefix '~/.npm-global'\\n```\\n3.加入用户PATH：\\n打开用户家目录下面的profile文件，这里是.bash_profile，加入下面的语句：\\n```\\nexport PATH=~/.npm-global/bin:$PATH\\n```\\n4.更新profile文件\\n```\\nsource ~/.bash_profile\\n```\\n**检验**：全局下载文件包，**不要用sudo**，也可以省去检测\\n``` \\nnpm install -g jshint\\n```\\n也可以使用下面更改环境变量的方式代替2-4步：（如果不想更改profile文件的话）\\n```\\nNPM_CONFIG_PREFIX=~/.npm-global\\n```\\n#### 语法错误问题\\n> Syntax error: Unexpected token\\n出现上面的语句就要检查一下相应的配置文件的语法是否有错误。\\n## 全局安装PM2\\n目前你是开着远程连接到你的服务器，一旦你把窗口关闭了，那么你刚才起的npm start --production可就悲剧了，如何避免呢，这时候我们就需要一个能帮我们在后台稳定运行node服务的工具了，目前比较火热的要数PM2了：\\n\\n``\\nyarn global add pm2 --prefix /usr/local\\n``\\n### 用PM2来启动Ghost的node服务\\n先切到ghost的目录，然后再运行\\n```\\nNODE_ENV=production pm2 start index.js --name \\\"blog\\\"\\n```\\n### 检查运行结果\\n```\\npm2 show blog  \\n```\\n\"}]],\"sections\":[[10,0]]}","page":false,"plaintext":"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\n什么是ghost？\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\n但是这并不影响我们搭建ghost服务器。吼吼吼~\n\n搭建准备\n在阿里云 [https://www.aliyun.com/]上购买了一年的ECS服务器，配置如下:\nCPU 1核；\n内存 2G；\n带宽 1Mbps；\n硬盘 40G。\n系统 CentOS 7.3 64位\n\n云服务器配置\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\n\n云服务器ECS——网络和安全——安全组——配置规则\n\n\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\n这里的设置主要是参考了阿里云的官方帮助文档 [https://help.aliyun.com/knowledge_detail/34403.html]。","published_at":"2017-09-28T13:41:32.000Z","slug":"shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost","status":"published","title":"搭建Ghost服务器","updated_at":"2017-09-29T02:04:28.000Z","updated_by":"1","tags":{"0":{"id":"59ccb425a744810195a3dc01","name":"技术","slug":"ji-zhu","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T08:34:45.000Z","updated_at":"2017-09-28T08:34:45.000Z","created_by":"1","updated_by":"1"},"1":{"id":"59cd12bfa744810195a3dc06","name":"博客","slug":"bo-ke","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T15:18:23.000Z","updated_at":"2017-09-28T15:18:23.000Z","created_by":"1","updated_by":"1"}},"author_id":"1"}}},"query":{"include":"tags"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"http://47.95.197.107","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/*","content-type":"application/json; charset=utf-8","etag":"W/\"49da-9EDcm9i8Ke5mBcNqgne3pAegC/Q\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"49ms"},"msg":"","time":"2017-09-29T02:05:02.335Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"a3702ec0-a4ba-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/posts/59ccf296a744810195a3dc03/?include=tags","method":"PUT","originalUrl":"/ghost/api/v0.1/posts/59ccf296a744810195a3dc03/?include=tags","params":{"id":"59ccf296a744810195a3dc03"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","content-length":"18614","origin":"http://47.95.197.107","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"1.9","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{"posts":{"0":{"id":"59ccf296a744810195a3dc03","created_at":"2017-09-28T13:01:10.000Z","created_by":"1","featured":false,"feature_image":"/content/images/2017/09/ghost.png","codeinjection_foot":"","codeinjection_head":"","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\\n什么是ghost？\\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\\n但是这并不影响我们搭建ghost服务器。吼吼吼~\\n\\n# 搭建准备\\n在[**阿里云**](https://www.aliyun.com/)上购买了一年的ECS服务器，配置如下:\\nCPU 1核；\\n内存 2G；\\n带宽 1Mbps；\\n硬盘 40G。\\n系统 CentOS 7.3 64位\\n\\n# 云服务器配置\\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\\n> 云服务器ECS——网络和安全——安全组——配置规则\\n![--------](/content/images/2017/09/--------.jpg)\\n![-------](/content/images/2017/09/-------.jpg)\\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\\n这里的设置主要是参考了[**阿里云的官方帮助文档**](https://help.aliyun.com/knowledge_detail/34403.html)。\\n# 安装ghost\\n\\n## 需要用到的东西\\n\\n* 一个完成A记录解析设置的域名（建议做好ICP备案）；（可选）\\n* 使用 [**MySQL**](https://www.mysql.com/) 做数据库服务；\\n* 使用 [**Nginx**](https://nginx.org/) 做网页服务器（Ghost的代理服务）；\\n* 使用 [**NodeJS**](https://nodejs.org/) 做后端服务；\\n* [**Ghost**](https://ghost.org/)一个开源的博客系统；\\n\\n## 基础设置\\n\\n### 查看一下系统信息：\\n\\n```\\ncat /etc/redhat-release  \\n```\\n> #>>> CentOS Linux release 7.3.1611 (Core)\\n\\n\\n### 更新一下系统，安装一些基础工具：\\n\\n阿里云的centos已经优化了yum的源，你也可以自行修改\\n```\\nyum update -y && yum upgrage -y && yum clean all\\n```\\ncurl, wget都是方便后边的下载\\nvim作为一个老牌Linux文本编辑工具，你值得拥有\\n```\\nyum install curl wget vim -y\\n```\\n\\n### 更新全系统的vim配置\\n```\\ncurl https://raw.githubusercontent.com/tonyc726/vim-for-server/master/vimrc > /etc/vimrc  \\n```\\n\\n## MySQL安装设置\\n由于CentOS7已经不带Mysql数据库了（默认的数据库是MariaDB，Mysql的一个分支），所以需要先安裝MySQL Repository（具体的版本号，可以参考 https://dev.mysql.com/downloads/repo/yum/）:\\n\\n### 安裝 MySQL Repository\\n```\\nrpm -Uvh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\\n```\\n### 安装MySQL数据库的服务器社区稳定版\\n```\\nyum install mysql-community-server -y\\n```\\n### 启动MySQL服务\\n```\\nsystemctl start mysqld.service\\n```\\n### 设置随系统自启动\\n```\\nsystemctl enable mysqld.service  \\n```\\n### 初始化设置\\n```\\nmysql_secure_installation\\n```\\n由于MySQL5.7默认会初始化Root用户的密码，所以在执行之前需要获取这个初始密码：\\n（本次设置中并没有执行如下操作，应为默认安装后第一次运行时不需密码，在初始化过程中会提示设置密码）\\n```\\ngrep \\\"password\\\" /var/log/mysqld.log  \\n```\\n\\n\\n### 创建Ghost需要的用户及数据库：\\n\\n运行以后输入刚才拿到的密码\\n```\\nmysql -uroot -p \\n```\\n添加新数据库blog，后面Ghost会用到\\n```\\nCREATE DATABASE blog;\\n```\\n添加新用户ghost（password替换为你需要的密码）\\n```\\nCREATE USER ghost IDENTIFIED BY 'password';\\n```\\n授予ghost用户在blog数据库上的所有权限\\n（password就是你刚才创建ghost账户时设置的密码）\\n```\\nGRANT ALL PRIVILEGES ON blog.* TO 'ghost'@'localhost' IDENTIFIED BY 'password';\\n```\\n刷新权限\\n（当执行过GRANT，CREATE USER，REVOKE命令之后，必须要执行刷新权限才能生效）\\n```\\nFLUSH PRIVILEGES;\\n```\\nCtrl+D 退出\\n\\n好了，以上就是MySQL部分\\n\\n## NodeJS安装设置\\n\\n推荐使用以下方式安装NodeJS\\n本系统使用V6稳定版，如需其它版本，你可以自行调整\\n```\\ncurl -sL https://rpm.nodesource.com/setup_6.x | sudo -E bash -  \\n```\\n### 安装NodeJS及其依赖包\\nyum install gcc-c++ make nodejs -y\\n\\nNodeJS安装以后，默认已经自带的NPM\\n不过npm之前一直被吐槽，建议***升级最新版或者用yarn代替***\\n### 升级npm至最新版本(^v5.0.4)\\n```\\nnpm install npm@latest -g\\n```\\n### 安装yarn代替（推荐）\\n```\\ncurl --silent --location https://rpm.nodesource.com/setup_6.x | bash -  \\nyum install yarn -y\\n```\\n\\n### 测试一下\\n```\\nnode -v\\n```\\n\\n> #>>> v6.11.0\\n```\\nnpm -v\\n```\\n> #>>> v5.1.0\\n```\\nyarn -v\\n```\\n> #>>> v0.27.5\\n\\n这里有个坑，如果直接使用yum install nodejs -y也是可以安装NodeJS的，不过nodesource维护的更加好，而且可以升级npm。\\n\\n如果你已经看到了最后输出的信息，那么久代表NodeJS已经就绪了。\\n## Nginx安装配置\\n\\n### 直接安装即可\\n```\\nyum install nginx -y\\n```\\n### 立即启动\\n```\\nsystemctl start nginx\\n```\\n### 设置开机自启动\\n```\\nsystemctl enable nginx  \\n```\\n\\n现在，打开你的浏览器，输入你的公网IP，不出意外，你就已经可以看到一个Nginx的欢迎页面了。\\n\\n不过，出于后期的扩展或者安全性考虑，我们需要为系统创建一个名为www的用户，专门用于管理网站.\\n\\n### 反向代理80端口\\n\\n众所周知，网站基本都以 80 端口作为默认端口（除非你不想让别人访问你的网站），也就是说：访问域名或服务器 IP 地址，实际上是在访问该服务器的 80 端口。而 Ghost 博客默认运行在 2368 端口上。\\n\\n为了输入域名或服务器 IP 地址就可以访问到你的 Ghost 博客，需要将访问 80 端口的请求，反向代理到 Ghost 的 2368 端口上。\\n\\n进入 Nginx 配置目录：\\n    ```\\n    cd /etc/nginx/conf.d\\n    ```\\n新建 Ghost 博客的 Nginx 配置文件：\\n```\\nvim ghost.conf\\n```\\n按 i 输入以下内容：\\n\\n> server {  \\n>     listen 80;\\n>     server_name loyalsoldier.me //这里修改为你的域名；如果没有域名，则改为服务器 IP 地址;\\n> \\n>     gzip on;\\n>     gzip_types text/plain application/xml text/css application/javascript application/json application/font-woff application/font-woff2 application/vnd.ms-fontobject application/x-font-ttf font/opentype application/pdf image/png image/bmp image/gif image/jpeg image/webp image/svg+xml;\\n>     gzip_proxied no-cache no-store private expired auth;\\n>     gzip_vary on;\\n>     gzip_min_length 1024;\\n> \\n>     location / {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>     }\\n> \\n>     location ~* .*\\\\.(jpg|jpeg|bmp|png|gif|ico|js|css|eot|woff|woff2|svg|ttf|otf)$ {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n> \\n>         add_header Cache-Control max-age=2592000;\\n>         expires    30d;\\n>         etag       on;\\n>     }\\n> }\\n\\n按 ESC 键结束编辑，输入 :wq 保存文件并退出编辑\\n使用 nginx -t 测试 Nginx 配置文件是否语法正确：\\n\\n```\\nsudo nginx -t\\n```\\n若输出的结果有 ok、successful 等字样，表示配置正确\\n\\n如果正确的话，重启Nginx服务\\n```\\nsystemctl restart nginx.service  \\n```\\n\\n\\n## 添加新用户\\n创建一个名为www的用户组\\n```\\nadduser www\\n```\\n\\n### 设置密码(请记录下你的密码，以后需要用到)\\n```\\npasswd www\\n```\\n\\n### 分配Root权限 - 让我们新创建的www用户拥有Root用户的权限\\n```\\ngpasswd -a www wheel\\n```\\n### 将nginx用户添加入www的用户组，方便后期的权限控制\\n```\\nusermod -a -G nginx,www nginx  \\n```\\n\\n## 安装ghost\\n以上就是Ghost需要用到的基础系统了，下面就来安装Ghost，新开一个Terminal窗口，用**www**账户登录：\\n```\\nssh www@xxx.xxx.xxx.xxx  \\n```\\n然后下载Ghost最新的代码。\\n\\n### 下载Ghost最新的稳定版\\n```\\ncurl -L https://ghost.org/zip/ghost-latest.zip -o ghost.zip\\n```\\n### 解压\\n```\\nunzip -uo ghost.zip -d ghost\\n```\\n### 进入Ghost的目录并安装生产环境的依赖\\n```\\ncd ghost && npm install --production\\n```\\nnpm install --production这个命令可能需要执行多次，也是由于国内网络的原因，导致下载速度很慢，每次都下载不完全，需要多次执行，直到成功安装完成。\\n### 修改Ghost的config，修改数据库配置\\n```\\nvim config.js  \\n```\\n完整的config.js配置如下：\\n\\n> var path = require('path'),  \\n>     config;\\n> \\n> config = {  \\n>     production: {\\n>         url: 'https://www.xxxx.xxx',（换成服务器ip或者申请的域名）\\n>         mail: {},\\n>         database: {\\n>             client: 'mysql',（前面安装的mysql数据库，这里一定要对应）\\n>             connection: {\\n>                 host     : '127.0.0.1',\\n>                 user     : 'ghost', //用户名\\n>                 password : 'password', //ghost的密码，之前设置的\\n>                 database : 'blog', //数据库名\\n>                 charset  : 'utf8'\\n>             },\\n>             debug: false\\n>         },\\n> \\n>         server: {\\n>             host: '127.0.0.1',\\n>             port: '2368'\\n>         }\\n>     }\\n> };\\n> \\n> module.exports = config;  \\n\\n除了ghost安装根目录下的这个配置文件，还要检查一下/ghost/core/server/config下面的相应的配置文件，将相应的项更改正确，端口由于使用反向代理，因此不要更改，主要看一下url和database下面相应的设置。\\n\\n### 安装knex-migrator\\n实际上这个时候用生产模式运行ghost会报错，提示没有安装knex-migrator。\\n安装之前需要先编辑ghost安装文件夹下的***MigrtorConfig.js***文件。\\n\\n\\n使用vim编写MigrtorConfig.js文件\\n\\n```\\nvim MigrtorConfig.js\\n```\\n\\n\\n> module.exports = {\\n>     database: {\\n>         client: 'mysql',\\n>         connection: {\\n>             host: '127.0.0.1',\\n>             user: 'ghost',（之前mysql设置时建立的用户名）\\n>             password: 'password',（改成mysql的ghost用户密码）\\n>             charset: 'utf8',\\n>             name: 'blog'（之前mysql设置时建立的数据库）\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version',\\n>  /**\\n>     subfolder: 'upgrades'  [default: versions]\\n>     （这一部分在执行时总出问题，就注释掉了）\\n>  */\\n> }\\n> （下面应该是数据库使用sqlite3时的设置，由于本方案使用的mysql，所以可以不用写进去）\\n> module.exports = {\\n>     database: {\\n>         client: 'sqlite3',\\n>         connection: {\\n>             filename: 'path/to/your.db'\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version'\\n> }\\n> \\n\\n使用下面指令安装：\\n```\\nnpm install -g knex-migrator\\n```\\n\\n由于国内网络的原因，这个命令也可能需要执行多次才能安装完，中间会提示校验错误，这个应该是下载没有完成，而网络链接断开了的原因，再执行一次就行，直到最后完成安装。\\n\\n\\n运行一下：\\n```\\nnpm start --production\\n```\\n如果看到下面的提示，证明你已经完成80%了：\\n\\n\\n> Ghost is running in production...  \\n> Your blog is now available on https://www.itony.net  \\n> Ctrl+C to shut down  \\n\\n### 问题及解决方案\\n\\n#### 权限问题\\n在执行npm start --production的时候，遇到npm权限的问题，提示没有node_modules文件夹的写权限，这个时候使用sudo命令进行安装时又提示别的错误，最终采用\\nnpmjs.com网站中的[解决方法2](https://docs.npmjs.com/getting-started/fixing-npm-permissions)。\\n首先检查npm的路径：\\n```\\nnpm config get prefix\\n```\\n发现是/usr\\n然后改变npm的默认路径：\\n1.为全局安装路径建立文件夹：（操作均在www用户下完成）\\n```\\nmkdir ~/.npm-global\\n```\\n2.设置默认路径：\\n```\\nnpm config set prefix '~/.npm-global'\\n```\\n3.加入用户PATH：\\n打开用户家目录下面的profile文件，这里是.bash_profile，加入下面的语句：\\n```\\nexport PATH=~/.npm-global/bin:$PATH\\n```\\n4.更新profile文件\\n```\\nsource ~/.bash_profile\\n```\\n**检验**：全局下载文件包，**不要用sudo**，也可以省去检测\\n``` \\nnpm install -g jshint\\n```\\n也可以使用下面更改环境变量的方式代替2-4步：（如果不想更改profile文件的话）\\n```\\nNPM_CONFIG_PREFIX=~/.npm-global\\n```\\n#### 语法错误问题\\n> Syntax error: Unexpected token\\n出现上面的语句就要检查一下相应的配置文件的语法是否有错误。\\n## 全局安装PM2\\n目前你是开着远程连接到你的服务器，一旦你把窗口关闭了，那么你刚才起的npm start --production可就悲剧了，如何避免呢，这时候我们就需要一个能帮我们在后台稳定运行node服务的工具了，目前比较火热的要数PM2了：\\n\\n``\\nyarn global add pm2 --prefix /usr/local\\n``\\n### 用PM2来启动Ghost的node服务\\n先切到ghost的目录，然后再运行\\n```\\nNODE_ENV=production pm2 start index.js --name \\\"blog\\\"\\n```\\n### 检查运行结果\\n```\\npm2 show blog  \\n```\\n\"}]],\"sections\":[[10,0]]}","page":false,"plaintext":"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\n什么是ghost？\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\n但是这并不影响我们搭建ghost服务器。吼吼吼~\n\n搭建准备\n在阿里云 [https://www.aliyun.com/]上购买了一年的ECS服务器，配置如下:\nCPU 1核；\n内存 2G；\n带宽 1Mbps；\n硬盘 40G。\n系统 CentOS 7.3 64位\n\n云服务器配置\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\n\n云服务器ECS——网络和安全——安全组——配置规则\n\n\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\n这里的设置主要是参考了阿里云的官方帮助文档 [https://help.aliyun.com/knowledge_detail/34403.html]。","published_at":"2017-09-28T13:41:32.000Z","slug":"shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost","status":"published","title":"搭建Ghost服务器","updated_at":"2017-09-29T02:05:02.000Z","updated_by":"1","tags":{"0":{"id":"59ccb425a744810195a3dc01","name":"技术","slug":"ji-zhu","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T08:34:45.000Z","updated_at":"2017-09-28T08:34:45.000Z","created_by":"1","updated_by":"1"},"1":{"id":"59cd12bfa744810195a3dc06","name":"博客","slug":"bo-ke","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T15:18:23.000Z","updated_at":"2017-09-28T15:18:23.000Z","created_by":"1","updated_by":"1"}},"author_id":"1"}}},"query":{"include":"tags"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"http://47.95.197.107","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/*","content-type":"application/json; charset=utf-8","etag":"W/\"49da-JFUAMwU78Wd0KIHnQtuFmtU18Aw\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"45ms"},"msg":"","time":"2017-09-29T02:05:17.148Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"a4e9af60-a4ba-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/posts/59ccf296a744810195a3dc03/?include=tags","method":"PUT","originalUrl":"/ghost/api/v0.1/posts/59ccf296a744810195a3dc03/?include=tags","params":{"id":"59ccf296a744810195a3dc03"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","content-length":"18614","origin":"http://47.95.197.107","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"1.9","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{"posts":{"0":{"id":"59ccf296a744810195a3dc03","created_at":"2017-09-28T13:01:10.000Z","created_by":"1","featured":false,"feature_image":"/content/images/2017/09/ghost.png","codeinjection_foot":"","codeinjection_head":"","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\\n什么是ghost？\\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\\n但是这并不影响我们搭建ghost服务器。吼吼吼~\\n\\n# 搭建准备\\n在[**阿里云**](https://www.aliyun.com/)上购买了一年的ECS服务器，配置如下:\\nCPU 1核；\\n内存 2G；\\n带宽 1Mbps；\\n硬盘 40G。\\n系统 CentOS 7.3 64位\\n\\n# 云服务器配置\\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\\n> 云服务器ECS——网络和安全——安全组——配置规则\\n![--------](/content/images/2017/09/--------.jpg)\\n![-------](/content/images/2017/09/-------.jpg)\\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\\n这里的设置主要是参考了[**阿里云的官方帮助文档**](https://help.aliyun.com/knowledge_detail/34403.html)。\\n# 安装ghost\\n\\n## 需要用到的东西\\n\\n* 一个完成A记录解析设置的域名（建议做好ICP备案）；（可选）\\n* 使用 [**MySQL**](https://www.mysql.com/) 做数据库服务；\\n* 使用 [**Nginx**](https://nginx.org/) 做网页服务器（Ghost的代理服务）；\\n* 使用 [**NodeJS**](https://nodejs.org/) 做后端服务；\\n* [**Ghost**](https://ghost.org/)一个开源的博客系统；\\n\\n## 基础设置\\n\\n### 查看一下系统信息：\\n\\n```\\ncat /etc/redhat-release  \\n```\\n> #>>> CentOS Linux release 7.3.1611 (Core)\\n\\n\\n### 更新一下系统，安装一些基础工具：\\n\\n阿里云的centos已经优化了yum的源，你也可以自行修改\\n```\\nyum update -y && yum upgrage -y && yum clean all\\n```\\ncurl, wget都是方便后边的下载\\nvim作为一个老牌Linux文本编辑工具，你值得拥有\\n```\\nyum install curl wget vim -y\\n```\\n\\n### 更新全系统的vim配置\\n```\\ncurl https://raw.githubusercontent.com/tonyc726/vim-for-server/master/vimrc > /etc/vimrc  \\n```\\n\\n## MySQL安装设置\\n由于CentOS7已经不带Mysql数据库了（默认的数据库是MariaDB，Mysql的一个分支），所以需要先安裝MySQL Repository（具体的版本号，可以参考 https://dev.mysql.com/downloads/repo/yum/）:\\n\\n### 安裝 MySQL Repository\\n```\\nrpm -Uvh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\\n```\\n### 安装MySQL数据库的服务器社区稳定版\\n```\\nyum install mysql-community-server -y\\n```\\n### 启动MySQL服务\\n```\\nsystemctl start mysqld.service\\n```\\n### 设置随系统自启动\\n```\\nsystemctl enable mysqld.service  \\n```\\n### 初始化设置\\n```\\nmysql_secure_installation\\n```\\n由于MySQL5.7默认会初始化Root用户的密码，所以在执行之前需要获取这个初始密码：\\n（本次设置中并没有执行如下操作，应为默认安装后第一次运行时不需密码，在初始化过程中会提示设置密码）\\n```\\ngrep \\\"password\\\" /var/log/mysqld.log  \\n```\\n\\n\\n### 创建Ghost需要的用户及数据库：\\n\\n运行以后输入刚才拿到的密码\\n```\\nmysql -uroot -p \\n```\\n添加新数据库blog，后面Ghost会用到\\n```\\nCREATE DATABASE blog;\\n```\\n添加新用户ghost（password替换为你需要的密码）\\n```\\nCREATE USER ghost IDENTIFIED BY 'password';\\n```\\n授予ghost用户在blog数据库上的所有权限\\n（password就是你刚才创建ghost账户时设置的密码）\\n```\\nGRANT ALL PRIVILEGES ON blog.* TO 'ghost'@'localhost' IDENTIFIED BY 'password';\\n```\\n刷新权限\\n（当执行过GRANT，CREATE USER，REVOKE命令之后，必须要执行刷新权限才能生效）\\n```\\nFLUSH PRIVILEGES;\\n```\\nCtrl+D 退出\\n\\n好了，以上就是MySQL部分\\n\\n## NodeJS安装设置\\n\\n推荐使用以下方式安装NodeJS\\n本系统使用V6稳定版，如需其它版本，你可以自行调整\\n```\\ncurl -sL https://rpm.nodesource.com/setup_6.x | sudo -E bash -  \\n```\\n### 安装NodeJS及其依赖包\\nyum install gcc-c++ make nodejs -y\\n\\nNodeJS安装以后，默认已经自带的NPM\\n不过npm之前一直被吐槽，建议***升级最新版或者用yarn代替***\\n### 升级npm至最新版本(^v5.0.4)\\n```\\nnpm install npm@latest -g\\n```\\n### 安装yarn代替（推荐）\\n```\\ncurl --silent --location https://rpm.nodesource.com/setup_6.x | bash -  \\nyum install yarn -y\\n```\\n\\n### 测试一下\\n```\\nnode -v\\n```\\n\\n> #>>> v6.11.0\\n```\\nnpm -v\\n```\\n> #>>> v5.1.0\\n```\\nyarn -v\\n```\\n> #>>> v0.27.5\\n\\n这里有个坑，如果直接使用yum install nodejs -y也是可以安装NodeJS的，不过nodesource维护的更加好，而且可以升级npm。\\n\\n如果你已经看到了最后输出的信息，那么久代表NodeJS已经就绪了。\\n## Nginx安装配置\\n\\n### 直接安装即可\\n```\\nyum install nginx -y\\n```\\n### 立即启动\\n```\\nsystemctl start nginx\\n```\\n### 设置开机自启动\\n```\\nsystemctl enable nginx  \\n```\\n\\n现在，打开你的浏览器，输入你的公网IP，不出意外，你就已经可以看到一个Nginx的欢迎页面了。\\n\\n不过，出于后期的扩展或者安全性考虑，我们需要为系统创建一个名为www的用户，专门用于管理网站.\\n\\n### 反向代理80端口\\n\\n众所周知，网站基本都以 80 端口作为默认端口（除非你不想让别人访问你的网站），也就是说：访问域名或服务器 IP 地址，实际上是在访问该服务器的 80 端口。而 Ghost 博客默认运行在 2368 端口上。\\n\\n为了输入域名或服务器 IP 地址就可以访问到你的 Ghost 博客，需要将访问 80 端口的请求，反向代理到 Ghost 的 2368 端口上。\\n\\n进入 Nginx 配置目录：\\n    ```\\n    cd /etc/nginx/conf.d\\n    ```\\n新建 Ghost 博客的 Nginx 配置文件：\\n```\\nvim ghost.conf\\n```\\n按 i 输入以下内容：\\n\\n> server {  \\n>     listen 80;\\n>     server_name loyalsoldier.me //这里修改为你的域名；如果没有域名，则改为服务器 IP 地址;\\n> \\n>     gzip on;\\n>     gzip_types text/plain application/xml text/css application/javascript application/json application/font-woff application/font-woff2 application/vnd.ms-fontobject application/x-font-ttf font/opentype application/pdf image/png image/bmp image/gif image/jpeg image/webp image/svg+xml;\\n>     gzip_proxied no-cache no-store private expired auth;\\n>     gzip_vary on;\\n>     gzip_min_length 1024;\\n> \\n>     location / {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>     }\\n> \\n>     location ~* .*\\\\.(jpg|jpeg|bmp|png|gif|ico|js|css|eot|woff|woff2|svg|ttf|otf)$ {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n> \\n>         add_header Cache-Control max-age=2592000;\\n>         expires    30d;\\n>         etag       on;\\n>     }\\n> }\\n\\n按 ESC 键结束编辑，输入 :wq 保存文件并退出编辑\\n使用 nginx -t 测试 Nginx 配置文件是否语法正确：\\n\\n```\\nsudo nginx -t\\n```\\n若输出的结果有 ok、successful 等字样，表示配置正确\\n\\n如果正确的话，重启Nginx服务\\n```\\nsystemctl restart nginx.service  \\n```\\n\\n\\n## 添加新用户\\n创建一个名为www的用户组\\n```\\nadduser www\\n```\\n\\n### 设置密码(请记录下你的密码，以后需要用到)\\n```\\npasswd www\\n```\\n\\n### 分配Root权限 - 让我们新创建的www用户拥有Root用户的权限\\n```\\ngpasswd -a www wheel\\n```\\n### 将nginx用户添加入www的用户组，方便后期的权限控制\\n```\\nusermod -a -G nginx,www nginx  \\n```\\n\\n## 安装ghost\\n以上就是Ghost需要用到的基础系统了，下面就来安装Ghost，新开一个Terminal窗口，用**www**账户登录：\\n```\\nssh www@xxx.xxx.xxx.xxx  \\n```\\n然后下载Ghost最新的代码。\\n\\n### 下载Ghost最新的稳定版\\n```\\ncurl -L https://ghost.org/zip/ghost-latest.zip -o ghost.zip\\n```\\n### 解压\\n```\\nunzip -uo ghost.zip -d ghost\\n```\\n### 进入Ghost的目录并安装生产环境的依赖\\n```\\ncd ghost && npm install --production\\n```\\nnpm install --production这个命令可能需要执行多次，也是由于国内网络的原因，导致下载速度很慢，每次都下载不完全，需要多次执行，直到成功安装完成。\\n### 修改Ghost的config，修改数据库配置\\n```\\nvim config.js  \\n```\\n完整的config.js配置如下：\\n\\n> var path = require('path'),  \\n>     config;\\n> \\n> config = {  \\n>     production: {\\n>         url: 'https://www.xxxx.xxx',（换成服务器ip或者申请的域名）\\n>         mail: {},\\n>         database: {\\n>             client: 'mysql',（前面安装的mysql数据库，这里一定要对应）\\n>             connection: {\\n>                 host     : '127.0.0.1',\\n>                 user     : 'ghost', //用户名\\n>                 password : 'password', //ghost的密码，之前设置的\\n>                 database : 'blog', //数据库名\\n>                 charset  : 'utf8'\\n>             },\\n>             debug: false\\n>         },\\n> \\n>         server: {\\n>             host: '127.0.0.1',\\n>             port: '2368'\\n>         }\\n>     }\\n> };\\n> \\n> module.exports = config;  \\n\\n除了ghost安装根目录下的这个配置文件，还要检查一下/ghost/core/server/config下面的相应的配置文件，将相应的项更改正确，端口由于使用反向代理，因此不要更改，主要看一下url和database下面相应的设置。\\n\\n### 安装knex-migrator\\n实际上这个时候用生产模式运行ghost会报错，提示没有安装knex-migrator。\\n安装之前需要先编辑ghost安装文件夹下的***MigrtorConfig.js***文件。\\n\\n\\n使用vim编写MigrtorConfig.js文件\\n\\n```\\nvim MigrtorConfig.js\\n```\\n\\n\\n> module.exports = {\\n>     database: {\\n>         client: 'mysql',\\n>         connection: {\\n>             host: '127.0.0.1',\\n>             user: 'ghost',（之前mysql设置时建立的用户名）\\n>             password: 'password',（改成mysql的ghost用户密码）\\n>             charset: 'utf8',\\n>             name: 'blog'（之前mysql设置时建立的数据库）\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version',\\n>  /**\\n>     subfolder: 'upgrades'  [default: versions]\\n>     （这一部分在执行时总出问题，就注释掉了）\\n>  */\\n> }\\n> （下面应该是数据库使用sqlite3时的设置，由于本方案使用的mysql，所以可以不用写进去）\\n> module.exports = {\\n>     database: {\\n>         client: 'sqlite3',\\n>         connection: {\\n>             filename: 'path/to/your.db'\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version'\\n> }\\n> \\n\\n使用下面指令安装：\\n```\\nnpm install -g knex-migrator\\n```\\n\\n由于国内网络的原因，这个命令也可能需要执行多次才能安装完，中间会提示校验错误，这个应该是下载没有完成，而网络链接断开了的原因，再执行一次就行，直到最后完成安装。\\n\\n\\n运行一下：\\n```\\nnpm start --production\\n```\\n如果看到下面的提示，证明你已经完成80%了：\\n\\n\\n> Ghost is running in production...  \\n> Your blog is now available on https://www.itony.net  \\n> Ctrl+C to shut down  \\n\\n### 问题及解决方案\\n\\n#### 权限问题\\n在执行npm start --production的时候，遇到npm权限的问题，提示没有node_modules文件夹的写权限，这个时候使用sudo命令进行安装时又提示别的错误，最终采用\\nnpmjs.com网站中的[解决方法2](https://docs.npmjs.com/getting-started/fixing-npm-permissions)。\\n首先检查npm的路径：\\n```\\nnpm config get prefix\\n```\\n发现是/usr\\n然后改变npm的默认路径：\\n1.为全局安装路径建立文件夹：（操作均在www用户下完成）\\n```\\nmkdir ~/.npm-global\\n```\\n2.设置默认路径：\\n```\\nnpm config set prefix '~/.npm-global'\\n```\\n3.加入用户PATH：\\n打开用户家目录下面的profile文件，这里是.bash_profile，加入下面的语句：\\n```\\nexport PATH=~/.npm-global/bin:$PATH\\n```\\n4.更新profile文件\\n```\\nsource ~/.bash_profile\\n```\\n**检验**：全局下载文件包，**不要用sudo**，也可以省去检测\\n``` \\nnpm install -g jshint\\n```\\n也可以使用下面更改环境变量的方式代替2-4步：（如果不想更改profile文件的话）\\n```\\nNPM_CONFIG_PREFIX=~/.npm-global\\n```\\n#### 语法错误问题\\n> Syntax error: Unexpected token\\n出现上面的语句就要检查一下相应的配置文件的语法是否有错误。\\n## 全局安装PM2\\n目前你是开着远程连接到你的服务器，一旦你把窗口关闭了，那么你刚才起的npm start --production可就悲剧了，如何避免呢，这时候我们就需要一个能帮我们在后台稳定运行node服务的工具了，目前比较火热的要数PM2了：\\n\\n``\\nyarn global add pm2 --prefix /usr/local\\n``\\n### 用PM2来启动Ghost的node服务\\n先切到ghost的目录，然后再运行\\n```\\nNODE_ENV=production pm2 start index.js --name \\\"blog\\\"\\n```\\n### 检查运行结果\\n```\\npm2 show blog  \\n```\\n\"}]],\"sections\":[[10,0]]}","page":false,"plaintext":"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\n什么是ghost？\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\n但是这并不影响我们搭建ghost服务器。吼吼吼~\n\n搭建准备\n在阿里云 [https://www.aliyun.com/]上购买了一年的ECS服务器，配置如下:\nCPU 1核；\n内存 2G；\n带宽 1Mbps；\n硬盘 40G。\n系统 CentOS 7.3 64位\n\n云服务器配置\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\n\n云服务器ECS——网络和安全——安全组——配置规则\n\n\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\n这里的设置主要是参考了阿里云的官方帮助文档 [https://help.aliyun.com/knowledge_detail/34403.html]。","published_at":"2017-09-28T13:41:32.000Z","slug":"shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost","status":"published","title":"搭建Ghost服务器","updated_at":"2017-09-29T02:05:17.000Z","updated_by":"1","tags":{"0":{"id":"59ccb425a744810195a3dc01","name":"技术","slug":"ji-zhu","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T08:34:45.000Z","updated_at":"2017-09-28T08:34:45.000Z","created_by":"1","updated_by":"1"},"1":{"id":"59cd12bfa744810195a3dc06","name":"博客","slug":"bo-ke","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T15:18:23.000Z","updated_at":"2017-09-28T15:18:23.000Z","created_by":"1","updated_by":"1"}},"author_id":"1"}}},"query":{"include":"tags"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"http://47.95.197.107","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/*","content-type":"application/json; charset=utf-8","etag":"W/\"49da-2OUrijqyEbr0ONcy/R+c8qBbVm0\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"49ms"},"msg":"","time":"2017-09-29T02:05:19.626Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"ae980480-a4ba-11e7-ad29-7b3837c864ae","userId":null},"url":"/","method":"GET","originalUrl":"/","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"text/html, application/xhtml+xml, image/jxr, */*","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-none-match":"W/\"160e-aecQubg4g7upMtGGxomWW3DV/LA\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"20b1-qt7RHaZA7PxPQZjB5hbMY4mYxZU\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"25ms"},"msg":"","time":"2017-09-29T02:05:35.841Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"aea1c880-a4ba-11e7-ad29-7b3837c864ae","userId":null},"url":"/2017/09/ghost.png","method":"GET","originalUrl":"/content/images/2017/09/ghost.png","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"image/png, image/svg+xml, image/jxr, image/*;q=0.8, */*;q=0.5","referer":"http://47.95.197.107/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 15:17:51 GMT","etag":"W/\"37a86-15ec910bf89\"","content-type":"image/png","content-length":227974},"statusCode":200,"responseTime":"5ms"},"msg":"","time":"2017-09-29T02:05:35.887Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"aea30100-a4ba-11e7-ad29-7b3837c864ae","userId":null},"url":"/2017/09/---.jpg","method":"GET","originalUrl":"/content/images/2017/09/---.jpg","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"image/png, image/svg+xml, image/jxr, image/*;q=0.8, */*;q=0.5","referer":"http://47.95.197.107/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 08:33:32 GMT","etag":"W/\"545b-15ec79e95e4\"","content-type":"image/jpeg","content-length":21595},"statusCode":200,"responseTime":"2ms"},"msg":"","time":"2017-09-29T02:05:35.891Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"b2000eb0-a4ba-11e7-ad29-7b3837c864ae","userId":null},"url":"/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","method":"GET","originalUrl":"/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","params":{"0":"/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"text/html, application/xhtml+xml, image/jxr, */*","referer":"http://47.95.197.107/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"8894-5uxeWVoBoNl8uUW4mBHWcJye5RA\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"87ms"},"msg":"","time":"2017-09-29T02:05:41.620Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"b20f50f0-a4ba-11e7-ad29-7b3837c864ae","userId":null},"url":"/2017/09/-------.jpg","method":"GET","originalUrl":"/content/images/2017/09/-------.jpg","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"image/png, image/svg+xml, image/jxr, image/*;q=0.8, */*;q=0.5","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 13:34:45 GMT","etag":"W/\"d3bc-15ec8b2597a\"","content-type":"image/jpeg","content-length":54204},"statusCode":200,"responseTime":"2ms"},"msg":"","time":"2017-09-29T02:05:41.634Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"b20f7800-a4ba-11e7-ad29-7b3837c864ae","userId":null},"url":"/2017/09/--------.jpg","method":"GET","originalUrl":"/content/images/2017/09/--------.jpg","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"image/png, image/svg+xml, image/jxr, image/*;q=0.8, */*;q=0.5","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 13:33:23 GMT","etag":"W/\"e957-15ec8b11b2b\"","content-type":"image/jpeg","content-length":59735},"statusCode":200,"responseTime":"3ms"},"msg":"","time":"2017-09-29T02:05:41.635Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"d0907590-a4ba-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/posts/59ccf296a744810195a3dc03/?include=tags","method":"PUT","originalUrl":"/ghost/api/v0.1/posts/59ccf296a744810195a3dc03/?include=tags","params":{"id":"59ccf296a744810195a3dc03"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","content-length":"18599","origin":"http://47.95.197.107","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"1.9","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{"posts":{"0":{"id":"59ccf296a744810195a3dc03","created_at":"2017-09-28T13:01:10.000Z","created_by":"1","featured":false,"feature_image":"/content/images/2017/09/ghost.png","codeinjection_foot":"","codeinjection_head":"","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\\n什么是ghost？\\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\\n但是这并不影响我们搭建ghost服务器。吼吼吼~\\n\\n# 搭建准备\\n在[**阿里云**](https://www.aliyun.com/)上购买了一年的ECS服务器，配置如下:\\nCPU 1核；\\n内存 2G；\\n带宽 1Mbps；\\n硬盘 40G。\\n系统 CentOS 7.3 64位\\n\\n# 云服务器配置\\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\\n> 云服务器ECS——网络和安全——安全组——配置规则\\n![--------](/content/images/2017/09/--------.jpg)\\n![-------](/content/images/2017/09/-------.jpg)\\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\\n这里的设置主要是参考了[**阿里云的官方帮助文档**](https://help.aliyun.com/knowledge_detail/34403.html)。\\n# 安装ghost\\n\\n## 需要用到的东西\\n\\n* 一个完成A记录解析设置的域名（建议做好ICP备案）；（可选）\\n* 使用 [**MySQL**](https://www.mysql.com/) 做数据库服务；\\n* 使用 [**Nginx**](https://nginx.org/) 做网页服务器（Ghost的代理服务）；\\n* 使用 [**NodeJS**](https://nodejs.org/) 做后端服务；\\n* [**Ghost**](https://ghost.org/)一个开源的博客系统；\\n\\n## 基础设置\\n\\n### 查看一下系统信息：\\n\\n```\\ncat /etc/redhat-release  \\n```\\n> #>>> CentOS Linux release 7.3.1611 (Core)\\n\\n\\n### 更新一下系统，安装一些基础工具：\\n\\n阿里云的centos已经优化了yum的源，你也可以自行修改\\n```\\nyum update -y && yum upgrage -y && yum clean all\\n```\\ncurl, wget都是方便后边的下载\\nvim作为一个老牌Linux文本编辑工具，你值得拥有\\n```\\nyum install curl wget vim -y\\n```\\n\\n### 更新全系统的vim配置\\n```\\ncurl https://raw.githubusercontent.com/tonyc726/vim-for-server/master/vimrc > /etc/vimrc  \\n```\\n\\n## MySQL安装设置\\n由于CentOS7已经不带Mysql数据库了（默认的数据库是MariaDB，Mysql的一个分支），所以需要先安裝MySQL Repository（具体的版本号，可以参考 https://dev.mysql.com/downloads/repo/yum/）:\\n\\n### 安裝 MySQL Repository\\n```\\nrpm -Uvh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\\n```\\n### 安装MySQL数据库的服务器社区稳定版\\n```\\nyum install mysql-community-server -y\\n```\\n### 启动MySQL服务\\n```\\nsystemctl start mysqld.service\\n```\\n### 设置随系统自启动\\n```\\nsystemctl enable mysqld.service  \\n```\\n### 初始化设置\\n```\\nmysql_secure_installation\\n```\\n由于MySQL5.7默认会初始化Root用户的密码，所以在执行之前需要获取这个初始密码：\\n（本次设置中并没有执行如下操作，应为默认安装后第一次运行时不需密码，在初始化过程中会提示设置密码）\\n```\\ngrep \\\"password\\\" /var/log/mysqld.log  \\n```\\n\\n\\n### 创建Ghost需要的用户及数据库：\\n\\n运行以后输入刚才拿到的密码\\n```\\nmysql -uroot -p \\n```\\n添加新数据库blog，后面Ghost会用到\\n```\\nCREATE DATABASE blog;\\n```\\n添加新用户ghost（password替换为你需要的密码）\\n```\\nCREATE USER ghost IDENTIFIED BY 'password';\\n```\\n授予ghost用户在blog数据库上的所有权限\\n（password就是你刚才创建ghost账户时设置的密码）\\n```\\nGRANT ALL PRIVILEGES ON blog.* TO 'ghost'@'localhost' IDENTIFIED BY 'password';\\n```\\n刷新权限\\n（当执行过GRANT，CREATE USER，REVOKE命令之后，必须要执行刷新权限才能生效）\\n```\\nFLUSH PRIVILEGES;\\n```\\nCtrl+D 退出\\n\\n好了，以上就是MySQL部分\\n\\n## NodeJS安装设置\\n\\n推荐使用以下方式安装NodeJS\\n本系统使用V6稳定版，如需其它版本，你可以自行调整\\n```\\ncurl -sL https://rpm.nodesource.com/setup_6.x | sudo -E bash -  \\n```\\n### 安装NodeJS及其依赖包\\nyum install gcc-c++ make nodejs -y\\n\\nNodeJS安装以后，默认已经自带的NPM\\n不过npm之前一直被吐槽，建议***升级最新版或者用yarn代替***\\n### 升级npm至最新版本(^v5.0.4)\\n```\\nnpm install npm@latest -g\\n```\\n### 安装yarn代替（推荐）\\n```\\ncurl --silent --location https://rpm.nodesource.com/setup_6.x | bash -  \\nyum install yarn -y\\n```\\n\\n### 测试一下\\n```\\nnode -v\\n```\\n\\n> v6.11.0\\n```\\nnpm -v\\n```\\n> v5.1.0\\n```\\nyarn -v\\n```\\n> v0.27.5\\n\\n这里有个坑，如果直接使用yum install nodejs -y也是可以安装NodeJS的，不过nodesource维护的更加好，而且可以升级npm。\\n\\n如果你已经看到了最后输出的信息，那么久代表NodeJS已经就绪了。\\n## Nginx安装配置\\n\\n### 直接安装即可\\n```\\nyum install nginx -y\\n```\\n### 立即启动\\n```\\nsystemctl start nginx\\n```\\n### 设置开机自启动\\n```\\nsystemctl enable nginx  \\n```\\n\\n现在，打开你的浏览器，输入你的公网IP，不出意外，你就已经可以看到一个Nginx的欢迎页面了。\\n\\n不过，出于后期的扩展或者安全性考虑，我们需要为系统创建一个名为www的用户，专门用于管理网站.\\n\\n### 反向代理80端口\\n\\n众所周知，网站基本都以 80 端口作为默认端口（除非你不想让别人访问你的网站），也就是说：访问域名或服务器 IP 地址，实际上是在访问该服务器的 80 端口。而 Ghost 博客默认运行在 2368 端口上。\\n\\n为了输入域名或服务器 IP 地址就可以访问到你的 Ghost 博客，需要将访问 80 端口的请求，反向代理到 Ghost 的 2368 端口上。\\n\\n进入 Nginx 配置目录：\\n    ```\\n    cd /etc/nginx/conf.d\\n    ```\\n新建 Ghost 博客的 Nginx 配置文件：\\n```\\nvim ghost.conf\\n```\\n按 i 输入以下内容：\\n\\n> server {  \\n>     listen 80;\\n>     server_name loyalsoldier.me //这里修改为你的域名；如果没有域名，则改为服务器 IP 地址;\\n> \\n>     gzip on;\\n>     gzip_types text/plain application/xml text/css application/javascript application/json application/font-woff application/font-woff2 application/vnd.ms-fontobject application/x-font-ttf font/opentype application/pdf image/png image/bmp image/gif image/jpeg image/webp image/svg+xml;\\n>     gzip_proxied no-cache no-store private expired auth;\\n>     gzip_vary on;\\n>     gzip_min_length 1024;\\n> \\n>     location / {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>     }\\n> \\n>     location ~* .*\\\\.(jpg|jpeg|bmp|png|gif|ico|js|css|eot|woff|woff2|svg|ttf|otf)$ {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n> \\n>         add_header Cache-Control max-age=2592000;\\n>         expires    30d;\\n>         etag       on;\\n>     }\\n> }\\n\\n按 ESC 键结束编辑，输入 :wq 保存文件并退出编辑\\n使用 nginx -t 测试 Nginx 配置文件是否语法正确：\\n\\n```\\nsudo nginx -t\\n```\\n若输出的结果有 ok、successful 等字样，表示配置正确\\n\\n如果正确的话，重启Nginx服务\\n```\\nsystemctl restart nginx.service  \\n```\\n\\n\\n## 添加新用户\\n创建一个名为www的用户组\\n```\\nadduser www\\n```\\n\\n### 设置密码(请记录下你的密码，以后需要用到)\\n```\\npasswd www\\n```\\n\\n### 分配Root权限 - 让我们新创建的www用户拥有Root用户的权限\\n```\\ngpasswd -a www wheel\\n```\\n### 将nginx用户添加入www的用户组，方便后期的权限控制\\n```\\nusermod -a -G nginx,www nginx  \\n```\\n\\n## 安装ghost\\n以上就是Ghost需要用到的基础系统了，下面就来安装Ghost，新开一个Terminal窗口，用**www**账户登录：\\n```\\nssh www@xxx.xxx.xxx.xxx  \\n```\\n然后下载Ghost最新的代码。\\n\\n### 下载Ghost最新的稳定版\\n```\\ncurl -L https://ghost.org/zip/ghost-latest.zip -o ghost.zip\\n```\\n### 解压\\n```\\nunzip -uo ghost.zip -d ghost\\n```\\n### 进入Ghost的目录并安装生产环境的依赖\\n```\\ncd ghost && npm install --production\\n```\\nnpm install --production这个命令可能需要执行多次，也是由于国内网络的原因，导致下载速度很慢，每次都下载不完全，需要多次执行，直到成功安装完成。\\n### 修改Ghost的config，修改数据库配置\\n```\\nvim config.js  \\n```\\n完整的config.js配置如下：\\n\\n> var path = require('path'),  \\n>     config;\\n> \\n> config = {  \\n>     production: {\\n>         url: 'https://www.xxxx.xxx',（换成服务器ip或者申请的域名）\\n>         mail: {},\\n>         database: {\\n>             client: 'mysql',（前面安装的mysql数据库，这里一定要对应）\\n>             connection: {\\n>                 host     : '127.0.0.1',\\n>                 user     : 'ghost', //用户名\\n>                 password : 'password', //ghost的密码，之前设置的\\n>                 database : 'blog', //数据库名\\n>                 charset  : 'utf8'\\n>             },\\n>             debug: false\\n>         },\\n> \\n>         server: {\\n>             host: '127.0.0.1',\\n>             port: '2368'\\n>         }\\n>     }\\n> };\\n> \\n> module.exports = config;  \\n\\n除了ghost安装根目录下的这个配置文件，还要检查一下/ghost/core/server/config下面的相应的配置文件，将相应的项更改正确，端口由于使用反向代理，因此不要更改，主要看一下url和database下面相应的设置。\\n\\n### 安装knex-migrator\\n实际上这个时候用生产模式运行ghost会报错，提示没有安装knex-migrator。\\n安装之前需要先编辑ghost安装文件夹下的***MigrtorConfig.js***文件。\\n\\n\\n使用vim编写MigrtorConfig.js文件\\n\\n```\\nvim MigrtorConfig.js\\n```\\n\\n\\n> module.exports = {\\n>     database: {\\n>         client: 'mysql',\\n>         connection: {\\n>             host: '127.0.0.1',\\n>             user: 'ghost',（之前mysql设置时建立的用户名）\\n>             password: 'password',（改成mysql的ghost用户密码）\\n>             charset: 'utf8',\\n>             name: 'blog'（之前mysql设置时建立的数据库）\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version',\\n>  /**\\n>     subfolder: 'upgrades'  [default: versions]\\n>     （这一部分在执行时总出问题，就注释掉了）\\n>  */\\n> }\\n> （下面应该是数据库使用sqlite3时的设置，由于本方案使用的mysql，所以可以不用写进去）\\n> module.exports = {\\n>     database: {\\n>         client: 'sqlite3',\\n>         connection: {\\n>             filename: 'path/to/your.db'\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version'\\n> }\\n> \\n\\n使用下面指令安装：\\n```\\nnpm install -g knex-migrator\\n```\\n\\n由于国内网络的原因，这个命令也可能需要执行多次才能安装完，中间会提示校验错误，这个应该是下载没有完成，而网络链接断开了的原因，再执行一次就行，直到最后完成安装。\\n\\n\\n运行一下：\\n```\\nnpm start --production\\n```\\n如果看到下面的提示，证明你已经完成80%了：\\n\\n\\n> Ghost is running in production...  \\n> Your blog is now available on https://www.itony.net  \\n> Ctrl+C to shut down  \\n\\n### 问题及解决方案\\n\\n#### 权限问题\\n在执行npm start --production的时候，遇到npm权限的问题，提示没有node_modules文件夹的写权限，这个时候使用sudo命令进行安装时又提示别的错误，最终采用\\nnpmjs.com网站中的[解决方法2](https://docs.npmjs.com/getting-started/fixing-npm-permissions)。\\n首先检查npm的路径：\\n```\\nnpm config get prefix\\n```\\n发现是/usr\\n然后改变npm的默认路径：\\n1.为全局安装路径建立文件夹：（操作均在www用户下完成）\\n```\\nmkdir ~/.npm-global\\n```\\n2.设置默认路径：\\n```\\nnpm config set prefix '~/.npm-global'\\n```\\n3.加入用户PATH：\\n打开用户家目录下面的profile文件，这里是.bash_profile，加入下面的语句：\\n```\\nexport PATH=~/.npm-global/bin:$PATH\\n```\\n4.更新profile文件\\n```\\nsource ~/.bash_profile\\n```\\n**检验**：全局下载文件包，**不要用sudo**，也可以省去检测\\n``` \\nnpm install -g jshint\\n```\\n也可以使用下面更改环境变量的方式代替2-4步：（如果不想更改profile文件的话）\\n```\\nNPM_CONFIG_PREFIX=~/.npm-global\\n```\\n#### 语法错误问题\\n> Syntax error: Unexpected token\\n出现上面的语句就要检查一下相应的配置文件的语法是否有错误。\\n## 全局安装PM2\\n目前你是开着远程连接到你的服务器，一旦你把窗口关闭了，那么你刚才起的npm start --production可就悲剧了，如何避免呢，这时候我们就需要一个能帮我们在后台稳定运行node服务的工具了，目前比较火热的要数PM2了：\\n\\n``\\nyarn global add pm2 --prefix /usr/local\\n``\\n### 用PM2来启动Ghost的node服务\\n先切到ghost的目录，然后再运行\\n```\\nNODE_ENV=production pm2 start index.js --name \\\"blog\\\"\\n```\\n### 检查运行结果\\n```\\npm2 show blog  \\n```\\n\"}]],\"sections\":[[10,0]]}","page":false,"plaintext":"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\n什么是ghost？\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\n但是这并不影响我们搭建ghost服务器。吼吼吼~\n\n搭建准备\n在阿里云 [https://www.aliyun.com/]上购买了一年的ECS服务器，配置如下:\nCPU 1核；\n内存 2G；\n带宽 1Mbps；\n硬盘 40G。\n系统 CentOS 7.3 64位\n\n云服务器配置\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\n\n云服务器ECS——网络和安全——安全组——配置规则\n\n\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\n这里的设置主要是参考了阿里云的官方帮助文档 [https://help.aliyun.com/knowledge_detail/34403.html]。","published_at":"2017-09-28T13:41:32.000Z","slug":"shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost","status":"published","title":"搭建Ghost服务器","updated_at":"2017-09-29T02:05:19.000Z","updated_by":"1","tags":{"0":{"id":"59ccb425a744810195a3dc01","name":"技术","slug":"ji-zhu","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T08:34:45.000Z","updated_at":"2017-09-28T08:34:45.000Z","created_by":"1","updated_by":"1"},"1":{"id":"59cd12bfa744810195a3dc06","name":"博客","slug":"bo-ke","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T15:18:23.000Z","updated_at":"2017-09-28T15:18:23.000Z","created_by":"1","updated_by":"1"}},"author_id":"1"}}},"query":{"include":"tags"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"http://47.95.197.107","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/*","content-type":"application/json; charset=utf-8","etag":"W/\"4987-oBGGlZkOyXaqNc8K37w7OGc9qeQ\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"64ms"},"msg":"","time":"2017-09-29T02:06:32.876Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"ee1e6090-a4ba-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/posts/59ccf296a744810195a3dc03/?include=tags","method":"PUT","originalUrl":"/ghost/api/v0.1/posts/59ccf296a744810195a3dc03/?include=tags","params":{"id":"59ccf296a744810195a3dc03"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","content-length":"18552","origin":"http://47.95.197.107","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"1.9","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{"posts":{"0":{"id":"59ccf296a744810195a3dc03","created_at":"2017-09-28T13:01:10.000Z","created_by":"1","featured":false,"feature_image":"/content/images/2017/09/ghost.png","codeinjection_foot":"","codeinjection_head":"","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\\n什么是ghost？\\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\\n但是这并不影响我们搭建ghost服务器。吼吼吼~\\n\\n# 搭建准备\\n在[**阿里云**](https://www.aliyun.com/)上购买了一年的ECS服务器，配置如下:\\nCPU 1核；\\n内存 2G；\\n带宽 1Mbps；\\n硬盘 40G。\\n系统 CentOS 7.3 64位\\n\\n# 云服务器配置\\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\\n> 云服务器ECS——网络和安全——安全组——配置规则\\n![--------](/content/images/2017/09/--------.jpg)\\n![-------](/content/images/2017/09/-------.jpg)\\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\\n这里的设置主要是参考了[**阿里云的官方帮助文档**](https://help.aliyun.com/knowledge_detail/34403.html)。\\n# 安装ghost\\n\\n## 需要用到的东西\\n\\n* 一个完成A记录解析设置的域名（建议做好ICP备案）；（可选）\\n* 使用 [**MySQL**](https://www.mysql.com/) 做数据库服务；\\n* 使用 [**Nginx**](https://nginx.org/) 做网页服务器（Ghost的代理服务）；\\n* 使用 [**NodeJS**](https://nodejs.org/) 做后端服务；\\n* [**Ghost**](https://ghost.org/)一个开源的博客系统；\\n\\n## 基础设置\\n\\n### 查看一下系统信息：\\n\\n```\\ncat /etc/redhat-release  \\n```\\n> #>>> CentOS Linux release 7.3.1611 (Core)\\n\\n\\n### 更新一下系统，安装一些基础工具：\\n\\n阿里云的centos已经优化了yum的源，你也可以自行修改\\n```\\nyum update -y && yum upgrage -y && yum clean all\\n```\\ncurl, wget都是方便后边的下载\\nvim作为一个老牌Linux文本编辑工具，你值得拥有\\n```\\nyum install curl wget vim -y\\n```\\n\\n### 更新全系统的vim配置\\n```\\ncurl https://raw.githubusercontent.com/tonyc726/vim-for-server/master/vimrc > /etc/vimrc  \\n```\\n\\n## MySQL安装设置\\n由于CentOS7已经不带Mysql数据库了（默认的数据库是MariaDB，Mysql的一个分支），所以需要先安裝MySQL Repository（具体的版本号，可以参考 https://dev.mysql.com/downloads/repo/yum/）:\\n\\n### 安裝 MySQL Repository\\n```\\nrpm -Uvh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\\n```\\n### 安装MySQL数据库的服务器社区稳定版\\n```\\nyum install mysql-community-server -y\\n```\\n### 启动MySQL服务\\n```\\nsystemctl start mysqld.service\\n```\\n### 设置随系统自启动\\n```\\nsystemctl enable mysqld.service  \\n```\\n### 初始化设置\\n```\\nmysql_secure_installation\\n```\\n由于MySQL5.7默认会初始化Root用户的密码，所以在执行之前需要获取这个初始密码：\\n（本次设置中并没有执行如下操作，应为默认安装后第一次运行时不需密码，在初始化过程中会提示设置密码）\\n```\\ngrep \\\"password\\\" /var/log/mysqld.log  \\n```\\n\\n\\n### 创建Ghost需要的用户及数据库：\\n\\n运行以后输入刚才拿到的密码\\n```\\nmysql -uroot -p \\n```\\n添加新数据库blog，后面Ghost会用到\\n```\\nCREATE DATABASE blog;\\n```\\n添加新用户ghost（password替换为你需要的密码）\\n```\\nCREATE USER ghost IDENTIFIED BY 'password';\\n```\\n授予ghost用户在blog数据库上的所有权限\\n（password就是你刚才创建ghost账户时设置的密码）\\n```\\nGRANT ALL PRIVILEGES ON blog.* TO 'ghost'@'localhost' IDENTIFIED BY 'password';\\n```\\n刷新权限\\n（当执行过GRANT，CREATE USER，REVOKE命令之后，必须要执行刷新权限才能生效）\\n```\\nFLUSH PRIVILEGES;\\n```\\nCtrl+D 退出\\n\\n好了，以上就是MySQL部分\\n\\n## NodeJS安装设置\\n\\n推荐使用以下方式安装NodeJS\\n本系统使用V6稳定版，如需其它版本，你可以自行调整\\n```\\ncurl -sL https://rpm.nodesource.com/setup_6.x | sudo -E bash -  \\n```\\n### 安装NodeJS及其依赖包\\nyum install gcc-c++ make nodejs -y\\n\\nNodeJS安装以后，默认已经自带的NPM\\n不过npm之前一直被吐槽，建议***升级最新版或者用yarn代替***\\n### 升级npm至最新版本(^v5.0.4)\\n```\\nnpm install npm@latest -g\\n```\\n### 安装yarn代替（推荐）\\n```\\ncurl --silent --location https://rpm.nodesource.com/setup_6.x | bash -  \\nyum install yarn -y\\n```\\n\\n### 测试一下\\n```\\nnode -v\\n```\\n\\n> v6.11.0\\n```\\nnpm -v\\n```\\n> v5.1.0\\n```\\nyarn -v\\n```\\n> v0.27.5\\n\\n这里有个坑，如果直接使用yum install nodejs -y也是可以安装NodeJS的，不过nodesource维护的更加好，而且可以升级npm。\\n\\n如果你已经看到了最后输出的信息，那么久代表NodeJS已经就绪了。\\n## Nginx安装配置\\n\\n### 直接安装即可\\n```\\nyum install nginx -y\\n```\\n### 立即启动\\n```\\nsystemctl start nginx\\n```\\n### 设置开机自启动\\n```\\nsystemctl enable nginx  \\n```\\n\\n现在，打开你的浏览器，输入你的公网IP，不出意外，你就已经可以看到一个Nginx的欢迎页面了。\\n\\n不过，出于后期的扩展或者安全性考虑，我们需要为系统创建一个名为www的用户，专门用于管理网站.\\n\\n### 反向代理80端口\\n\\n众所周知，网站基本都以 80 端口作为默认端口（除非你不想让别人访问你的网站），也就是说：访问域名或服务器 IP 地址，实际上是在访问该服务器的 80 端口。而 Ghost 博客默认运行在 2368 端口上。\\n\\n为了输入域名或服务器 IP 地址就可以访问到你的 Ghost 博客，需要将访问 80 端口的请求，反向代理到 Ghost 的 2368 端口上。\\n\\n进入 Nginx 配置目录：\\n    ```\\n    cd /etc/nginx/conf.d\\n    ```\\n新建 Ghost 博客的 Nginx 配置文件：\\n```\\nvim ghost.conf\\n```\\n按 i 输入以下内容：\\n\\n> server {  \\n>     listen 80;\\n>     server_name loyalsoldier.me //修改为域名或服务器 IP 地址;\\n>     gzip on;\\n>     gzip_types text/plain application/xml text/css application/javascript application/json application/font-woff application/font-woff2 application/vnd.ms-fontobject application/x-font-ttf font/opentype application/pdf image/png image/bmp image/gif image/jpeg image/webp image/svg+xml;\\n>     gzip_proxied no-cache no-store private expired auth;\\n>     gzip_vary on;\\n>     gzip_min_length 1024;\\n> \\n>     location / {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>     }\\n> \\n>     location ~* .*\\\\.(jpg|jpeg|bmp|png|gif|ico|js|css|eot|woff|woff2|svg|ttf|otf)$ {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n> \\n>         add_header Cache-Control max-age=2592000;\\n>         expires    30d;\\n>         etag       on;\\n>     }\\n> }\\n\\n按 ESC 键结束编辑，输入 :wq 保存文件并退出编辑\\n使用 nginx -t 测试 Nginx 配置文件是否语法正确：\\n\\n```\\nsudo nginx -t\\n```\\n若输出的结果有 ok、successful 等字样，表示配置正确\\n\\n如果正确的话，重启Nginx服务\\n```\\nsystemctl restart nginx.service  \\n```\\n\\n\\n## 添加新用户\\n创建一个名为www的用户组\\n```\\nadduser www\\n```\\n\\n### 设置密码(请记录下你的密码，以后需要用到)\\n```\\npasswd www\\n```\\n\\n### 分配Root权限 - 让我们新创建的www用户拥有Root用户的权限\\n```\\ngpasswd -a www wheel\\n```\\n### 将nginx用户添加入www的用户组，方便后期的权限控制\\n```\\nusermod -a -G nginx,www nginx  \\n```\\n\\n## 安装ghost\\n以上就是Ghost需要用到的基础系统了，下面就来安装Ghost，新开一个Terminal窗口，用**www**账户登录：\\n```\\nssh www@xxx.xxx.xxx.xxx  \\n```\\n然后下载Ghost最新的代码。\\n\\n### 下载Ghost最新的稳定版\\n```\\ncurl -L https://ghost.org/zip/ghost-latest.zip -o ghost.zip\\n```\\n### 解压\\n```\\nunzip -uo ghost.zip -d ghost\\n```\\n### 进入Ghost的目录并安装生产环境的依赖\\n```\\ncd ghost && npm install --production\\n```\\nnpm install --production这个命令可能需要执行多次，也是由于国内网络的原因，导致下载速度很慢，每次都下载不完全，需要多次执行，直到成功安装完成。\\n### 修改Ghost的config，修改数据库配置\\n```\\nvim config.js  \\n```\\n完整的config.js配置如下：\\n\\n> var path = require('path'),  \\n>     config;\\n> \\n> config = {  \\n>     production: {\\n>         url: 'https://www.xxxx.xxx',（换成服务器ip或者申请的域名）\\n>         mail: {},\\n>         database: {\\n>             client: 'mysql',（前面安装的mysql数据库，这里一定要对应）\\n>             connection: {\\n>                 host     : '127.0.0.1',\\n>                 user     : 'ghost', //用户名\\n>                 password : 'password', //ghost的密码，之前设置的\\n>                 database : 'blog', //数据库名\\n>                 charset  : 'utf8'\\n>             },\\n>             debug: false\\n>         },\\n> \\n>         server: {\\n>             host: '127.0.0.1',\\n>             port: '2368'\\n>         }\\n>     }\\n> };\\n> \\n> module.exports = config;  \\n\\n除了ghost安装根目录下的这个配置文件，还要检查一下/ghost/core/server/config下面的相应的配置文件，将相应的项更改正确，端口由于使用反向代理，因此不要更改，主要看一下url和database下面相应的设置。\\n\\n### 安装knex-migrator\\n实际上这个时候用生产模式运行ghost会报错，提示没有安装knex-migrator。\\n安装之前需要先编辑ghost安装文件夹下的***MigrtorConfig.js***文件。\\n\\n\\n使用vim编写MigrtorConfig.js文件\\n\\n```\\nvim MigrtorConfig.js\\n```\\n\\n\\n> module.exports = {\\n>     database: {\\n>         client: 'mysql',\\n>         connection: {\\n>             host: '127.0.0.1',\\n>             user: 'ghost',（之前mysql设置时建立的用户名）\\n>             password: 'password',（改成mysql的ghost用户密码）\\n>             charset: 'utf8',\\n>             name: 'blog'（之前mysql设置时建立的数据库）\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version',\\n>  /**\\n>     subfolder: 'upgrades'  [default: versions]\\n>     （这一部分在执行时总出问题，就注释掉了）\\n>  */\\n> }\\n> （下面应该是数据库使用sqlite3时的设置，由于本方案使用的mysql，所以可以不用写进去）\\n> module.exports = {\\n>     database: {\\n>         client: 'sqlite3',\\n>         connection: {\\n>             filename: 'path/to/your.db'\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version'\\n> }\\n> \\n\\n使用下面指令安装：\\n```\\nnpm install -g knex-migrator\\n```\\n\\n由于国内网络的原因，这个命令也可能需要执行多次才能安装完，中间会提示校验错误，这个应该是下载没有完成，而网络链接断开了的原因，再执行一次就行，直到最后完成安装。\\n\\n\\n运行一下：\\n```\\nnpm start --production\\n```\\n如果看到下面的提示，证明你已经完成80%了：\\n\\n\\n> Ghost is running in production...  \\n> Your blog is now available on https://www.itony.net  \\n> Ctrl+C to shut down  \\n\\n### 问题及解决方案\\n\\n#### 权限问题\\n在执行npm start --production的时候，遇到npm权限的问题，提示没有node_modules文件夹的写权限，这个时候使用sudo命令进行安装时又提示别的错误，最终采用\\nnpmjs.com网站中的[解决方法2](https://docs.npmjs.com/getting-started/fixing-npm-permissions)。\\n首先检查npm的路径：\\n```\\nnpm config get prefix\\n```\\n发现是/usr\\n然后改变npm的默认路径：\\n1.为全局安装路径建立文件夹：（操作均在www用户下完成）\\n```\\nmkdir ~/.npm-global\\n```\\n2.设置默认路径：\\n```\\nnpm config set prefix '~/.npm-global'\\n```\\n3.加入用户PATH：\\n打开用户家目录下面的profile文件，这里是.bash_profile，加入下面的语句：\\n```\\nexport PATH=~/.npm-global/bin:$PATH\\n```\\n4.更新profile文件\\n```\\nsource ~/.bash_profile\\n```\\n**检验**：全局下载文件包，**不要用sudo**，也可以省去检测\\n``` \\nnpm install -g jshint\\n```\\n也可以使用下面更改环境变量的方式代替2-4步：（如果不想更改profile文件的话）\\n```\\nNPM_CONFIG_PREFIX=~/.npm-global\\n```\\n#### 语法错误问题\\n> Syntax error: Unexpected token\\n出现上面的语句就要检查一下相应的配置文件的语法是否有错误。\\n## 全局安装PM2\\n目前你是开着远程连接到你的服务器，一旦你把窗口关闭了，那么你刚才起的npm start --production可就悲剧了，如何避免呢，这时候我们就需要一个能帮我们在后台稳定运行node服务的工具了，目前比较火热的要数PM2了：\\n\\n``\\nyarn global add pm2 --prefix /usr/local\\n``\\n### 用PM2来启动Ghost的node服务\\n先切到ghost的目录，然后再运行\\n```\\nNODE_ENV=production pm2 start index.js --name \\\"blog\\\"\\n```\\n### 检查运行结果\\n```\\npm2 show blog  \\n```\\n\"}]],\"sections\":[[10,0]]}","page":false,"plaintext":"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\n什么是ghost？\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\n但是这并不影响我们搭建ghost服务器。吼吼吼~\n\n搭建准备\n在阿里云 [https://www.aliyun.com/]上购买了一年的ECS服务器，配置如下:\nCPU 1核；\n内存 2G；\n带宽 1Mbps；\n硬盘 40G。\n系统 CentOS 7.3 64位\n\n云服务器配置\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\n\n云服务器ECS——网络和安全——安全组——配置规则\n\n\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\n这里的设置主要是参考了阿里云的官方帮助文档 [https://help.aliyun.com/knowledge_detail/34403.html]。","published_at":"2017-09-28T13:41:32.000Z","slug":"shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost","status":"published","title":"搭建Ghost服务器","updated_at":"2017-09-29T02:06:32.000Z","updated_by":"1","tags":{"0":{"id":"59ccb425a744810195a3dc01","name":"技术","slug":"ji-zhu","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T08:34:45.000Z","updated_at":"2017-09-28T08:34:45.000Z","created_by":"1","updated_by":"1"},"1":{"id":"59cd12bfa744810195a3dc06","name":"博客","slug":"bo-ke","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T15:18:23.000Z","updated_at":"2017-09-28T15:18:23.000Z","created_by":"1","updated_by":"1"}},"author_id":"1"}}},"query":{"include":"tags"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"http://47.95.197.107","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/*","content-type":"application/json; charset=utf-8","etag":"W/\"496f-y5YyhKHTOxDsSYhBiHsfDZpqmgA\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"60ms"},"msg":"","time":"2017-09-29T02:07:22.456Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"f06395a0-a4ba-11e7-ad29-7b3837c864ae","userId":null},"url":"/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","method":"GET","originalUrl":"/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","params":{"0":"/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"text/html, application/xhtml+xml, image/jxr, */*","referer":"http://47.95.197.107/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-none-match":"W/\"8894-5uxeWVoBoNl8uUW4mBHWcJye5RA\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"8830-PaLWfgk2pbvfB1YTZT6XWDfhJeE\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"52ms"},"msg":"","time":"2017-09-29T02:07:26.255Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"f06da7c0-a4ba-11e7-ad29-7b3837c864ae","userId":null},"url":"/assets/built/screen.css?v=b5301c75d8","method":"GET","originalUrl":"/assets/built/screen.css?v=b5301c75d8","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"text/css, */*","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 07:32:48 GMT","if-none-match":"W/\"759e-15ec766fb30\""},"body":{},"query":{"v":"b5301c75d8"}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 07:32:48 GMT","etag":"W/\"759e-15ec766fb30\""},"statusCode":304,"responseTime":"1ms"},"msg":"","time":"2017-09-29T02:07:26.270Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"f06f7c80-a4ba-11e7-ad29-7b3837c864ae","userId":null},"url":"/public/ghost-sdk.min.js?v=b5301c75d8","method":"GET","originalUrl":"/public/ghost-sdk.min.js?v=b5301c75d8","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"application/javascript, */*;q=0.8","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-none-match":"\"30c3227170bdaa36ca322470e2b77a33\""},"body":{},"query":{"v":"b5301c75d8"}},"res":{"_headers":{"x-powered-by":"Express","content-type":"application/javascript","content-length":765,"etag":"\"30c3227170bdaa36ca322470e2b77a33\"","cache-control":"public, max-age=3600","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"1ms"},"msg":"","time":"2017-09-29T02:07:26.282Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"f071ed80-a4ba-11e7-ad29-7b3837c864ae","userId":null},"url":"/2017/09/--------.jpg","method":"GET","originalUrl":"/content/images/2017/09/--------.jpg","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"image/png, image/svg+xml, image/jxr, image/*;q=0.8, */*;q=0.5","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 13:33:23 GMT","if-none-match":"W/\"e957-15ec8b11b2b\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 13:33:23 GMT","etag":"W/\"e957-15ec8b11b2b\""},"statusCode":304,"responseTime":"1ms"},"msg":"","time":"2017-09-29T02:07:26.297Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"f071ed81-a4ba-11e7-ad29-7b3837c864ae","userId":null},"url":"/2017/09/-------.jpg","method":"GET","originalUrl":"/content/images/2017/09/-------.jpg","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"image/png, image/svg+xml, image/jxr, image/*;q=0.8, */*;q=0.5","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 13:34:45 GMT","if-none-match":"W/\"d3bc-15ec8b2597a\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 13:34:45 GMT","etag":"W/\"d3bc-15ec8b2597a\""},"statusCode":304,"responseTime":"2ms"},"msg":"","time":"2017-09-29T02:07:26.298Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"f07548e0-a4ba-11e7-ad29-7b3837c864ae","userId":null},"url":"/2017/09/ghost.png","method":"GET","originalUrl":"/content/images/2017/09/ghost.png","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"image/png, image/svg+xml, image/jxr, image/*;q=0.8, */*;q=0.5","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 15:17:51 GMT","if-none-match":"W/\"37a86-15ec910bf89\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 15:17:51 GMT","etag":"W/\"37a86-15ec910bf89\""},"statusCode":304,"responseTime":"1ms"},"msg":"","time":"2017-09-29T02:07:26.319Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"f0756ff0-a4ba-11e7-ad29-7b3837c864ae","userId":null},"url":"/2017/09/---.jpg","method":"GET","originalUrl":"/content/images/2017/09/---.jpg","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"image/png, image/svg+xml, image/jxr, image/*;q=0.8, */*;q=0.5","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 08:33:32 GMT","if-none-match":"W/\"545b-15ec79e95e4\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 08:33:32 GMT","etag":"W/\"545b-15ec79e95e4\""},"statusCode":304,"responseTime":"1ms"},"msg":"","time":"2017-09-29T02:07:26.320Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"f0c45340-a4ba-11e7-ad29-7b3837c864ae","userId":null},"url":"/assets/js/jquery.fitvids.js?v=b5301c75d8","method":"GET","originalUrl":"/assets/js/jquery.fitvids.js?v=b5301c75d8","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"application/javascript, */*;q=0.8","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 07:32:48 GMT","if-none-match":"W/\"d76-15ec766fb30\""},"body":{},"query":{"v":"b5301c75d8"}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 07:32:48 GMT","etag":"W/\"d76-15ec766fb30\""},"statusCode":304,"responseTime":"1ms"},"msg":"","time":"2017-09-29T02:07:26.839Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"fb10bd20-a4ba-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/posts/59ccf296a744810195a3dc03/?include=tags","method":"PUT","originalUrl":"/ghost/api/v0.1/posts/59ccf296a744810195a3dc03/?include=tags","params":{"id":"59ccf296a744810195a3dc03"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","content-length":"18547","origin":"http://47.95.197.107","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"1.9","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{"posts":{"0":{"id":"59ccf296a744810195a3dc03","created_at":"2017-09-28T13:01:10.000Z","created_by":"1","featured":false,"feature_image":"/content/images/2017/09/ghost.png","codeinjection_foot":"","codeinjection_head":"","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\\n什么是ghost？\\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\\n但是这并不影响我们搭建ghost服务器。吼吼吼~\\n\\n# 搭建准备\\n在[**阿里云**](https://www.aliyun.com/)上购买了一年的ECS服务器，配置如下:\\nCPU 1核；\\n内存 2G；\\n带宽 1Mbps；\\n硬盘 40G。\\n系统 CentOS 7.3 64位\\n\\n# 云服务器配置\\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\\n> 云服务器ECS——网络和安全——安全组——配置规则\\n![--------](/content/images/2017/09/--------.jpg)\\n![-------](/content/images/2017/09/-------.jpg)\\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\\n这里的设置主要是参考了[**阿里云的官方帮助文档**](https://help.aliyun.com/knowledge_detail/34403.html)。\\n# 安装ghost\\n\\n## 需要用到的东西\\n\\n* 一个完成A记录解析设置的域名（建议做好ICP备案）；（可选）\\n* 使用 [**MySQL**](https://www.mysql.com/) 做数据库服务；\\n* 使用 [**Nginx**](https://nginx.org/) 做网页服务器（Ghost的代理服务）；\\n* 使用 [**NodeJS**](https://nodejs.org/) 做后端服务；\\n* [**Ghost**](https://ghost.org/)一个开源的博客系统；\\n\\n## 基础设置\\n\\n### 查看一下系统信息：\\n\\n```\\ncat /etc/redhat-release  \\n```\\n> #>>> CentOS Linux release 7.3.1611 (Core)\\n\\n\\n### 更新一下系统，安装一些基础工具：\\n\\n阿里云的centos已经优化了yum的源，你也可以自行修改\\n```\\nyum update -y && yum upgrage -y && yum clean all\\n```\\ncurl, wget都是方便后边的下载\\nvim作为一个老牌Linux文本编辑工具，你值得拥有\\n```\\nyum install curl wget vim -y\\n```\\n\\n### 更新全系统的vim配置\\n```\\ncurl https://raw.githubusercontent.com/tonyc726/vim-for-server/master/vimrc > /etc/vimrc  \\n```\\n\\n## MySQL安装设置\\n由于CentOS7已经不带Mysql数据库了（默认的数据库是MariaDB，Mysql的一个分支），所以需要先安裝MySQL Repository（具体的版本号，可以参考 https://dev.mysql.com/downloads/repo/yum/）:\\n\\n### 安裝 MySQL Repository\\n```\\nrpm -Uvh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\\n```\\n### 安装MySQL数据库的服务器社区稳定版\\n```\\nyum install mysql-community-server -y\\n```\\n### 启动MySQL服务\\n```\\nsystemctl start mysqld.service\\n```\\n### 设置随系统自启动\\n```\\nsystemctl enable mysqld.service  \\n```\\n### 初始化设置\\n```\\nmysql_secure_installation\\n```\\n由于MySQL5.7默认会初始化Root用户的密码，所以在执行之前需要获取这个初始密码：\\n（本次设置中并没有执行如下操作，应为默认安装后第一次运行时不需密码，在初始化过程中会提示设置密码）\\n```\\ngrep \\\"password\\\" /var/log/mysqld.log  \\n```\\n\\n\\n### 创建Ghost需要的用户及数据库：\\n\\n运行以后输入刚才拿到的密码\\n```\\nmysql -uroot -p \\n```\\n添加新数据库blog，后面Ghost会用到\\n```\\nCREATE DATABASE blog;\\n```\\n添加新用户ghost（password替换为你需要的密码）\\n```\\nCREATE USER ghost IDENTIFIED BY 'password';\\n```\\n授予ghost用户在blog数据库上的所有权限\\n（password就是你刚才创建ghost账户时设置的密码）\\n```\\nGRANT ALL PRIVILEGES ON blog.* TO 'ghost'@'localhost' IDENTIFIED BY 'password';\\n```\\n刷新权限\\n（当执行过GRANT，CREATE USER，REVOKE命令之后，必须要执行刷新权限才能生效）\\n```\\nFLUSH PRIVILEGES;\\n```\\nCtrl+D 退出\\n\\n好了，以上就是MySQL部分\\n\\n## NodeJS安装设置\\n\\n推荐使用以下方式安装NodeJS\\n本系统使用V6稳定版，如需其它版本，你可以自行调整\\n```\\ncurl -sL https://rpm.nodesource.com/setup_6.x | sudo -E bash -  \\n```\\n### 安装NodeJS及其依赖包\\nyum install gcc-c++ make nodejs -y\\n\\nNodeJS安装以后，默认已经自带的NPM\\n不过npm之前一直被吐槽，建议***升级最新版或者用yarn代替***\\n### 升级npm至最新版本(^v5.0.4)\\n```\\nnpm install npm@latest -g\\n```\\n### 安装yarn代替（推荐）\\n```\\ncurl --silent --location https://rpm.nodesource.com/setup_6.x | bash -  \\nyum install yarn -y\\n```\\n\\n### 测试一下\\n```\\nnode -v\\n```\\n\\n> v6.11.0\\n```\\nnpm -v\\n```\\n> v5.1.0\\n```\\nyarn -v\\n```\\n> v0.27.5\\n\\n这里有个坑，如果直接使用yum install nodejs -y也是可以安装NodeJS的，不过nodesource维护的更加好，而且可以升级npm。\\n\\n如果你已经看到了最后输出的信息，那么久代表NodeJS已经就绪了。\\n## Nginx安装配置\\n\\n### 直接安装即可\\n```\\nyum install nginx -y\\n```\\n### 立即启动\\n```\\nsystemctl start nginx\\n```\\n### 设置开机自启动\\n```\\nsystemctl enable nginx  \\n```\\n\\n现在，打开你的浏览器，输入你的公网IP，不出意外，你就已经可以看到一个Nginx的欢迎页面了。\\n\\n不过，出于后期的扩展或者安全性考虑，我们需要为系统创建一个名为www的用户，专门用于管理网站.\\n\\n### 反向代理80端口\\n\\n众所周知，网站基本都以 80 端口作为默认端口（除非你不想让别人访问你的网站），也就是说：访问域名或服务器 IP 地址，实际上是在访问该服务器的 80 端口。而 Ghost 博客默认运行在 2368 端口上。\\n\\n为了输入域名或服务器 IP 地址就可以访问到你的 Ghost 博客，需要将访问 80 端口的请求，反向代理到 Ghost 的 2368 端口上。\\n\\n进入 Nginx 配置目录：\\n    ```\\n    cd /etc/nginx/conf.d\\n    ```\\n新建 Ghost 博客的 Nginx 配置文件：\\n```\\nvim ghost.conf\\n```\\n按 i 输入以下内容：\\n\\n> server {  \\n>     listen 80;\\n>     server_name loyalsoldier.me //修改为域名或服务器 IP 地址;\\n>     gzip on;\\n>     gzip_types text/plain application/xml text/css application/javascript application/json application/font-woff application/font-woff2 application/vnd.ms-fontobject application/x-font-ttf font/opentype application/pdf image/png image/bmp image/gif image/jpeg image/webp image/svg+xml;\\n>     gzip_proxied no-cache no-store private expired auth;\\n>     gzip_vary on;\\n>     gzip_min_length 1024;\\n> \\n>     location / {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>     }\\n>     location ~* .*\\\\.(jpg|jpeg|bmp|png|gif|ico|js|css|eot|woff|woff2|svg|ttf|otf)$ {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n> \\n>         add_header Cache-Control max-age=2592000;\\n>         expires    30d;\\n>         etag       on;\\n>     }\\n> }\\n\\n按 ESC 键结束编辑，输入 :wq 保存文件并退出编辑\\n使用 nginx -t 测试 Nginx 配置文件是否语法正确：\\n\\n```\\nsudo nginx -t\\n```\\n若输出的结果有 ok、successful 等字样，表示配置正确\\n\\n如果正确的话，重启Nginx服务\\n```\\nsystemctl restart nginx.service  \\n```\\n\\n\\n## 添加新用户\\n创建一个名为www的用户组\\n```\\nadduser www\\n```\\n\\n### 设置密码(请记录下你的密码，以后需要用到)\\n```\\npasswd www\\n```\\n\\n### 分配Root权限 - 让我们新创建的www用户拥有Root用户的权限\\n```\\ngpasswd -a www wheel\\n```\\n### 将nginx用户添加入www的用户组，方便后期的权限控制\\n```\\nusermod -a -G nginx,www nginx  \\n```\\n\\n## 安装ghost\\n以上就是Ghost需要用到的基础系统了，下面就来安装Ghost，新开一个Terminal窗口，用**www**账户登录：\\n```\\nssh www@xxx.xxx.xxx.xxx  \\n```\\n然后下载Ghost最新的代码。\\n\\n### 下载Ghost最新的稳定版\\n```\\ncurl -L https://ghost.org/zip/ghost-latest.zip -o ghost.zip\\n```\\n### 解压\\n```\\nunzip -uo ghost.zip -d ghost\\n```\\n### 进入Ghost的目录并安装生产环境的依赖\\n```\\ncd ghost && npm install --production\\n```\\nnpm install --production这个命令可能需要执行多次，也是由于国内网络的原因，导致下载速度很慢，每次都下载不完全，需要多次执行，直到成功安装完成。\\n### 修改Ghost的config，修改数据库配置\\n```\\nvim config.js  \\n```\\n完整的config.js配置如下：\\n\\n> var path = require('path'),  \\n>     config;\\n> \\n> config = {  \\n>     production: {\\n>         url: 'https://www.xxxx.xxx',（换成服务器ip或者申请的域名）\\n>         mail: {},\\n>         database: {\\n>             client: 'mysql',（前面安装的mysql数据库，这里一定要对应）\\n>             connection: {\\n>                 host     : '127.0.0.1',\\n>                 user     : 'ghost', //用户名\\n>                 password : 'password', //ghost的密码，之前设置的\\n>                 database : 'blog', //数据库名\\n>                 charset  : 'utf8'\\n>             },\\n>             debug: false\\n>         },\\n> \\n>         server: {\\n>             host: '127.0.0.1',\\n>             port: '2368'\\n>         }\\n>     }\\n> };\\n> \\n> module.exports = config;  \\n\\n除了ghost安装根目录下的这个配置文件，还要检查一下/ghost/core/server/config下面的相应的配置文件，将相应的项更改正确，端口由于使用反向代理，因此不要更改，主要看一下url和database下面相应的设置。\\n\\n### 安装knex-migrator\\n实际上这个时候用生产模式运行ghost会报错，提示没有安装knex-migrator。\\n安装之前需要先编辑ghost安装文件夹下的***MigrtorConfig.js***文件。\\n\\n\\n使用vim编写MigrtorConfig.js文件\\n\\n```\\nvim MigrtorConfig.js\\n```\\n\\n\\n> module.exports = {\\n>     database: {\\n>         client: 'mysql',\\n>         connection: {\\n>             host: '127.0.0.1',\\n>             user: 'ghost',（之前mysql设置时建立的用户名）\\n>             password: 'password',（改成mysql的ghost用户密码）\\n>             charset: 'utf8',\\n>             name: 'blog'（之前mysql设置时建立的数据库）\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version',\\n>  /**\\n>     subfolder: 'upgrades'  [default: versions]\\n>     （这一部分在执行时总出问题，就注释掉了）\\n>  */\\n> }\\n> （下面应该是数据库使用sqlite3时的设置，由于本方案使用的mysql，所以可以不用写进去）\\n> module.exports = {\\n>     database: {\\n>         client: 'sqlite3',\\n>         connection: {\\n>             filename: 'path/to/your.db'\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version'\\n> }\\n> \\n\\n使用下面指令安装：\\n```\\nnpm install -g knex-migrator\\n```\\n\\n由于国内网络的原因，这个命令也可能需要执行多次才能安装完，中间会提示校验错误，这个应该是下载没有完成，而网络链接断开了的原因，再执行一次就行，直到最后完成安装。\\n\\n\\n运行一下：\\n```\\nnpm start --production\\n```\\n如果看到下面的提示，证明你已经完成80%了：\\n\\n\\n> Ghost is running in production...  \\n> Your blog is now available on https://www.itony.net  \\n> Ctrl+C to shut down  \\n\\n### 问题及解决方案\\n\\n#### 权限问题\\n在执行npm start --production的时候，遇到npm权限的问题，提示没有node_modules文件夹的写权限，这个时候使用sudo命令进行安装时又提示别的错误，最终采用\\nnpmjs.com网站中的[解决方法2](https://docs.npmjs.com/getting-started/fixing-npm-permissions)。\\n首先检查npm的路径：\\n```\\nnpm config get prefix\\n```\\n发现是/usr\\n然后改变npm的默认路径：\\n1.为全局安装路径建立文件夹：（操作均在www用户下完成）\\n```\\nmkdir ~/.npm-global\\n```\\n2.设置默认路径：\\n```\\nnpm config set prefix '~/.npm-global'\\n```\\n3.加入用户PATH：\\n打开用户家目录下面的profile文件，这里是.bash_profile，加入下面的语句：\\n```\\nexport PATH=~/.npm-global/bin:$PATH\\n```\\n4.更新profile文件\\n```\\nsource ~/.bash_profile\\n```\\n**检验**：全局下载文件包，**不要用sudo**，也可以省去检测\\n``` \\nnpm install -g jshint\\n```\\n也可以使用下面更改环境变量的方式代替2-4步：（如果不想更改profile文件的话）\\n```\\nNPM_CONFIG_PREFIX=~/.npm-global\\n```\\n#### 语法错误问题\\n> Syntax error: Unexpected token\\n出现上面的语句就要检查一下相应的配置文件的语法是否有错误。\\n## 全局安装PM2\\n目前你是开着远程连接到你的服务器，一旦你把窗口关闭了，那么你刚才起的npm start --production可就悲剧了，如何避免呢，这时候我们就需要一个能帮我们在后台稳定运行node服务的工具了，目前比较火热的要数PM2了：\\n\\n``\\nyarn global add pm2 --prefix /usr/local\\n``\\n### 用PM2来启动Ghost的node服务\\n先切到ghost的目录，然后再运行\\n```\\nNODE_ENV=production pm2 start index.js --name \\\"blog\\\"\\n```\\n### 检查运行结果\\n```\\npm2 show blog  \\n```\\n\"}]],\"sections\":[[10,0]]}","page":false,"plaintext":"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\n什么是ghost？\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\n但是这并不影响我们搭建ghost服务器。吼吼吼~\n\n搭建准备\n在阿里云 [https://www.aliyun.com/]上购买了一年的ECS服务器，配置如下:\nCPU 1核；\n内存 2G；\n带宽 1Mbps；\n硬盘 40G。\n系统 CentOS 7.3 64位\n\n云服务器配置\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\n\n云服务器ECS——网络和安全——安全组——配置规则\n\n\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\n这里的设置主要是参考了阿里云的官方帮助文档 [https://help.aliyun.com/knowledge_detail/34403.html]。","published_at":"2017-09-28T13:41:32.000Z","slug":"shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost","status":"published","title":"搭建Ghost服务器","updated_at":"2017-09-29T02:07:22.000Z","updated_by":"1","tags":{"0":{"id":"59ccb425a744810195a3dc01","name":"技术","slug":"ji-zhu","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T08:34:45.000Z","updated_at":"2017-09-28T08:34:45.000Z","created_by":"1","updated_by":"1"},"1":{"id":"59cd12bfa744810195a3dc06","name":"博客","slug":"bo-ke","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T15:18:23.000Z","updated_at":"2017-09-28T15:18:23.000Z","created_by":"1","updated_by":"1"}},"author_id":"1"}}},"query":{"include":"tags"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"http://47.95.197.107","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/*","content-type":"application/json; charset=utf-8","etag":"W/\"496d-Bdrp5Msv/+HGLgyft7PxqULMIKk\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"59ms"},"msg":"","time":"2017-09-29T02:07:44.176Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"fc3f5210-a4ba-11e7-ad29-7b3837c864ae","userId":null},"url":"/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","method":"GET","originalUrl":"/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","params":{"0":"/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"text/html, application/xhtml+xml, image/jxr, */*","referer":"http://47.95.197.107/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-none-match":"W/\"8830-PaLWfgk2pbvfB1YTZT6XWDfhJeE\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"882f-yARtk7+whEGltsYx/SufI9ZgMYk\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"51ms"},"msg":"","time":"2017-09-29T02:07:46.149Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"fc493d20-a4ba-11e7-ad29-7b3837c864ae","userId":null},"url":"/assets/built/screen.css?v=b5301c75d8","method":"GET","originalUrl":"/assets/built/screen.css?v=b5301c75d8","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"text/css, */*","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 07:32:48 GMT","if-none-match":"W/\"759e-15ec766fb30\""},"body":{},"query":{"v":"b5301c75d8"}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 07:32:48 GMT","etag":"W/\"759e-15ec766fb30\""},"statusCode":304,"responseTime":"2ms"},"msg":"","time":"2017-09-29T02:07:46.165Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"fc4b6000-a4ba-11e7-ad29-7b3837c864ae","userId":null},"url":"/public/ghost-sdk.min.js?v=b5301c75d8","method":"GET","originalUrl":"/public/ghost-sdk.min.js?v=b5301c75d8","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"application/javascript, */*;q=0.8","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-none-match":"\"30c3227170bdaa36ca322470e2b77a33\""},"body":{},"query":{"v":"b5301c75d8"}},"res":{"_headers":{"x-powered-by":"Express","content-type":"application/javascript","content-length":765,"etag":"\"30c3227170bdaa36ca322470e2b77a33\"","cache-control":"public, max-age=3600","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"0ms"},"msg":"","time":"2017-09-29T02:07:46.177Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"fc4d5bd0-a4ba-11e7-ad29-7b3837c864ae","userId":null},"url":"/2017/09/--------.jpg","method":"GET","originalUrl":"/content/images/2017/09/--------.jpg","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"image/png, image/svg+xml, image/jxr, image/*;q=0.8, */*;q=0.5","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 13:33:23 GMT","if-none-match":"W/\"e957-15ec8b11b2b\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 13:33:23 GMT","etag":"W/\"e957-15ec8b11b2b\""},"statusCode":304,"responseTime":"1ms"},"msg":"","time":"2017-09-29T02:07:46.191Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"fc4da9f0-a4ba-11e7-ad29-7b3837c864ae","userId":null},"url":"/2017/09/-------.jpg","method":"GET","originalUrl":"/content/images/2017/09/-------.jpg","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"image/png, image/svg+xml, image/jxr, image/*;q=0.8, */*;q=0.5","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 13:34:45 GMT","if-none-match":"W/\"d3bc-15ec8b2597a\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 13:34:45 GMT","etag":"W/\"d3bc-15ec8b2597a\""},"statusCode":304,"responseTime":"1ms"},"msg":"","time":"2017-09-29T02:07:46.193Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"fc515370-a4ba-11e7-ad29-7b3837c864ae","userId":null},"url":"/2017/09/ghost.png","method":"GET","originalUrl":"/content/images/2017/09/ghost.png","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"image/png, image/svg+xml, image/jxr, image/*;q=0.8, */*;q=0.5","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 15:17:51 GMT","if-none-match":"W/\"37a86-15ec910bf89\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 15:17:51 GMT","etag":"W/\"37a86-15ec910bf89\""},"statusCode":304,"responseTime":"1ms"},"msg":"","time":"2017-09-29T02:07:46.216Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"fc51a190-a4ba-11e7-ad29-7b3837c864ae","userId":null},"url":"/2017/09/---.jpg","method":"GET","originalUrl":"/content/images/2017/09/---.jpg","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"image/png, image/svg+xml, image/jxr, image/*;q=0.8, */*;q=0.5","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 08:33:32 GMT","if-none-match":"W/\"545b-15ec79e95e4\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 08:33:32 GMT","etag":"W/\"545b-15ec79e95e4\""},"statusCode":304,"responseTime":"0ms"},"msg":"","time":"2017-09-29T02:07:46.218Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"fc6fb0e0-a4ba-11e7-ad29-7b3837c864ae","userId":null},"url":"/assets/js/jquery.fitvids.js?v=b5301c75d8","method":"GET","originalUrl":"/assets/js/jquery.fitvids.js?v=b5301c75d8","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"application/javascript, */*;q=0.8","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 07:32:48 GMT","if-none-match":"W/\"d76-15ec766fb30\""},"body":{},"query":{"v":"b5301c75d8"}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 07:32:48 GMT","etag":"W/\"d76-15ec766fb30\""},"statusCode":304,"responseTime":"1ms"},"msg":"","time":"2017-09-29T02:07:46.416Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"0779ec80-a4bb-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/posts/59ccf296a744810195a3dc03/?include=tags","method":"PUT","originalUrl":"/ghost/api/v0.1/posts/59ccf296a744810195a3dc03/?include=tags","params":{"id":"59ccf296a744810195a3dc03"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","content-length":"18542","origin":"http://47.95.197.107","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"1.9","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{"posts":{"0":{"id":"59ccf296a744810195a3dc03","created_at":"2017-09-28T13:01:10.000Z","created_by":"1","featured":false,"feature_image":"/content/images/2017/09/ghost.png","codeinjection_foot":"","codeinjection_head":"","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\\n什么是ghost？\\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\\n但是这并不影响我们搭建ghost服务器。吼吼吼~\\n\\n# 搭建准备\\n在[**阿里云**](https://www.aliyun.com/)上购买了一年的ECS服务器，配置如下:\\nCPU 1核；\\n内存 2G；\\n带宽 1Mbps；\\n硬盘 40G。\\n系统 CentOS 7.3 64位\\n\\n# 云服务器配置\\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\\n> 云服务器ECS——网络和安全——安全组——配置规则\\n![--------](/content/images/2017/09/--------.jpg)\\n![-------](/content/images/2017/09/-------.jpg)\\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\\n这里的设置主要是参考了[**阿里云的官方帮助文档**](https://help.aliyun.com/knowledge_detail/34403.html)。\\n# 安装ghost\\n\\n## 需要用到的东西\\n\\n* 一个完成A记录解析设置的域名（建议做好ICP备案）；（可选）\\n* 使用 [**MySQL**](https://www.mysql.com/) 做数据库服务；\\n* 使用 [**Nginx**](https://nginx.org/) 做网页服务器（Ghost的代理服务）；\\n* 使用 [**NodeJS**](https://nodejs.org/) 做后端服务；\\n* [**Ghost**](https://ghost.org/)一个开源的博客系统；\\n\\n## 基础设置\\n\\n### 查看一下系统信息：\\n\\n```\\ncat /etc/redhat-release  \\n```\\n> #>>> CentOS Linux release 7.3.1611 (Core)\\n\\n\\n### 更新一下系统，安装一些基础工具：\\n\\n阿里云的centos已经优化了yum的源，你也可以自行修改\\n```\\nyum update -y && yum upgrage -y && yum clean all\\n```\\ncurl, wget都是方便后边的下载\\nvim作为一个老牌Linux文本编辑工具，你值得拥有\\n```\\nyum install curl wget vim -y\\n```\\n\\n### 更新全系统的vim配置\\n```\\ncurl https://raw.githubusercontent.com/tonyc726/vim-for-server/master/vimrc > /etc/vimrc  \\n```\\n\\n## MySQL安装设置\\n由于CentOS7已经不带Mysql数据库了（默认的数据库是MariaDB，Mysql的一个分支），所以需要先安裝MySQL Repository（具体的版本号，可以参考 https://dev.mysql.com/downloads/repo/yum/）:\\n\\n### 安裝 MySQL Repository\\n```\\nrpm -Uvh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\\n```\\n### 安装MySQL数据库的服务器社区稳定版\\n```\\nyum install mysql-community-server -y\\n```\\n### 启动MySQL服务\\n```\\nsystemctl start mysqld.service\\n```\\n### 设置随系统自启动\\n```\\nsystemctl enable mysqld.service  \\n```\\n### 初始化设置\\n```\\nmysql_secure_installation\\n```\\n由于MySQL5.7默认会初始化Root用户的密码，所以在执行之前需要获取这个初始密码：\\n（本次设置中并没有执行如下操作，应为默认安装后第一次运行时不需密码，在初始化过程中会提示设置密码）\\n```\\ngrep \\\"password\\\" /var/log/mysqld.log  \\n```\\n\\n\\n### 创建Ghost需要的用户及数据库：\\n\\n运行以后输入刚才拿到的密码\\n```\\nmysql -uroot -p \\n```\\n添加新数据库blog，后面Ghost会用到\\n```\\nCREATE DATABASE blog;\\n```\\n添加新用户ghost（password替换为你需要的密码）\\n```\\nCREATE USER ghost IDENTIFIED BY 'password';\\n```\\n授予ghost用户在blog数据库上的所有权限\\n（password就是你刚才创建ghost账户时设置的密码）\\n```\\nGRANT ALL PRIVILEGES ON blog.* TO 'ghost'@'localhost' IDENTIFIED BY 'password';\\n```\\n刷新权限\\n（当执行过GRANT，CREATE USER，REVOKE命令之后，必须要执行刷新权限才能生效）\\n```\\nFLUSH PRIVILEGES;\\n```\\nCtrl+D 退出\\n\\n好了，以上就是MySQL部分\\n\\n## NodeJS安装设置\\n\\n推荐使用以下方式安装NodeJS\\n本系统使用V6稳定版，如需其它版本，你可以自行调整\\n```\\ncurl -sL https://rpm.nodesource.com/setup_6.x | sudo -E bash -  \\n```\\n### 安装NodeJS及其依赖包\\nyum install gcc-c++ make nodejs -y\\n\\nNodeJS安装以后，默认已经自带的NPM\\n不过npm之前一直被吐槽，建议***升级最新版或者用yarn代替***\\n### 升级npm至最新版本(^v5.0.4)\\n```\\nnpm install npm@latest -g\\n```\\n### 安装yarn代替（推荐）\\n```\\ncurl --silent --location https://rpm.nodesource.com/setup_6.x | bash -  \\nyum install yarn -y\\n```\\n\\n### 测试一下\\n```\\nnode -v\\n```\\n\\n> v6.11.0\\n```\\nnpm -v\\n```\\n> v5.1.0\\n```\\nyarn -v\\n```\\n> v0.27.5\\n\\n这里有个坑，如果直接使用yum install nodejs -y也是可以安装NodeJS的，不过nodesource维护的更加好，而且可以升级npm。\\n\\n如果你已经看到了最后输出的信息，那么久代表NodeJS已经就绪了。\\n## Nginx安装配置\\n\\n### 直接安装即可\\n```\\nyum install nginx -y\\n```\\n### 立即启动\\n```\\nsystemctl start nginx\\n```\\n### 设置开机自启动\\n```\\nsystemctl enable nginx  \\n```\\n\\n现在，打开你的浏览器，输入你的公网IP，不出意外，你就已经可以看到一个Nginx的欢迎页面了。\\n\\n不过，出于后期的扩展或者安全性考虑，我们需要为系统创建一个名为www的用户，专门用于管理网站.\\n\\n### 反向代理80端口\\n\\n众所周知，网站基本都以 80 端口作为默认端口（除非你不想让别人访问你的网站），也就是说：访问域名或服务器 IP 地址，实际上是在访问该服务器的 80 端口。而 Ghost 博客默认运行在 2368 端口上。\\n\\n为了输入域名或服务器 IP 地址就可以访问到你的 Ghost 博客，需要将访问 80 端口的请求，反向代理到 Ghost 的 2368 端口上。\\n\\n进入 Nginx 配置目录：\\n    ```\\n    cd /etc/nginx/conf.d\\n    ```\\n新建 Ghost 博客的 Nginx 配置文件：\\n```\\nvim ghost.conf\\n```\\n按 i 输入以下内容：\\n\\n> server {  \\n>     listen 80;\\n>     server_name loyalsoldier.me //修改为域名或服务器 IP 地址;\\n>     gzip on;\\n>     gzip_types text/plain application/xml text/css application/javascript application/json application/font-woff application/font-woff2 application/vnd.ms-fontobject application/x-font-ttf font/opentype application/pdf image/png image/bmp image/gif image/jpeg image/webp image/svg+xml;\\n>     gzip_proxied no-cache no-store private expired auth;\\n>     gzip_vary on;\\n>     gzip_min_length 1024;\\n>     location / {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>     }\\n>     location ~* .*\\\\.(jpg|jpeg|bmp|png|gif|ico|js|css|eot|woff|woff2|svg|ttf|otf)$ {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n> \\n>         add_header Cache-Control max-age=2592000;\\n>         expires    30d;\\n>         etag       on;\\n>     }\\n> }\\n\\n按 ESC 键结束编辑，输入 :wq 保存文件并退出编辑\\n使用 nginx -t 测试 Nginx 配置文件是否语法正确：\\n\\n```\\nsudo nginx -t\\n```\\n若输出的结果有 ok、successful 等字样，表示配置正确\\n\\n如果正确的话，重启Nginx服务\\n```\\nsystemctl restart nginx.service  \\n```\\n\\n\\n## 添加新用户\\n创建一个名为www的用户组\\n```\\nadduser www\\n```\\n\\n### 设置密码(请记录下你的密码，以后需要用到)\\n```\\npasswd www\\n```\\n\\n### 分配Root权限 - 让我们新创建的www用户拥有Root用户的权限\\n```\\ngpasswd -a www wheel\\n```\\n### 将nginx用户添加入www的用户组，方便后期的权限控制\\n```\\nusermod -a -G nginx,www nginx  \\n```\\n\\n## 安装ghost\\n以上就是Ghost需要用到的基础系统了，下面就来安装Ghost，新开一个Terminal窗口，用**www**账户登录：\\n```\\nssh www@xxx.xxx.xxx.xxx  \\n```\\n然后下载Ghost最新的代码。\\n\\n### 下载Ghost最新的稳定版\\n```\\ncurl -L https://ghost.org/zip/ghost-latest.zip -o ghost.zip\\n```\\n### 解压\\n```\\nunzip -uo ghost.zip -d ghost\\n```\\n### 进入Ghost的目录并安装生产环境的依赖\\n```\\ncd ghost && npm install --production\\n```\\nnpm install --production这个命令可能需要执行多次，也是由于国内网络的原因，导致下载速度很慢，每次都下载不完全，需要多次执行，直到成功安装完成。\\n### 修改Ghost的config，修改数据库配置\\n```\\nvim config.js  \\n```\\n完整的config.js配置如下：\\n\\n> var path = require('path'),  \\n>     config;\\n> \\n> config = {  \\n>     production: {\\n>         url: 'https://www.xxxx.xxx',（换成服务器ip或者申请的域名）\\n>         mail: {},\\n>         database: {\\n>             client: 'mysql',（前面安装的mysql数据库，这里一定要对应）\\n>             connection: {\\n>                 host     : '127.0.0.1',\\n>                 user     : 'ghost', //用户名\\n>                 password : 'password', //ghost的密码，之前设置的\\n>                 database : 'blog', //数据库名\\n>                 charset  : 'utf8'\\n>             },\\n>             debug: false\\n>         },\\n> \\n>         server: {\\n>             host: '127.0.0.1',\\n>             port: '2368'\\n>         }\\n>     }\\n> };\\n> \\n> module.exports = config;  \\n\\n除了ghost安装根目录下的这个配置文件，还要检查一下/ghost/core/server/config下面的相应的配置文件，将相应的项更改正确，端口由于使用反向代理，因此不要更改，主要看一下url和database下面相应的设置。\\n\\n### 安装knex-migrator\\n实际上这个时候用生产模式运行ghost会报错，提示没有安装knex-migrator。\\n安装之前需要先编辑ghost安装文件夹下的***MigrtorConfig.js***文件。\\n\\n\\n使用vim编写MigrtorConfig.js文件\\n\\n```\\nvim MigrtorConfig.js\\n```\\n\\n\\n> module.exports = {\\n>     database: {\\n>         client: 'mysql',\\n>         connection: {\\n>             host: '127.0.0.1',\\n>             user: 'ghost',（之前mysql设置时建立的用户名）\\n>             password: 'password',（改成mysql的ghost用户密码）\\n>             charset: 'utf8',\\n>             name: 'blog'（之前mysql设置时建立的数据库）\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version',\\n>  /**\\n>     subfolder: 'upgrades'  [default: versions]\\n>     （这一部分在执行时总出问题，就注释掉了）\\n>  */\\n> }\\n> （下面应该是数据库使用sqlite3时的设置，由于本方案使用的mysql，所以可以不用写进去）\\n> module.exports = {\\n>     database: {\\n>         client: 'sqlite3',\\n>         connection: {\\n>             filename: 'path/to/your.db'\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version'\\n> }\\n> \\n\\n使用下面指令安装：\\n```\\nnpm install -g knex-migrator\\n```\\n\\n由于国内网络的原因，这个命令也可能需要执行多次才能安装完，中间会提示校验错误，这个应该是下载没有完成，而网络链接断开了的原因，再执行一次就行，直到最后完成安装。\\n\\n\\n运行一下：\\n```\\nnpm start --production\\n```\\n如果看到下面的提示，证明你已经完成80%了：\\n\\n\\n> Ghost is running in production...  \\n> Your blog is now available on https://www.itony.net  \\n> Ctrl+C to shut down  \\n\\n### 问题及解决方案\\n\\n#### 权限问题\\n在执行npm start --production的时候，遇到npm权限的问题，提示没有node_modules文件夹的写权限，这个时候使用sudo命令进行安装时又提示别的错误，最终采用\\nnpmjs.com网站中的[解决方法2](https://docs.npmjs.com/getting-started/fixing-npm-permissions)。\\n首先检查npm的路径：\\n```\\nnpm config get prefix\\n```\\n发现是/usr\\n然后改变npm的默认路径：\\n1.为全局安装路径建立文件夹：（操作均在www用户下完成）\\n```\\nmkdir ~/.npm-global\\n```\\n2.设置默认路径：\\n```\\nnpm config set prefix '~/.npm-global'\\n```\\n3.加入用户PATH：\\n打开用户家目录下面的profile文件，这里是.bash_profile，加入下面的语句：\\n```\\nexport PATH=~/.npm-global/bin:$PATH\\n```\\n4.更新profile文件\\n```\\nsource ~/.bash_profile\\n```\\n**检验**：全局下载文件包，**不要用sudo**，也可以省去检测\\n``` \\nnpm install -g jshint\\n```\\n也可以使用下面更改环境变量的方式代替2-4步：（如果不想更改profile文件的话）\\n```\\nNPM_CONFIG_PREFIX=~/.npm-global\\n```\\n#### 语法错误问题\\n> Syntax error: Unexpected token\\n出现上面的语句就要检查一下相应的配置文件的语法是否有错误。\\n## 全局安装PM2\\n目前你是开着远程连接到你的服务器，一旦你把窗口关闭了，那么你刚才起的npm start --production可就悲剧了，如何避免呢，这时候我们就需要一个能帮我们在后台稳定运行node服务的工具了，目前比较火热的要数PM2了：\\n\\n``\\nyarn global add pm2 --prefix /usr/local\\n``\\n### 用PM2来启动Ghost的node服务\\n先切到ghost的目录，然后再运行\\n```\\nNODE_ENV=production pm2 start index.js --name \\\"blog\\\"\\n```\\n### 检查运行结果\\n```\\npm2 show blog  \\n```\\n\"}]],\"sections\":[[10,0]]}","page":false,"plaintext":"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\n什么是ghost？\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\n但是这并不影响我们搭建ghost服务器。吼吼吼~\n\n搭建准备\n在阿里云 [https://www.aliyun.com/]上购买了一年的ECS服务器，配置如下:\nCPU 1核；\n内存 2G；\n带宽 1Mbps；\n硬盘 40G。\n系统 CentOS 7.3 64位\n\n云服务器配置\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\n\n云服务器ECS——网络和安全——安全组——配置规则\n\n\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\n这里的设置主要是参考了阿里云的官方帮助文档 [https://help.aliyun.com/knowledge_detail/34403.html]。","published_at":"2017-09-28T13:41:32.000Z","slug":"shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost","status":"published","title":"搭建Ghost服务器","updated_at":"2017-09-29T02:07:44.000Z","updated_by":"1","tags":{"0":{"id":"59ccb425a744810195a3dc01","name":"技术","slug":"ji-zhu","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T08:34:45.000Z","updated_at":"2017-09-28T08:34:45.000Z","created_by":"1","updated_by":"1"},"1":{"id":"59cd12bfa744810195a3dc06","name":"博客","slug":"bo-ke","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T15:18:23.000Z","updated_at":"2017-09-28T15:18:23.000Z","created_by":"1","updated_by":"1"}},"author_id":"1"}}},"query":{"include":"tags"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"http://47.95.197.107","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/*","content-type":"application/json; charset=utf-8","etag":"W/\"49c1-qotgzdYBoyp+HA+TFMjaZ3SYjXo\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"54ms"},"msg":"","time":"2017-09-29T02:08:04.993Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"087b56f0-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","method":"GET","originalUrl":"/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","params":{"0":"/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"text/html, application/xhtml+xml, image/jxr, */*","referer":"http://47.95.197.107/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-none-match":"W/\"882f-yARtk7+whEGltsYx/SufI9ZgMYk\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"8881-/qtjs1WAeEUzUO7H0mo0ncg9qYc\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"42ms"},"msg":"","time":"2017-09-29T02:08:06.666Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"0883bb60-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/assets/built/screen.css?v=b5301c75d8","method":"GET","originalUrl":"/assets/built/screen.css?v=b5301c75d8","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"text/css, */*","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 07:32:48 GMT","if-none-match":"W/\"759e-15ec766fb30\""},"body":{},"query":{"v":"b5301c75d8"}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 07:32:48 GMT","etag":"W/\"759e-15ec766fb30\""},"statusCode":304,"responseTime":"1ms"},"msg":"","time":"2017-09-29T02:08:06.680Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"08856910-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/public/ghost-sdk.min.js?v=b5301c75d8","method":"GET","originalUrl":"/public/ghost-sdk.min.js?v=b5301c75d8","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"application/javascript, */*;q=0.8","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-none-match":"\"30c3227170bdaa36ca322470e2b77a33\""},"body":{},"query":{"v":"b5301c75d8"}},"res":{"_headers":{"x-powered-by":"Express","content-type":"application/javascript","content-length":765,"etag":"\"30c3227170bdaa36ca322470e2b77a33\"","cache-control":"public, max-age=3600","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"1ms"},"msg":"","time":"2017-09-29T02:08:06.690Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"088764e0-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/2017/09/--------.jpg","method":"GET","originalUrl":"/content/images/2017/09/--------.jpg","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"image/png, image/svg+xml, image/jxr, image/*;q=0.8, */*;q=0.5","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 13:33:23 GMT","if-none-match":"W/\"e957-15ec8b11b2b\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 13:33:23 GMT","etag":"W/\"e957-15ec8b11b2b\""},"statusCode":304,"responseTime":"1ms"},"msg":"","time":"2017-09-29T02:08:06.703Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"08878bf0-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/2017/09/-------.jpg","method":"GET","originalUrl":"/content/images/2017/09/-------.jpg","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"image/png, image/svg+xml, image/jxr, image/*;q=0.8, */*;q=0.5","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 13:34:45 GMT","if-none-match":"W/\"d3bc-15ec8b2597a\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 13:34:45 GMT","etag":"W/\"d3bc-15ec8b2597a\""},"statusCode":304,"responseTime":"1ms"},"msg":"","time":"2017-09-29T02:08:06.705Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"088bd1b0-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/2017/09/ghost.png","method":"GET","originalUrl":"/content/images/2017/09/ghost.png","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"image/png, image/svg+xml, image/jxr, image/*;q=0.8, */*;q=0.5","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 15:17:51 GMT","if-none-match":"W/\"37a86-15ec910bf89\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 15:17:51 GMT","etag":"W/\"37a86-15ec910bf89\""},"statusCode":304,"responseTime":"0ms"},"msg":"","time":"2017-09-29T02:08:06.732Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"088bf8c0-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/2017/09/---.jpg","method":"GET","originalUrl":"/content/images/2017/09/---.jpg","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"image/png, image/svg+xml, image/jxr, image/*;q=0.8, */*;q=0.5","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 08:33:32 GMT","if-none-match":"W/\"545b-15ec79e95e4\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 08:33:32 GMT","etag":"W/\"545b-15ec79e95e4\""},"statusCode":304,"responseTime":"1ms"},"msg":"","time":"2017-09-29T02:08:06.733Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"08a9b9f0-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/assets/js/jquery.fitvids.js?v=b5301c75d8","method":"GET","originalUrl":"/assets/js/jquery.fitvids.js?v=b5301c75d8","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"application/javascript, */*;q=0.8","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 07:32:48 GMT","if-none-match":"W/\"d76-15ec766fb30\""},"body":{},"query":{"v":"b5301c75d8"}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 07:32:48 GMT","etag":"W/\"d76-15ec766fb30\""},"statusCode":304,"responseTime":"1ms"},"msg":"","time":"2017-09-29T02:08:06.929Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"0f860350-a4bb-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/posts/59ccf296a744810195a3dc03/?include=tags","method":"PUT","originalUrl":"/ghost/api/v0.1/posts/59ccf296a744810195a3dc03/?include=tags","params":{"id":"59ccf296a744810195a3dc03"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","content-length":"18537","origin":"http://47.95.197.107","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"1.9","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{"posts":{"0":{"id":"59ccf296a744810195a3dc03","created_at":"2017-09-28T13:01:10.000Z","created_by":"1","featured":false,"feature_image":"/content/images/2017/09/ghost.png","codeinjection_foot":"","codeinjection_head":"","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\\n什么是ghost？\\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\\n但是这并不影响我们搭建ghost服务器。吼吼吼~\\n\\n# 搭建准备\\n在[**阿里云**](https://www.aliyun.com/)上购买了一年的ECS服务器，配置如下:\\nCPU 1核；\\n内存 2G；\\n带宽 1Mbps；\\n硬盘 40G。\\n系统 CentOS 7.3 64位\\n\\n# 云服务器配置\\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\\n> 云服务器ECS——网络和安全——安全组——配置规则\\n![--------](/content/images/2017/09/--------.jpg)\\n![-------](/content/images/2017/09/-------.jpg)\\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\\n这里的设置主要是参考了[**阿里云的官方帮助文档**](https://help.aliyun.com/knowledge_detail/34403.html)。\\n# 安装ghost\\n\\n## 需要用到的东西\\n\\n* 一个完成A记录解析设置的域名（建议做好ICP备案）；（可选）\\n* 使用 [**MySQL**](https://www.mysql.com/) 做数据库服务；\\n* 使用 [**Nginx**](https://nginx.org/) 做网页服务器（Ghost的代理服务）；\\n* 使用 [**NodeJS**](https://nodejs.org/) 做后端服务；\\n* [**Ghost**](https://ghost.org/)一个开源的博客系统；\\n\\n## 基础设置\\n\\n### 查看一下系统信息：\\n\\n```\\ncat /etc/redhat-release  \\n```\\n> #>>> CentOS Linux release 7.3.1611 (Core)\\n\\n\\n### 更新一下系统，安装一些基础工具：\\n\\n阿里云的centos已经优化了yum的源，你也可以自行修改\\n```\\nyum update -y && yum upgrage -y && yum clean all\\n```\\ncurl, wget都是方便后边的下载\\nvim作为一个老牌Linux文本编辑工具，你值得拥有\\n```\\nyum install curl wget vim -y\\n```\\n\\n### 更新全系统的vim配置\\n```\\ncurl https://raw.githubusercontent.com/tonyc726/vim-for-server/master/vimrc > /etc/vimrc  \\n```\\n\\n## MySQL安装设置\\n由于CentOS7已经不带Mysql数据库了（默认的数据库是MariaDB，Mysql的一个分支），所以需要先安裝MySQL Repository（具体的版本号，可以参考 https://dev.mysql.com/downloads/repo/yum/）:\\n\\n### 安裝 MySQL Repository\\n```\\nrpm -Uvh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\\n```\\n### 安装MySQL数据库的服务器社区稳定版\\n```\\nyum install mysql-community-server -y\\n```\\n### 启动MySQL服务\\n```\\nsystemctl start mysqld.service\\n```\\n### 设置随系统自启动\\n```\\nsystemctl enable mysqld.service  \\n```\\n### 初始化设置\\n```\\nmysql_secure_installation\\n```\\n由于MySQL5.7默认会初始化Root用户的密码，所以在执行之前需要获取这个初始密码：\\n（本次设置中并没有执行如下操作，应为默认安装后第一次运行时不需密码，在初始化过程中会提示设置密码）\\n```\\ngrep \\\"password\\\" /var/log/mysqld.log  \\n```\\n\\n\\n### 创建Ghost需要的用户及数据库：\\n\\n运行以后输入刚才拿到的密码\\n```\\nmysql -uroot -p \\n```\\n添加新数据库blog，后面Ghost会用到\\n```\\nCREATE DATABASE blog;\\n```\\n添加新用户ghost（password替换为你需要的密码）\\n```\\nCREATE USER ghost IDENTIFIED BY 'password';\\n```\\n授予ghost用户在blog数据库上的所有权限\\n（password就是你刚才创建ghost账户时设置的密码）\\n```\\nGRANT ALL PRIVILEGES ON blog.* TO 'ghost'@'localhost' IDENTIFIED BY 'password';\\n```\\n刷新权限\\n（当执行过GRANT，CREATE USER，REVOKE命令之后，必须要执行刷新权限才能生效）\\n```\\nFLUSH PRIVILEGES;\\n```\\nCtrl+D 退出\\n\\n好了，以上就是MySQL部分\\n\\n## NodeJS安装设置\\n\\n推荐使用以下方式安装NodeJS\\n本系统使用V6稳定版，如需其它版本，你可以自行调整\\n```\\ncurl -sL https://rpm.nodesource.com/setup_6.x | sudo -E bash -  \\n```\\n### 安装NodeJS及其依赖包\\nyum install gcc-c++ make nodejs -y\\n\\nNodeJS安装以后，默认已经自带的NPM\\n不过npm之前一直被吐槽，建议***升级最新版或者用yarn代替***\\n### 升级npm至最新版本(^v5.0.4)\\n```\\nnpm install npm@latest -g\\n```\\n### 安装yarn代替（推荐）\\n```\\ncurl --silent --location https://rpm.nodesource.com/setup_6.x | bash -  \\nyum install yarn -y\\n```\\n\\n### 测试一下\\n```\\nnode -v\\n```\\n\\n> v6.11.0\\n```\\nnpm -v\\n```\\n> v5.1.0\\n```\\nyarn -v\\n```\\n> v0.27.5\\n\\n这里有个坑，如果直接使用yum install nodejs -y也是可以安装NodeJS的，不过nodesource维护的更加好，而且可以升级npm。\\n\\n如果你已经看到了最后输出的信息，那么久代表NodeJS已经就绪了。\\n## Nginx安装配置\\n\\n### 直接安装即可\\n```\\nyum install nginx -y\\n```\\n### 立即启动\\n```\\nsystemctl start nginx\\n```\\n### 设置开机自启动\\n```\\nsystemctl enable nginx  \\n```\\n\\n现在，打开你的浏览器，输入你的公网IP，不出意外，你就已经可以看到一个Nginx的欢迎页面了。\\n\\n不过，出于后期的扩展或者安全性考虑，我们需要为系统创建一个名为www的用户，专门用于管理网站.\\n\\n### 反向代理80端口\\n\\n众所周知，网站基本都以 80 端口作为默认端口（除非你不想让别人访问你的网站），也就是说：访问域名或服务器 IP 地址，实际上是在访问该服务器的 80 端口。而 Ghost 博客默认运行在 2368 端口上。\\n\\n为了输入域名或服务器 IP 地址就可以访问到你的 Ghost 博客，需要将访问 80 端口的请求，反向代理到 Ghost 的 2368 端口上。\\n\\n进入 Nginx 配置目录：\\n    ```\\n    cd /etc/nginx/conf.d\\n    ```\\n新建 Ghost 博客的 Nginx 配置文件：\\n```\\nvim ghost.conf\\n```\\n按 i 输入以下内容：\\n\\n> server {  \\n>     listen 80;\\n>     server_name loyalsoldier.me //修改为域名或服务器 IP 地址;\\n>     gzip on;\\n>     gzip_types text/plain application/xml text/css application/javascript application/json application/font-woff application/font-woff2 application/vnd.ms-fontobject application/x-font-ttf font/opentype application/pdf image/png image/bmp image/gif image/jpeg image/webp image/svg+xml;\\n>     gzip_proxied no-cache no-store private expired auth;\\n>     gzip_vary on;\\n>     gzip_min_length 1024;\\n>     location / {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>     }\\n>     location ~* .*\\\\.(jpg|jpeg|bmp|png|gif|ico|js|css|eot|woff|woff2|svg|ttf|otf)$ {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>         add_header Cache-Control max-age=2592000;\\n>         expires    30d;\\n>         etag       on;\\n>     }\\n> }\\n\\n按 ESC 键结束编辑，输入 :wq 保存文件并退出编辑\\n使用 nginx -t 测试 Nginx 配置文件是否语法正确：\\n\\n```\\nsudo nginx -t\\n```\\n若输出的结果有 ok、successful 等字样，表示配置正确\\n\\n如果正确的话，重启Nginx服务\\n```\\nsystemctl restart nginx.service  \\n```\\n\\n\\n## 添加新用户\\n创建一个名为www的用户组\\n```\\nadduser www\\n```\\n\\n### 设置密码(请记录下你的密码，以后需要用到)\\n```\\npasswd www\\n```\\n\\n### 分配Root权限 - 让我们新创建的www用户拥有Root用户的权限\\n```\\ngpasswd -a www wheel\\n```\\n### 将nginx用户添加入www的用户组，方便后期的权限控制\\n```\\nusermod -a -G nginx,www nginx  \\n```\\n\\n## 安装ghost\\n以上就是Ghost需要用到的基础系统了，下面就来安装Ghost，新开一个Terminal窗口，用**www**账户登录：\\n```\\nssh www@xxx.xxx.xxx.xxx  \\n```\\n然后下载Ghost最新的代码。\\n\\n### 下载Ghost最新的稳定版\\n```\\ncurl -L https://ghost.org/zip/ghost-latest.zip -o ghost.zip\\n```\\n### 解压\\n```\\nunzip -uo ghost.zip -d ghost\\n```\\n### 进入Ghost的目录并安装生产环境的依赖\\n```\\ncd ghost && npm install --production\\n```\\nnpm install --production这个命令可能需要执行多次，也是由于国内网络的原因，导致下载速度很慢，每次都下载不完全，需要多次执行，直到成功安装完成。\\n### 修改Ghost的config，修改数据库配置\\n```\\nvim config.js  \\n```\\n完整的config.js配置如下：\\n\\n> var path = require('path'),  \\n>     config;\\n> \\n> config = {  \\n>     production: {\\n>         url: 'https://www.xxxx.xxx',（换成服务器ip或者申请的域名）\\n>         mail: {},\\n>         database: {\\n>             client: 'mysql',（前面安装的mysql数据库，这里一定要对应）\\n>             connection: {\\n>                 host     : '127.0.0.1',\\n>                 user     : 'ghost', //用户名\\n>                 password : 'password', //ghost的密码，之前设置的\\n>                 database : 'blog', //数据库名\\n>                 charset  : 'utf8'\\n>             },\\n>             debug: false\\n>         },\\n> \\n>         server: {\\n>             host: '127.0.0.1',\\n>             port: '2368'\\n>         }\\n>     }\\n> };\\n> \\n> module.exports = config;  \\n\\n除了ghost安装根目录下的这个配置文件，还要检查一下/ghost/core/server/config下面的相应的配置文件，将相应的项更改正确，端口由于使用反向代理，因此不要更改，主要看一下url和database下面相应的设置。\\n\\n### 安装knex-migrator\\n实际上这个时候用生产模式运行ghost会报错，提示没有安装knex-migrator。\\n安装之前需要先编辑ghost安装文件夹下的***MigrtorConfig.js***文件。\\n\\n\\n使用vim编写MigrtorConfig.js文件\\n\\n```\\nvim MigrtorConfig.js\\n```\\n\\n\\n> module.exports = {\\n>     database: {\\n>         client: 'mysql',\\n>         connection: {\\n>             host: '127.0.0.1',\\n>             user: 'ghost',（之前mysql设置时建立的用户名）\\n>             password: 'password',（改成mysql的ghost用户密码）\\n>             charset: 'utf8',\\n>             name: 'blog'（之前mysql设置时建立的数据库）\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version',\\n>  /**\\n>     subfolder: 'upgrades'  [default: versions]\\n>     （这一部分在执行时总出问题，就注释掉了）\\n>  */\\n> }\\n> （下面应该是数据库使用sqlite3时的设置，由于本方案使用的mysql，所以可以不用写进去）\\n> module.exports = {\\n>     database: {\\n>         client: 'sqlite3',\\n>         connection: {\\n>             filename: 'path/to/your.db'\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version'\\n> }\\n> \\n\\n使用下面指令安装：\\n```\\nnpm install -g knex-migrator\\n```\\n\\n由于国内网络的原因，这个命令也可能需要执行多次才能安装完，中间会提示校验错误，这个应该是下载没有完成，而网络链接断开了的原因，再执行一次就行，直到最后完成安装。\\n\\n\\n运行一下：\\n```\\nnpm start --production\\n```\\n如果看到下面的提示，证明你已经完成80%了：\\n\\n\\n> Ghost is running in production...  \\n> Your blog is now available on https://www.itony.net  \\n> Ctrl+C to shut down  \\n\\n### 问题及解决方案\\n\\n#### 权限问题\\n在执行npm start --production的时候，遇到npm权限的问题，提示没有node_modules文件夹的写权限，这个时候使用sudo命令进行安装时又提示别的错误，最终采用\\nnpmjs.com网站中的[解决方法2](https://docs.npmjs.com/getting-started/fixing-npm-permissions)。\\n首先检查npm的路径：\\n```\\nnpm config get prefix\\n```\\n发现是/usr\\n然后改变npm的默认路径：\\n1.为全局安装路径建立文件夹：（操作均在www用户下完成）\\n```\\nmkdir ~/.npm-global\\n```\\n2.设置默认路径：\\n```\\nnpm config set prefix '~/.npm-global'\\n```\\n3.加入用户PATH：\\n打开用户家目录下面的profile文件，这里是.bash_profile，加入下面的语句：\\n```\\nexport PATH=~/.npm-global/bin:$PATH\\n```\\n4.更新profile文件\\n```\\nsource ~/.bash_profile\\n```\\n**检验**：全局下载文件包，**不要用sudo**，也可以省去检测\\n``` \\nnpm install -g jshint\\n```\\n也可以使用下面更改环境变量的方式代替2-4步：（如果不想更改profile文件的话）\\n```\\nNPM_CONFIG_PREFIX=~/.npm-global\\n```\\n#### 语法错误问题\\n> Syntax error: Unexpected token\\n出现上面的语句就要检查一下相应的配置文件的语法是否有错误。\\n## 全局安装PM2\\n目前你是开着远程连接到你的服务器，一旦你把窗口关闭了，那么你刚才起的npm start --production可就悲剧了，如何避免呢，这时候我们就需要一个能帮我们在后台稳定运行node服务的工具了，目前比较火热的要数PM2了：\\n\\n``\\nyarn global add pm2 --prefix /usr/local\\n``\\n### 用PM2来启动Ghost的node服务\\n先切到ghost的目录，然后再运行\\n```\\nNODE_ENV=production pm2 start index.js --name \\\"blog\\\"\\n```\\n### 检查运行结果\\n```\\npm2 show blog  \\n```\\n\"}]],\"sections\":[[10,0]]}","page":false,"plaintext":"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\n什么是ghost？\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\n但是这并不影响我们搭建ghost服务器。吼吼吼~\n\n搭建准备\n在阿里云 [https://www.aliyun.com/]上购买了一年的ECS服务器，配置如下:\nCPU 1核；\n内存 2G；\n带宽 1Mbps；\n硬盘 40G。\n系统 CentOS 7.3 64位\n\n云服务器配置\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\n\n云服务器ECS——网络和安全——安全组——配置规则\n\n\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\n这里的设置主要是参考了阿里云的官方帮助文档 [https://help.aliyun.com/knowledge_detail/34403.html]。","published_at":"2017-09-28T13:41:32.000Z","slug":"shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost","status":"published","title":"搭建Ghost服务器","updated_at":"2017-09-29T02:08:04.000Z","updated_by":"1","tags":{"0":{"id":"59ccb425a744810195a3dc01","name":"技术","slug":"ji-zhu","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T08:34:45.000Z","updated_at":"2017-09-28T08:34:45.000Z","created_by":"1","updated_by":"1"},"1":{"id":"59cd12bfa744810195a3dc06","name":"博客","slug":"bo-ke","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T15:18:23.000Z","updated_at":"2017-09-28T15:18:23.000Z","created_by":"1","updated_by":"1"}},"author_id":"1"}}},"query":{"include":"tags"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"http://47.95.197.107","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/*","content-type":"application/json; charset=utf-8","etag":"W/\"49a8-+ISC3fHUKMn18+Ju51cKYrckN6Y\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"57ms"},"msg":"","time":"2017-09-29T02:08:18.498Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"105672b0-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","method":"GET","originalUrl":"/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","params":{"0":"/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"text/html, application/xhtml+xml, image/jxr, */*","referer":"http://47.95.197.107/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-none-match":"W/\"8881-/qtjs1WAeEUzUO7H0mo0ncg9qYc\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"8869-KMDPxN5f91jZu/+Ry4oZqoFH+ec\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"51ms"},"msg":"","time":"2017-09-29T02:08:19.855Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"106036b0-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/assets/built/screen.css?v=b5301c75d8","method":"GET","originalUrl":"/assets/built/screen.css?v=b5301c75d8","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"text/css, */*","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 07:32:48 GMT","if-none-match":"W/\"759e-15ec766fb30\""},"body":{},"query":{"v":"b5301c75d8"}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 07:32:48 GMT","etag":"W/\"759e-15ec766fb30\""},"statusCode":304,"responseTime":"0ms"},"msg":"","time":"2017-09-29T02:08:19.868Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"10620b70-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/public/ghost-sdk.min.js?v=b5301c75d8","method":"GET","originalUrl":"/public/ghost-sdk.min.js?v=b5301c75d8","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"application/javascript, */*;q=0.8","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-none-match":"\"30c3227170bdaa36ca322470e2b77a33\""},"body":{},"query":{"v":"b5301c75d8"}},"res":{"_headers":{"x-powered-by":"Express","content-type":"application/javascript","content-length":765,"etag":"\"30c3227170bdaa36ca322470e2b77a33\"","cache-control":"public, max-age=3600","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"0ms"},"msg":"","time":"2017-09-29T02:08:19.880Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"10640740-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/2017/09/--------.jpg","method":"GET","originalUrl":"/content/images/2017/09/--------.jpg","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"image/png, image/svg+xml, image/jxr, image/*;q=0.8, */*;q=0.5","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 13:33:23 GMT","if-none-match":"W/\"e957-15ec8b11b2b\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 13:33:23 GMT","etag":"W/\"e957-15ec8b11b2b\""},"statusCode":304,"responseTime":"1ms"},"msg":"","time":"2017-09-29T02:08:19.894Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"10647c70-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/2017/09/-------.jpg","method":"GET","originalUrl":"/content/images/2017/09/-------.jpg","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"image/png, image/svg+xml, image/jxr, image/*;q=0.8, */*;q=0.5","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 13:34:45 GMT","if-none-match":"W/\"d3bc-15ec8b2597a\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 13:34:45 GMT","etag":"W/\"d3bc-15ec8b2597a\""},"statusCode":304,"responseTime":"0ms"},"msg":"","time":"2017-09-29T02:08:19.896Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"106825f0-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/2017/09/ghost.png","method":"GET","originalUrl":"/content/images/2017/09/ghost.png","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"image/png, image/svg+xml, image/jxr, image/*;q=0.8, */*;q=0.5","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 15:17:51 GMT","if-none-match":"W/\"37a86-15ec910bf89\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 15:17:51 GMT","etag":"W/\"37a86-15ec910bf89\""},"statusCode":304,"responseTime":"1ms"},"msg":"","time":"2017-09-29T02:08:19.921Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"10687410-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/2017/09/---.jpg","method":"GET","originalUrl":"/content/images/2017/09/---.jpg","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"image/png, image/svg+xml, image/jxr, image/*;q=0.8, */*;q=0.5","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 08:33:32 GMT","if-none-match":"W/\"545b-15ec79e95e4\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 08:33:32 GMT","etag":"W/\"545b-15ec79e95e4\""},"statusCode":304,"responseTime":"0ms"},"msg":"","time":"2017-09-29T02:08:19.922Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"10860e30-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/assets/js/jquery.fitvids.js?v=b5301c75d8","method":"GET","originalUrl":"/assets/js/jquery.fitvids.js?v=b5301c75d8","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"application/javascript, */*;q=0.8","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 07:32:48 GMT","if-none-match":"W/\"d76-15ec766fb30\""},"body":{},"query":{"v":"b5301c75d8"}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 07:32:48 GMT","etag":"W/\"d76-15ec766fb30\""},"statusCode":304,"responseTime":"1ms"},"msg":"","time":"2017-09-29T02:08:20.117Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"26469910-a4bb-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/posts/59ccf296a744810195a3dc03/?include=tags","method":"PUT","originalUrl":"/ghost/api/v0.1/posts/59ccf296a744810195a3dc03/?include=tags","params":{"id":"59ccf296a744810195a3dc03"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","content-length":"18532","origin":"http://47.95.197.107","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"1.9","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{"posts":{"0":{"id":"59ccf296a744810195a3dc03","created_at":"2017-09-28T13:01:10.000Z","created_by":"1","featured":false,"feature_image":"/content/images/2017/09/ghost.png","codeinjection_foot":"","codeinjection_head":"","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\\n什么是ghost？\\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\\n但是这并不影响我们搭建ghost服务器。吼吼吼~\\n\\n# 搭建准备\\n在[**阿里云**](https://www.aliyun.com/)上购买了一年的ECS服务器，配置如下:\\nCPU 1核；\\n内存 2G；\\n带宽 1Mbps；\\n硬盘 40G。\\n系统 CentOS 7.3 64位\\n\\n# 云服务器配置\\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\\n> 云服务器ECS——网络和安全——安全组——配置规则\\n![--------](/content/images/2017/09/--------.jpg)\\n![-------](/content/images/2017/09/-------.jpg)\\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\\n这里的设置主要是参考了[**阿里云的官方帮助文档**](https://help.aliyun.com/knowledge_detail/34403.html)。\\n# 安装ghost\\n\\n## 需要用到的东西\\n\\n* 一个完成A记录解析设置的域名（建议做好ICP备案）；（可选）\\n* 使用 [**MySQL**](https://www.mysql.com/) 做数据库服务；\\n* 使用 [**Nginx**](https://nginx.org/) 做网页服务器（Ghost的代理服务）；\\n* 使用 [**NodeJS**](https://nodejs.org/) 做后端服务；\\n* [**Ghost**](https://ghost.org/)一个开源的博客系统；\\n\\n## 基础设置\\n\\n### 查看一下系统信息：\\n\\n```\\ncat /etc/redhat-release  \\n```\\n> #>>> CentOS Linux release 7.3.1611 (Core)\\n\\n\\n### 更新一下系统，安装一些基础工具：\\n\\n阿里云的centos已经优化了yum的源，你也可以自行修改\\n```\\nyum update -y && yum upgrage -y && yum clean all\\n```\\ncurl, wget都是方便后边的下载\\nvim作为一个老牌Linux文本编辑工具，你值得拥有\\n```\\nyum install curl wget vim -y\\n```\\n\\n### 更新全系统的vim配置\\n```\\ncurl https://raw.githubusercontent.com/tonyc726/vim-for-server/master/vimrc > /etc/vimrc  \\n```\\n\\n## MySQL安装设置\\n由于CentOS7已经不带Mysql数据库了（默认的数据库是MariaDB，Mysql的一个分支），所以需要先安裝MySQL Repository（具体的版本号，可以参考 https://dev.mysql.com/downloads/repo/yum/）:\\n\\n### 安裝 MySQL Repository\\n```\\nrpm -Uvh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\\n```\\n### 安装MySQL数据库的服务器社区稳定版\\n```\\nyum install mysql-community-server -y\\n```\\n### 启动MySQL服务\\n```\\nsystemctl start mysqld.service\\n```\\n### 设置随系统自启动\\n```\\nsystemctl enable mysqld.service  \\n```\\n### 初始化设置\\n```\\nmysql_secure_installation\\n```\\n由于MySQL5.7默认会初始化Root用户的密码，所以在执行之前需要获取这个初始密码：\\n（本次设置中并没有执行如下操作，应为默认安装后第一次运行时不需密码，在初始化过程中会提示设置密码）\\n```\\ngrep \\\"password\\\" /var/log/mysqld.log  \\n```\\n\\n\\n### 创建Ghost需要的用户及数据库：\\n\\n运行以后输入刚才拿到的密码\\n```\\nmysql -uroot -p \\n```\\n添加新数据库blog，后面Ghost会用到\\n```\\nCREATE DATABASE blog;\\n```\\n添加新用户ghost（password替换为你需要的密码）\\n```\\nCREATE USER ghost IDENTIFIED BY 'password';\\n```\\n授予ghost用户在blog数据库上的所有权限\\n（password就是你刚才创建ghost账户时设置的密码）\\n```\\nGRANT ALL PRIVILEGES ON blog.* TO 'ghost'@'localhost' IDENTIFIED BY 'password';\\n```\\n刷新权限\\n（当执行过GRANT，CREATE USER，REVOKE命令之后，必须要执行刷新权限才能生效）\\n```\\nFLUSH PRIVILEGES;\\n```\\nCtrl+D 退出\\n\\n好了，以上就是MySQL部分\\n\\n## NodeJS安装设置\\n\\n推荐使用以下方式安装NodeJS\\n本系统使用V6稳定版，如需其它版本，你可以自行调整\\n```\\ncurl -sL https://rpm.nodesource.com/setup_6.x | sudo -E bash -  \\n```\\n### 安装NodeJS及其依赖包\\nyum install gcc-c++ make nodejs -y\\n\\nNodeJS安装以后，默认已经自带的NPM\\n不过npm之前一直被吐槽，建议***升级最新版或者用yarn代替***\\n### 升级npm至最新版本(^v5.0.4)\\n```\\nnpm install npm@latest -g\\n```\\n### 安装yarn代替（推荐）\\n```\\ncurl --silent --location https://rpm.nodesource.com/setup_6.x | bash -  \\nyum install yarn -y\\n```\\n\\n### 测试一下\\n```\\nnode -v\\n```\\n\\n> v6.11.0\\n```\\nnpm -v\\n```\\n> v5.1.0\\n```\\nyarn -v\\n```\\n> v0.27.5\\n\\n这里有个坑，如果直接使用yum install nodejs -y也是可以安装NodeJS的，不过nodesource维护的更加好，而且可以升级npm。\\n\\n如果你已经看到了最后输出的信息，那么久代表NodeJS已经就绪了。\\n## Nginx安装配置\\n\\n### 直接安装即可\\n```\\nyum install nginx -y\\n```\\n### 立即启动\\n```\\nsystemctl start nginx\\n```\\n### 设置开机自启动\\n```\\nsystemctl enable nginx  \\n```\\n\\n现在，打开你的浏览器，输入你的公网IP，不出意外，你就已经可以看到一个Nginx的欢迎页面了。\\n\\n不过，出于后期的扩展或者安全性考虑，我们需要为系统创建一个名为www的用户，专门用于管理网站.\\n\\n### 反向代理80端口\\n\\n众所周知，网站基本都以 80 端口作为默认端口（除非你不想让别人访问你的网站），也就是说：访问域名或服务器 IP 地址，实际上是在访问该服务器的 80 端口。而 Ghost 博客默认运行在 2368 端口上。\\n\\n为了输入域名或服务器 IP 地址就可以访问到你的 Ghost 博客，需要将访问 80 端口的请求，反向代理到 Ghost 的 2368 端口上。\\n\\n进入 Nginx 配置目录：\\n    ```\\n    cd /etc/nginx/conf.d\\n    ```\\n新建 Ghost 博客的 Nginx 配置文件：\\n```\\nvim ghost.conf\\n```\\n按 i 输入以下内容：\\n\\n> server {  \\n>     listen 80;\\n>     server_name loyalsoldier.me //修改为域名或服务器 IP 地址;\\n>     gzip on;\\n>     gzip_types text/plain application/xml text/css application/javascript application/json application/font-woff application/font-woff2 application/vnd.ms-fontobject application/x-font-ttf font/opentype application/pdf image/png image/bmp image/gif image/jpeg image/webp image/svg+xml;\\n>     gzip_proxied no-cache no-store private expired auth;\\n>     gzip_vary on;\\n>     gzip_min_length 1024;\\n>     location / {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>     }\\n>     location ~* .*\\\\.(jpg|jpeg|bmp|png|gif|ico|js|css|eot|woff|woff2|svg|ttf|otf)$ {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>         add_header Cache-Control max-age=2592000;\\n>         expires    30d;\\n>         etag       on;\\n>     }\\n> }\\n\\n按 ESC 键结束编辑，输入 :wq 保存文件并退出编辑\\n使用 nginx -t 测试 Nginx 配置文件是否语法正确：\\n\\n```\\nsudo nginx -t\\n```\\n若输出的结果有 ok、successful 等字样，表示配置正确\\n\\n如果正确的话，重启Nginx服务\\n```\\nsystemctl restart nginx.service  \\n```\\n\\n\\n## 添加新用户\\n创建一个名为www的用户组\\n```\\nadduser www\\n```\\n\\n### 设置密码(请记录下你的密码，以后需要用到)\\n```\\npasswd www\\n```\\n\\n### 分配Root权限 - 让我们新创建的www用户拥有Root用户的权限\\n```\\ngpasswd -a www wheel\\n```\\n### 将nginx用户添加入www的用户组，方便后期的权限控制\\n```\\nusermod -a -G nginx,www nginx  \\n```\\n\\n## 安装ghost\\n以上就是Ghost需要用到的基础系统了，下面就来安装Ghost，新开一个Terminal窗口，用**www**账户登录：\\n```\\nssh www@xxx.xxx.xxx.xxx  \\n```\\n然后下载Ghost最新的代码。\\n\\n### 下载Ghost最新的稳定版\\n```\\ncurl -L https://ghost.org/zip/ghost-latest.zip -o ghost.zip\\n```\\n### 解压\\n```\\nunzip -uo ghost.zip -d ghost\\n```\\n### 进入Ghost的目录并安装生产环境的依赖\\n```\\ncd ghost && npm install --production\\n```\\nnpm install --production这个命令可能需要执行多次，也是由于国内网络的原因，导致下载速度很慢，每次都下载不完全，需要多次执行，直到成功安装完成。\\n### 修改Ghost的config，修改数据库配置\\n```\\nvim config.js  \\n```\\n完整的config.js配置如下：\\n\\n> var path = require('path'),  \\n>     config;\\n> \\n> config = {  \\n>     production: {\\n>         url: 'https://www.xxxx.xxx',（换成服务器ip或者申请的域名）\\n>         mail: {},\\n>         database: {\\n>             client: 'mysql',（前面安装的mysql数据库，这里一定要对应）\\n>             connection: {\\n>                 host     : '127.0.0.1',\\n>                 user     : 'ghost', //用户名\\n>                 password : 'password', //ghost的密码，之前设置的\\n>                 database : 'blog', //数据库名\\n>                 charset  : 'utf8'\\n>             },\\n>             debug: false\\n>         },\\n>         server: {\\n>             host: '127.0.0.1',\\n>             port: '2368'\\n>         }\\n>     }\\n> };\\n> \\n> module.exports = config;  \\n\\n除了ghost安装根目录下的这个配置文件，还要检查一下/ghost/core/server/config下面的相应的配置文件，将相应的项更改正确，端口由于使用反向代理，因此不要更改，主要看一下url和database下面相应的设置。\\n\\n### 安装knex-migrator\\n实际上这个时候用生产模式运行ghost会报错，提示没有安装knex-migrator。\\n安装之前需要先编辑ghost安装文件夹下的***MigrtorConfig.js***文件。\\n\\n\\n使用vim编写MigrtorConfig.js文件\\n\\n```\\nvim MigrtorConfig.js\\n```\\n\\n\\n> module.exports = {\\n>     database: {\\n>         client: 'mysql',\\n>         connection: {\\n>             host: '127.0.0.1',\\n>             user: 'ghost',（之前mysql设置时建立的用户名）\\n>             password: 'password',（改成mysql的ghost用户密码）\\n>             charset: 'utf8',\\n>             name: 'blog'（之前mysql设置时建立的数据库）\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version',\\n>  /**\\n>     subfolder: 'upgrades'  [default: versions]\\n>     （这一部分在执行时总出问题，就注释掉了）\\n>  */\\n> }\\n> （下面应该是数据库使用sqlite3时的设置，由于本方案使用的mysql，所以可以不用写进去）\\n> module.exports = {\\n>     database: {\\n>         client: 'sqlite3',\\n>         connection: {\\n>             filename: 'path/to/your.db'\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version'\\n> }\\n> \\n\\n使用下面指令安装：\\n```\\nnpm install -g knex-migrator\\n```\\n\\n由于国内网络的原因，这个命令也可能需要执行多次才能安装完，中间会提示校验错误，这个应该是下载没有完成，而网络链接断开了的原因，再执行一次就行，直到最后完成安装。\\n\\n\\n运行一下：\\n```\\nnpm start --production\\n```\\n如果看到下面的提示，证明你已经完成80%了：\\n\\n\\n> Ghost is running in production...  \\n> Your blog is now available on https://www.itony.net  \\n> Ctrl+C to shut down  \\n\\n### 问题及解决方案\\n\\n#### 权限问题\\n在执行npm start --production的时候，遇到npm权限的问题，提示没有node_modules文件夹的写权限，这个时候使用sudo命令进行安装时又提示别的错误，最终采用\\nnpmjs.com网站中的[解决方法2](https://docs.npmjs.com/getting-started/fixing-npm-permissions)。\\n首先检查npm的路径：\\n```\\nnpm config get prefix\\n```\\n发现是/usr\\n然后改变npm的默认路径：\\n1.为全局安装路径建立文件夹：（操作均在www用户下完成）\\n```\\nmkdir ~/.npm-global\\n```\\n2.设置默认路径：\\n```\\nnpm config set prefix '~/.npm-global'\\n```\\n3.加入用户PATH：\\n打开用户家目录下面的profile文件，这里是.bash_profile，加入下面的语句：\\n```\\nexport PATH=~/.npm-global/bin:$PATH\\n```\\n4.更新profile文件\\n```\\nsource ~/.bash_profile\\n```\\n**检验**：全局下载文件包，**不要用sudo**，也可以省去检测\\n``` \\nnpm install -g jshint\\n```\\n也可以使用下面更改环境变量的方式代替2-4步：（如果不想更改profile文件的话）\\n```\\nNPM_CONFIG_PREFIX=~/.npm-global\\n```\\n#### 语法错误问题\\n> Syntax error: Unexpected token\\n出现上面的语句就要检查一下相应的配置文件的语法是否有错误。\\n## 全局安装PM2\\n目前你是开着远程连接到你的服务器，一旦你把窗口关闭了，那么你刚才起的npm start --production可就悲剧了，如何避免呢，这时候我们就需要一个能帮我们在后台稳定运行node服务的工具了，目前比较火热的要数PM2了：\\n\\n``\\nyarn global add pm2 --prefix /usr/local\\n``\\n### 用PM2来启动Ghost的node服务\\n先切到ghost的目录，然后再运行\\n```\\nNODE_ENV=production pm2 start index.js --name \\\"blog\\\"\\n```\\n### 检查运行结果\\n```\\npm2 show blog  \\n```\\n\"}]],\"sections\":[[10,0]]}","page":false,"plaintext":"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\n什么是ghost？\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\n但是这并不影响我们搭建ghost服务器。吼吼吼~\n\n搭建准备\n在阿里云 [https://www.aliyun.com/]上购买了一年的ECS服务器，配置如下:\nCPU 1核；\n内存 2G；\n带宽 1Mbps；\n硬盘 40G。\n系统 CentOS 7.3 64位\n\n云服务器配置\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\n\n云服务器ECS——网络和安全——安全组——配置规则\n\n\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\n这里的设置主要是参考了阿里云的官方帮助文档 [https://help.aliyun.com/knowledge_detail/34403.html]。","published_at":"2017-09-28T13:41:32.000Z","slug":"shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost","status":"published","title":"搭建Ghost服务器","updated_at":"2017-09-29T02:08:18.000Z","updated_by":"1","tags":{"0":{"id":"59ccb425a744810195a3dc01","name":"技术","slug":"ji-zhu","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T08:34:45.000Z","updated_at":"2017-09-28T08:34:45.000Z","created_by":"1","updated_by":"1"},"1":{"id":"59cd12bfa744810195a3dc06","name":"博客","slug":"bo-ke","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T15:18:23.000Z","updated_at":"2017-09-28T15:18:23.000Z","created_by":"1","updated_by":"1"}},"author_id":"1"}}},"query":{"include":"tags"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"http://47.95.197.107","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/*","content-type":"application/json; charset=utf-8","etag":"W/\"4987-Y2mJuWaHTNe1dmpTjCgWYNOaOQ4\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"64ms"},"msg":"","time":"2017-09-29T02:08:56.677Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"2739f9c0-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","method":"GET","originalUrl":"/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","params":{"0":"/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"text/html, application/xhtml+xml, image/jxr, */*","referer":"http://47.95.197.107/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-none-match":"W/\"8869-KMDPxN5f91jZu/+Ry4oZqoFH+ec\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"8849-ZEQ8Y0RgoB/cylmEkPVNis+Ves8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"46ms"},"msg":"","time":"2017-09-29T02:08:58.251Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"27432180-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/assets/built/screen.css?v=b5301c75d8","method":"GET","originalUrl":"/assets/built/screen.css?v=b5301c75d8","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"text/css, */*","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 07:32:48 GMT","if-none-match":"W/\"759e-15ec766fb30\""},"body":{},"query":{"v":"b5301c75d8"}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 07:32:48 GMT","etag":"W/\"759e-15ec766fb30\""},"statusCode":304,"responseTime":"1ms"},"msg":"","time":"2017-09-29T02:08:58.266Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"2744cf30-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/public/ghost-sdk.min.js?v=b5301c75d8","method":"GET","originalUrl":"/public/ghost-sdk.min.js?v=b5301c75d8","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"application/javascript, */*;q=0.8","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-none-match":"\"30c3227170bdaa36ca322470e2b77a33\""},"body":{},"query":{"v":"b5301c75d8"}},"res":{"_headers":{"x-powered-by":"Express","content-type":"application/javascript","content-length":765,"etag":"\"30c3227170bdaa36ca322470e2b77a33\"","cache-control":"public, max-age=3600","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"1ms"},"msg":"","time":"2017-09-29T02:08:58.277Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"27471920-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/2017/09/--------.jpg","method":"GET","originalUrl":"/content/images/2017/09/--------.jpg","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"image/png, image/svg+xml, image/jxr, image/*;q=0.8, */*;q=0.5","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 13:33:23 GMT","if-none-match":"W/\"e957-15ec8b11b2b\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 13:33:23 GMT","etag":"W/\"e957-15ec8b11b2b\""},"statusCode":304,"responseTime":"0ms"},"msg":"","time":"2017-09-29T02:08:58.291Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"27474030-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/2017/09/-------.jpg","method":"GET","originalUrl":"/content/images/2017/09/-------.jpg","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"image/png, image/svg+xml, image/jxr, image/*;q=0.8, */*;q=0.5","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 13:34:45 GMT","if-none-match":"W/\"d3bc-15ec8b2597a\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 13:34:45 GMT","etag":"W/\"d3bc-15ec8b2597a\""},"statusCode":304,"responseTime":"1ms"},"msg":"","time":"2017-09-29T02:08:58.292Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"274b85f0-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/2017/09/ghost.png","method":"GET","originalUrl":"/content/images/2017/09/ghost.png","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"image/png, image/svg+xml, image/jxr, image/*;q=0.8, */*;q=0.5","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 15:17:51 GMT","if-none-match":"W/\"37a86-15ec910bf89\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 15:17:51 GMT","etag":"W/\"37a86-15ec910bf89\""},"statusCode":304,"responseTime":"0ms"},"msg":"","time":"2017-09-29T02:08:58.320Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"274bad00-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/2017/09/---.jpg","method":"GET","originalUrl":"/content/images/2017/09/---.jpg","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"image/png, image/svg+xml, image/jxr, image/*;q=0.8, */*;q=0.5","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 08:33:32 GMT","if-none-match":"W/\"545b-15ec79e95e4\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 08:33:32 GMT","etag":"W/\"545b-15ec79e95e4\""},"statusCode":304,"responseTime":"4ms"},"msg":"","time":"2017-09-29T02:08:58.325Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"27696e30-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/assets/js/jquery.fitvids.js?v=b5301c75d8","method":"GET","originalUrl":"/assets/js/jquery.fitvids.js?v=b5301c75d8","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"application/javascript, */*;q=0.8","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 07:32:48 GMT","if-none-match":"W/\"d76-15ec766fb30\""},"body":{},"query":{"v":"b5301c75d8"}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 07:32:48 GMT","etag":"W/\"d76-15ec766fb30\""},"statusCode":304,"responseTime":"1ms"},"msg":"","time":"2017-09-29T02:08:58.519Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"37304780-a4bb-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/posts/59ccf296a744810195a3dc03/?include=tags","method":"PUT","originalUrl":"/ghost/api/v0.1/posts/59ccf296a744810195a3dc03/?include=tags","params":{"id":"59ccf296a744810195a3dc03"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","content-length":"18530","origin":"http://47.95.197.107","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"1.9","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{"posts":{"0":{"id":"59ccf296a744810195a3dc03","created_at":"2017-09-28T13:01:10.000Z","created_by":"1","featured":false,"feature_image":"/content/images/2017/09/ghost.png","codeinjection_foot":"","codeinjection_head":"","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\\n什么是ghost？\\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\\n但是这并不影响我们搭建ghost服务器。吼吼吼~\\n\\n# 搭建准备\\n在[**阿里云**](https://www.aliyun.com/)上购买了一年的ECS服务器，配置如下:\\nCPU 1核；\\n内存 2G；\\n带宽 1Mbps；\\n硬盘 40G。\\n系统 CentOS 7.3 64位\\n\\n# 云服务器配置\\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\\n> 云服务器ECS——网络和安全——安全组——配置规则\\n![--------](/content/images/2017/09/--------.jpg)\\n![-------](/content/images/2017/09/-------.jpg)\\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\\n这里的设置主要是参考了[**阿里云的官方帮助文档**](https://help.aliyun.com/knowledge_detail/34403.html)。\\n# 安装ghost\\n\\n## 需要用到的东西\\n\\n* 一个完成A记录解析设置的域名（建议做好ICP备案）；（可选）\\n* 使用 [**MySQL**](https://www.mysql.com/) 做数据库服务；\\n* 使用 [**Nginx**](https://nginx.org/) 做网页服务器（Ghost的代理服务）；\\n* 使用 [**NodeJS**](https://nodejs.org/) 做后端服务；\\n* [**Ghost**](https://ghost.org/)一个开源的博客系统；\\n\\n## 基础设置\\n\\n### 查看一下系统信息：\\n\\n```\\ncat /etc/redhat-release  \\n```\\n> #>>> CentOS Linux release 7.3.1611 (Core)\\n\\n\\n### 更新一下系统，安装一些基础工具：\\n\\n阿里云的centos已经优化了yum的源，你也可以自行修改\\n```\\nyum update -y && yum upgrage -y && yum clean all\\n```\\ncurl, wget都是方便后边的下载\\nvim作为一个老牌Linux文本编辑工具，你值得拥有\\n```\\nyum install curl wget vim -y\\n```\\n\\n### 更新全系统的vim配置\\n```\\ncurl https://raw.githubusercontent.com/tonyc726/vim-for-server/master/vimrc > /etc/vimrc  \\n```\\n\\n## MySQL安装设置\\n由于CentOS7已经不带Mysql数据库了（默认的数据库是MariaDB，Mysql的一个分支），所以需要先安裝MySQL Repository（具体的版本号，可以参考 https://dev.mysql.com/downloads/repo/yum/）:\\n\\n### 安裝 MySQL Repository\\n```\\nrpm -Uvh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\\n```\\n### 安装MySQL数据库的服务器社区稳定版\\n```\\nyum install mysql-community-server -y\\n```\\n### 启动MySQL服务\\n```\\nsystemctl start mysqld.service\\n```\\n### 设置随系统自启动\\n```\\nsystemctl enable mysqld.service  \\n```\\n### 初始化设置\\n```\\nmysql_secure_installation\\n```\\n由于MySQL5.7默认会初始化Root用户的密码，所以在执行之前需要获取这个初始密码：\\n（本次设置中并没有执行如下操作，应为默认安装后第一次运行时不需密码，在初始化过程中会提示设置密码）\\n```\\ngrep \\\"password\\\" /var/log/mysqld.log  \\n```\\n\\n\\n### 创建Ghost需要的用户及数据库：\\n\\n运行以后输入刚才拿到的密码\\n```\\nmysql -uroot -p \\n```\\n添加新数据库blog，后面Ghost会用到\\n```\\nCREATE DATABASE blog;\\n```\\n添加新用户ghost（password替换为你需要的密码）\\n```\\nCREATE USER ghost IDENTIFIED BY 'password';\\n```\\n授予ghost用户在blog数据库上的所有权限\\n（password就是你刚才创建ghost账户时设置的密码）\\n```\\nGRANT ALL PRIVILEGES ON blog.* TO 'ghost'@'localhost' IDENTIFIED BY 'password';\\n```\\n刷新权限\\n（当执行过GRANT，CREATE USER，REVOKE命令之后，必须要执行刷新权限才能生效）\\n```\\nFLUSH PRIVILEGES;\\n```\\nCtrl+D 退出\\n\\n好了，以上就是MySQL部分\\n\\n## NodeJS安装设置\\n\\n推荐使用以下方式安装NodeJS\\n本系统使用V6稳定版，如需其它版本，你可以自行调整\\n```\\ncurl -sL https://rpm.nodesource.com/setup_6.x | sudo -E bash -  \\n```\\n### 安装NodeJS及其依赖包\\nyum install gcc-c++ make nodejs -y\\n\\nNodeJS安装以后，默认已经自带的NPM\\n不过npm之前一直被吐槽，建议***升级最新版或者用yarn代替***\\n### 升级npm至最新版本(^v5.0.4)\\n```\\nnpm install npm@latest -g\\n```\\n### 安装yarn代替（推荐）\\n```\\ncurl --silent --location https://rpm.nodesource.com/setup_6.x | bash -  \\nyum install yarn -y\\n```\\n\\n### 测试一下\\n```\\nnode -v\\n```\\n\\n> v6.11.0\\n```\\nnpm -v\\n```\\n> v5.1.0\\n```\\nyarn -v\\n```\\n> v0.27.5\\n\\n这里有个坑，如果直接使用yum install nodejs -y也是可以安装NodeJS的，不过nodesource维护的更加好，而且可以升级npm。\\n\\n如果你已经看到了最后输出的信息，那么久代表NodeJS已经就绪了。\\n## Nginx安装配置\\n\\n### 直接安装即可\\n```\\nyum install nginx -y\\n```\\n### 立即启动\\n```\\nsystemctl start nginx\\n```\\n### 设置开机自启动\\n```\\nsystemctl enable nginx  \\n```\\n\\n现在，打开你的浏览器，输入你的公网IP，不出意外，你就已经可以看到一个Nginx的欢迎页面了。\\n\\n不过，出于后期的扩展或者安全性考虑，我们需要为系统创建一个名为www的用户，专门用于管理网站.\\n\\n### 反向代理80端口\\n\\n众所周知，网站基本都以 80 端口作为默认端口（除非你不想让别人访问你的网站），也就是说：访问域名或服务器 IP 地址，实际上是在访问该服务器的 80 端口。而 Ghost 博客默认运行在 2368 端口上。\\n\\n为了输入域名或服务器 IP 地址就可以访问到你的 Ghost 博客，需要将访问 80 端口的请求，反向代理到 Ghost 的 2368 端口上。\\n\\n进入 Nginx 配置目录：\\n    ```\\n    cd /etc/nginx/conf.d\\n    ```\\n新建 Ghost 博客的 Nginx 配置文件：\\n```\\nvim ghost.conf\\n```\\n按 i 输入以下内容：\\n\\n> server {  \\n>     listen 80;\\n>     server_name loyalsoldier.me //修改为域名或服务器 IP 地址;\\n>     gzip on;\\n>     gzip_types text/plain application/xml text/css application/javascript application/json application/font-woff application/font-woff2 application/vnd.ms-fontobject application/x-font-ttf font/opentype application/pdf image/png image/bmp image/gif image/jpeg image/webp image/svg+xml;\\n>     gzip_proxied no-cache no-store private expired auth;\\n>     gzip_vary on;\\n>     gzip_min_length 1024;\\n>     location / {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>     }\\n>     location ~* .*\\\\.(jpg|jpeg|bmp|png|gif|ico|js|css|eot|woff|woff2|svg|ttf|otf)$ {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>         add_header Cache-Control max-age=2592000;\\n>         expires    30d;\\n>         etag       on;\\n>     }\\n> }\\n\\n按 ESC 键结束编辑，输入 :wq 保存文件并退出编辑\\n使用 nginx -t 测试 Nginx 配置文件是否语法正确：\\n\\n```\\nsudo nginx -t\\n```\\n若输出的结果有 ok、successful 等字样，表示配置正确\\n\\n如果正确的话，重启Nginx服务\\n```\\nsystemctl restart nginx.service  \\n```\\n\\n\\n## 添加新用户\\n创建一个名为www的用户组\\n```\\nadduser www\\n```\\n\\n### 设置密码(请记录下你的密码，以后需要用到)\\n```\\npasswd www\\n```\\n\\n### 分配Root权限 - 让我们新创建的www用户拥有Root用户的权限\\n```\\ngpasswd -a www wheel\\n```\\n### 将nginx用户添加入www的用户组，方便后期的权限控制\\n```\\nusermod -a -G nginx,www nginx  \\n```\\n\\n## 安装ghost\\n以上就是Ghost需要用到的基础系统了，下面就来安装Ghost，新开一个Terminal窗口，用**www**账户登录：\\n```\\nssh www@xxx.xxx.xxx.xxx  \\n```\\n然后下载Ghost最新的代码。\\n\\n### 下载Ghost最新的稳定版\\n```\\ncurl -L https://ghost.org/zip/ghost-latest.zip -o ghost.zip\\n```\\n### 解压\\n```\\nunzip -uo ghost.zip -d ghost\\n```\\n### 进入Ghost的目录并安装生产环境的依赖\\n```\\ncd ghost && npm install --production\\n```\\nnpm install --production这个命令可能需要执行多次，也是由于国内网络的原因，导致下载速度很慢，每次都下载不完全，需要多次执行，直到成功安装完成。\\n### 修改Ghost的config，修改数据库配置\\n```\\nvim config.js  \\n```\\n完整的config.js配置如下：\\n\\n> var path = require('path'),  \\n>     config;\\n> \\n> config = {  \\n>     production: {\\n>         url: 'https://www.xxxx.xxx',（换成服务器ip或者申请的域名）\\n>         mail: {},\\n>         database: {\\n>             client: 'mysql',（前面安装的mysql数据库，这里一定要对应）\\n>             connection: {\\n>                 host     : '127.0.0.1',\\n>                 user     : 'ghost', //用户名\\n>                 password : 'password', //ghost的密码，之前设置的\\n>                 database : 'blog', //数据库名\\n>                 charset  : 'utf8'\\n>             },\\n>             debug: false\\n>         },\\n>         server: {\\n>             host: '127.0.0.1',\\n>             port: '2368'\\n>         }\\n>     }\\n> };\\n> \\n> module.exports = config;  \\n\\n除了ghost安装根目录下的这个配置文件，还要检查一下/ghost/core/server/config下面的相应的配置文件，将相应的项更改正确，端口由于使用反向代理，因此不要更改，主要看一下url和database下面相应的设置。\\n\\n### 安装knex-migrator\\n实际上这个时候用生产模式运行ghost会报错，提示没有安装knex-migrator。\\n安装之前需要先编辑ghost安装文件夹下的***MigrtorConfig.js***文件。\\n\\n\\n使用vim编写MigrtorConfig.js文件\\n\\n```\\nvim MigrtorConfig.js\\n```\\n\\n\\n> module.exports = {\\n>     database: {\\n>         client: 'mysql',\\n>         connection: {\\n>             host: '127.0.0.1',\\n>             user: 'ghost',（之前mysql设置时建立的用户名）\\n>             password: 'password',（改成mysql的ghost用户密码）\\n>             charset: 'utf8',\\n>             name: 'blog'（之前mysql设置时建立的数据库）\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version',\\n>  /**\\n>     subfolder: 'upgrades'  [default: versions]\\n>     （这一部分在执行时总出问题，就注释掉了）\\n>  */\\n> }\\n（下面应该是数据库使用sqlite3时的设置，由于本方案使用的mysql，所以可以不用写进去）\\n> module.exports = {\\n>     database: {\\n>         client: 'sqlite3',\\n>         connection: {\\n>             filename: 'path/to/your.db'\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version'\\n> }\\n> \\n\\n使用下面指令安装：\\n```\\nnpm install -g knex-migrator\\n```\\n\\n由于国内网络的原因，这个命令也可能需要执行多次才能安装完，中间会提示校验错误，这个应该是下载没有完成，而网络链接断开了的原因，再执行一次就行，直到最后完成安装。\\n\\n\\n运行一下：\\n```\\nnpm start --production\\n```\\n如果看到下面的提示，证明你已经完成80%了：\\n\\n\\n> Ghost is running in production...  \\n> Your blog is now available on https://www.itony.net  \\n> Ctrl+C to shut down  \\n\\n### 问题及解决方案\\n\\n#### 权限问题\\n在执行npm start --production的时候，遇到npm权限的问题，提示没有node_modules文件夹的写权限，这个时候使用sudo命令进行安装时又提示别的错误，最终采用\\nnpmjs.com网站中的[解决方法2](https://docs.npmjs.com/getting-started/fixing-npm-permissions)。\\n首先检查npm的路径：\\n```\\nnpm config get prefix\\n```\\n发现是/usr\\n然后改变npm的默认路径：\\n1.为全局安装路径建立文件夹：（操作均在www用户下完成）\\n```\\nmkdir ~/.npm-global\\n```\\n2.设置默认路径：\\n```\\nnpm config set prefix '~/.npm-global'\\n```\\n3.加入用户PATH：\\n打开用户家目录下面的profile文件，这里是.bash_profile，加入下面的语句：\\n```\\nexport PATH=~/.npm-global/bin:$PATH\\n```\\n4.更新profile文件\\n```\\nsource ~/.bash_profile\\n```\\n**检验**：全局下载文件包，**不要用sudo**，也可以省去检测\\n``` \\nnpm install -g jshint\\n```\\n也可以使用下面更改环境变量的方式代替2-4步：（如果不想更改profile文件的话）\\n```\\nNPM_CONFIG_PREFIX=~/.npm-global\\n```\\n#### 语法错误问题\\n> Syntax error: Unexpected token\\n出现上面的语句就要检查一下相应的配置文件的语法是否有错误。\\n## 全局安装PM2\\n目前你是开着远程连接到你的服务器，一旦你把窗口关闭了，那么你刚才起的npm start --production可就悲剧了，如何避免呢，这时候我们就需要一个能帮我们在后台稳定运行node服务的工具了，目前比较火热的要数PM2了：\\n\\n``\\nyarn global add pm2 --prefix /usr/local\\n``\\n### 用PM2来启动Ghost的node服务\\n先切到ghost的目录，然后再运行\\n```\\nNODE_ENV=production pm2 start index.js --name \\\"blog\\\"\\n```\\n### 检查运行结果\\n```\\npm2 show blog  \\n```\\n\"}]],\"sections\":[[10,0]]}","page":false,"plaintext":"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\n什么是ghost？\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\n但是这并不影响我们搭建ghost服务器。吼吼吼~\n\n搭建准备\n在阿里云 [https://www.aliyun.com/]上购买了一年的ECS服务器，配置如下:\nCPU 1核；\n内存 2G；\n带宽 1Mbps；\n硬盘 40G。\n系统 CentOS 7.3 64位\n\n云服务器配置\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\n\n云服务器ECS——网络和安全——安全组——配置规则\n\n\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\n这里的设置主要是参考了阿里云的官方帮助文档 [https://help.aliyun.com/knowledge_detail/34403.html]。","published_at":"2017-09-28T13:41:32.000Z","slug":"shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost","status":"published","title":"搭建Ghost服务器","updated_at":"2017-09-29T02:08:56.000Z","updated_by":"1","tags":{"0":{"id":"59ccb425a744810195a3dc01","name":"技术","slug":"ji-zhu","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T08:34:45.000Z","updated_at":"2017-09-28T08:34:45.000Z","created_by":"1","updated_by":"1"},"1":{"id":"59cd12bfa744810195a3dc06","name":"博客","slug":"bo-ke","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T15:18:23.000Z","updated_at":"2017-09-28T15:18:23.000Z","created_by":"1","updated_by":"1"}},"author_id":"1"}}},"query":{"include":"tags"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"http://47.95.197.107","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/*","content-type":"application/json; charset=utf-8","etag":"W/\"4987-eNBbaM3NK3I9wcHzj5zu4Bohysg\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"46ms"},"msg":"","time":"2017-09-29T02:09:25.033Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"37f656a0-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","method":"GET","originalUrl":"/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","params":{"0":"/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"text/html, application/xhtml+xml, image/jxr, */*","referer":"http://47.95.197.107/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-none-match":"W/\"8849-ZEQ8Y0RgoB/cylmEkPVNis+Ves8\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"8849-jmFi0hqA18lu4ivnrxvbhXKK3f0\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"40ms"},"msg":"","time":"2017-09-29T02:09:26.324Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"37fe6cf0-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/assets/built/screen.css?v=b5301c75d8","method":"GET","originalUrl":"/assets/built/screen.css?v=b5301c75d8","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"text/css, */*","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 07:32:48 GMT","if-none-match":"W/\"759e-15ec766fb30\""},"body":{},"query":{"v":"b5301c75d8"}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 07:32:48 GMT","etag":"W/\"759e-15ec766fb30\""},"statusCode":304,"responseTime":"1ms"},"msg":"","time":"2017-09-29T02:09:26.336Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"38001aa0-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/public/ghost-sdk.min.js?v=b5301c75d8","method":"GET","originalUrl":"/public/ghost-sdk.min.js?v=b5301c75d8","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"application/javascript, */*;q=0.8","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-none-match":"\"30c3227170bdaa36ca322470e2b77a33\""},"body":{},"query":{"v":"b5301c75d8"}},"res":{"_headers":{"x-powered-by":"Express","content-type":"application/javascript","content-length":765,"etag":"\"30c3227170bdaa36ca322470e2b77a33\"","cache-control":"public, max-age=3600","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"0ms"},"msg":"","time":"2017-09-29T02:09:26.347Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"38026490-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/2017/09/--------.jpg","method":"GET","originalUrl":"/content/images/2017/09/--------.jpg","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"image/png, image/svg+xml, image/jxr, image/*;q=0.8, */*;q=0.5","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 13:33:23 GMT","if-none-match":"W/\"e957-15ec8b11b2b\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 13:33:23 GMT","etag":"W/\"e957-15ec8b11b2b\""},"statusCode":304,"responseTime":"1ms"},"msg":"","time":"2017-09-29T02:09:26.363Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"38028ba0-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/2017/09/-------.jpg","method":"GET","originalUrl":"/content/images/2017/09/-------.jpg","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"image/png, image/svg+xml, image/jxr, image/*;q=0.8, */*;q=0.5","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 13:34:45 GMT","if-none-match":"W/\"d3bc-15ec8b2597a\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 13:34:45 GMT","etag":"W/\"d3bc-15ec8b2597a\""},"statusCode":304,"responseTime":"1ms"},"msg":"","time":"2017-09-29T02:09:26.363Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"3806f870-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/2017/09/ghost.png","method":"GET","originalUrl":"/content/images/2017/09/ghost.png","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"image/png, image/svg+xml, image/jxr, image/*;q=0.8, */*;q=0.5","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 15:17:51 GMT","if-none-match":"W/\"37a86-15ec910bf89\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 15:17:51 GMT","etag":"W/\"37a86-15ec910bf89\""},"statusCode":304,"responseTime":"0ms"},"msg":"","time":"2017-09-29T02:09:26.392Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"38074690-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/2017/09/---.jpg","method":"GET","originalUrl":"/content/images/2017/09/---.jpg","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"image/png, image/svg+xml, image/jxr, image/*;q=0.8, */*;q=0.5","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 08:33:32 GMT","if-none-match":"W/\"545b-15ec79e95e4\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 08:33:32 GMT","etag":"W/\"545b-15ec79e95e4\""},"statusCode":304,"responseTime":"0ms"},"msg":"","time":"2017-09-29T02:09:26.394Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"38244470-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/assets/js/jquery.fitvids.js?v=b5301c75d8","method":"GET","originalUrl":"/assets/js/jquery.fitvids.js?v=b5301c75d8","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"application/javascript, */*;q=0.8","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 07:32:48 GMT","if-none-match":"W/\"d76-15ec766fb30\""},"body":{},"query":{"v":"b5301c75d8"}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 07:32:48 GMT","etag":"W/\"d76-15ec766fb30\""},"statusCode":304,"responseTime":"1ms"},"msg":"","time":"2017-09-29T02:09:26.585Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"3fff8740-a4bb-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/posts/59ccf296a744810195a3dc03/?include=tags","method":"PUT","originalUrl":"/ghost/api/v0.1/posts/59ccf296a744810195a3dc03/?include=tags","params":{"id":"59ccf296a744810195a3dc03"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","content-length":"18533","origin":"http://47.95.197.107","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"1.9","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{"posts":{"0":{"id":"59ccf296a744810195a3dc03","created_at":"2017-09-28T13:01:10.000Z","created_by":"1","featured":false,"feature_image":"/content/images/2017/09/ghost.png","codeinjection_foot":"","codeinjection_head":"","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\\n什么是ghost？\\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\\n但是这并不影响我们搭建ghost服务器。吼吼吼~\\n\\n# 搭建准备\\n在[**阿里云**](https://www.aliyun.com/)上购买了一年的ECS服务器，配置如下:\\nCPU 1核；\\n内存 2G；\\n带宽 1Mbps；\\n硬盘 40G。\\n系统 CentOS 7.3 64位\\n\\n# 云服务器配置\\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\\n> 云服务器ECS——网络和安全——安全组——配置规则\\n![--------](/content/images/2017/09/--------.jpg)\\n![-------](/content/images/2017/09/-------.jpg)\\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\\n这里的设置主要是参考了[**阿里云的官方帮助文档**](https://help.aliyun.com/knowledge_detail/34403.html)。\\n# 安装ghost\\n\\n## 需要用到的东西\\n\\n* 一个完成A记录解析设置的域名（建议做好ICP备案）；（可选）\\n* 使用 [**MySQL**](https://www.mysql.com/) 做数据库服务；\\n* 使用 [**Nginx**](https://nginx.org/) 做网页服务器（Ghost的代理服务）；\\n* 使用 [**NodeJS**](https://nodejs.org/) 做后端服务；\\n* [**Ghost**](https://ghost.org/)一个开源的博客系统；\\n\\n## 基础设置\\n\\n### 查看一下系统信息：\\n\\n```\\ncat /etc/redhat-release  \\n```\\n> #>>> CentOS Linux release 7.3.1611 (Core)\\n\\n\\n### 更新一下系统，安装一些基础工具：\\n\\n阿里云的centos已经优化了yum的源，你也可以自行修改\\n```\\nyum update -y && yum upgrage -y && yum clean all\\n```\\ncurl, wget都是方便后边的下载\\nvim作为一个老牌Linux文本编辑工具，你值得拥有\\n```\\nyum install curl wget vim -y\\n```\\n\\n### 更新全系统的vim配置\\n```\\ncurl https://raw.githubusercontent.com/tonyc726/vim-for-server/master/vimrc > /etc/vimrc  \\n```\\n\\n## MySQL安装设置\\n由于CentOS7已经不带Mysql数据库了（默认的数据库是MariaDB，Mysql的一个分支），所以需要先安裝MySQL Repository（具体的版本号，可以参考 https://dev.mysql.com/downloads/repo/yum/）:\\n\\n### 安裝 MySQL Repository\\n```\\nrpm -Uvh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\\n```\\n### 安装MySQL数据库的服务器社区稳定版\\n```\\nyum install mysql-community-server -y\\n```\\n### 启动MySQL服务\\n```\\nsystemctl start mysqld.service\\n```\\n### 设置随系统自启动\\n```\\nsystemctl enable mysqld.service  \\n```\\n### 初始化设置\\n```\\nmysql_secure_installation\\n```\\n由于MySQL5.7默认会初始化Root用户的密码，所以在执行之前需要获取这个初始密码：\\n（本次设置中并没有执行如下操作，应为默认安装后第一次运行时不需密码，在初始化过程中会提示设置密码）\\n```\\ngrep \\\"password\\\" /var/log/mysqld.log  \\n```\\n\\n\\n### 创建Ghost需要的用户及数据库：\\n\\n运行以后输入刚才拿到的密码\\n```\\nmysql -uroot -p \\n```\\n添加新数据库blog，后面Ghost会用到\\n```\\nCREATE DATABASE blog;\\n```\\n添加新用户ghost（password替换为你需要的密码）\\n```\\nCREATE USER ghost IDENTIFIED BY 'password';\\n```\\n授予ghost用户在blog数据库上的所有权限\\n（password就是你刚才创建ghost账户时设置的密码）\\n```\\nGRANT ALL PRIVILEGES ON blog.* TO 'ghost'@'localhost' IDENTIFIED BY 'password';\\n```\\n刷新权限\\n（当执行过GRANT，CREATE USER，REVOKE命令之后，必须要执行刷新权限才能生效）\\n```\\nFLUSH PRIVILEGES;\\n```\\nCtrl+D 退出\\n\\n好了，以上就是MySQL部分\\n\\n## NodeJS安装设置\\n\\n推荐使用以下方式安装NodeJS\\n本系统使用V6稳定版，如需其它版本，你可以自行调整\\n```\\ncurl -sL https://rpm.nodesource.com/setup_6.x | sudo -E bash -  \\n```\\n### 安装NodeJS及其依赖包\\nyum install gcc-c++ make nodejs -y\\n\\nNodeJS安装以后，默认已经自带的NPM\\n不过npm之前一直被吐槽，建议***升级最新版或者用yarn代替***\\n### 升级npm至最新版本(^v5.0.4)\\n```\\nnpm install npm@latest -g\\n```\\n### 安装yarn代替（推荐）\\n```\\ncurl --silent --location https://rpm.nodesource.com/setup_6.x | bash -  \\nyum install yarn -y\\n```\\n\\n### 测试一下\\n```\\nnode -v\\n```\\n\\n> v6.11.0\\n```\\nnpm -v\\n```\\n> v5.1.0\\n```\\nyarn -v\\n```\\n> v0.27.5\\n\\n这里有个坑，如果直接使用yum install nodejs -y也是可以安装NodeJS的，不过nodesource维护的更加好，而且可以升级npm。\\n\\n如果你已经看到了最后输出的信息，那么久代表NodeJS已经就绪了。\\n## Nginx安装配置\\n\\n### 直接安装即可\\n```\\nyum install nginx -y\\n```\\n### 立即启动\\n```\\nsystemctl start nginx\\n```\\n### 设置开机自启动\\n```\\nsystemctl enable nginx  \\n```\\n\\n现在，打开你的浏览器，输入你的公网IP，不出意外，你就已经可以看到一个Nginx的欢迎页面了。\\n\\n不过，出于后期的扩展或者安全性考虑，我们需要为系统创建一个名为www的用户，专门用于管理网站.\\n\\n### 反向代理80端口\\n\\n众所周知，网站基本都以 80 端口作为默认端口（除非你不想让别人访问你的网站），也就是说：访问域名或服务器 IP 地址，实际上是在访问该服务器的 80 端口。而 Ghost 博客默认运行在 2368 端口上。\\n\\n为了输入域名或服务器 IP 地址就可以访问到你的 Ghost 博客，需要将访问 80 端口的请求，反向代理到 Ghost 的 2368 端口上。\\n\\n进入 Nginx 配置目录：\\n    ```\\n    cd /etc/nginx/conf.d\\n    ```\\n新建 Ghost 博客的 Nginx 配置文件：\\n```\\nvim ghost.conf\\n```\\n按 i 输入以下内容：\\n\\n> server {  \\n>     listen 80;\\n>     server_name loyalsoldier.me //修改为域名或服务器 IP 地址;\\n>     gzip on;\\n>     gzip_types text/plain application/xml text/css application/javascript application/json application/font-woff application/font-woff2 application/vnd.ms-fontobject application/x-font-ttf font/opentype application/pdf image/png image/bmp image/gif image/jpeg image/webp image/svg+xml;\\n>     gzip_proxied no-cache no-store private expired auth;\\n>     gzip_vary on;\\n>     gzip_min_length 1024;\\n>     location / {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>     }\\n>     location ~* .*\\\\.(jpg|jpeg|bmp|png|gif|ico|js|css|eot|woff|woff2|svg|ttf|otf)$ {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>         add_header Cache-Control max-age=2592000;\\n>         expires    30d;\\n>         etag       on;\\n>     }\\n> }\\n\\n按 ESC 键结束编辑，输入 :wq 保存文件并退出编辑\\n使用 nginx -t 测试 Nginx 配置文件是否语法正确：\\n\\n```\\nsudo nginx -t\\n```\\n若输出的结果有 ok、successful 等字样，表示配置正确\\n\\n如果正确的话，重启Nginx服务\\n```\\nsystemctl restart nginx.service  \\n```\\n\\n\\n## 添加新用户\\n创建一个名为www的用户组\\n```\\nadduser www\\n```\\n\\n### 设置密码(请记录下你的密码，以后需要用到)\\n```\\npasswd www\\n```\\n\\n### 分配Root权限 - 让我们新创建的www用户拥有Root用户的权限\\n```\\ngpasswd -a www wheel\\n```\\n### 将nginx用户添加入www的用户组，方便后期的权限控制\\n```\\nusermod -a -G nginx,www nginx  \\n```\\n\\n## 安装ghost\\n以上就是Ghost需要用到的基础系统了，下面就来安装Ghost，新开一个Terminal窗口，用**www**账户登录：\\n```\\nssh www@xxx.xxx.xxx.xxx  \\n```\\n然后下载Ghost最新的代码。\\n\\n### 下载Ghost最新的稳定版\\n```\\ncurl -L https://ghost.org/zip/ghost-latest.zip -o ghost.zip\\n```\\n### 解压\\n```\\nunzip -uo ghost.zip -d ghost\\n```\\n### 进入Ghost的目录并安装生产环境的依赖\\n```\\ncd ghost && npm install --production\\n```\\nnpm install --production这个命令可能需要执行多次，也是由于国内网络的原因，导致下载速度很慢，每次都下载不完全，需要多次执行，直到成功安装完成。\\n### 修改Ghost的config，修改数据库配置\\n```\\nvim config.js  \\n```\\n完整的config.js配置如下：\\n\\n> var path = require('path'),  \\n>     config;\\n> \\n> config = {  \\n>     production: {\\n>         url: 'https://www.xxxx.xxx',（换成服务器ip或者申请的域名）\\n>         mail: {},\\n>         database: {\\n>             client: 'mysql',（前面安装的mysql数据库，这里一定要对应）\\n>             connection: {\\n>                 host     : '127.0.0.1',\\n>                 user     : 'ghost', //用户名\\n>                 password : 'password', //ghost的密码，之前设置的\\n>                 database : 'blog', //数据库名\\n>                 charset  : 'utf8'\\n>             },\\n>             debug: false\\n>         },\\n>         server: {\\n>             host: '127.0.0.1',\\n>             port: '2368'\\n>         }\\n>     }\\n> };\\n> \\n> module.exports = config;  \\n\\n除了ghost安装根目录下的这个配置文件，还要检查一下/ghost/core/server/config下面的相应的配置文件，将相应的项更改正确，端口由于使用反向代理，因此不要更改，主要看一下url和database下面相应的设置。\\n\\n### 安装knex-migrator\\n实际上这个时候用生产模式运行ghost会报错，提示没有安装knex-migrator。\\n安装之前需要先编辑ghost安装文件夹下的***MigrtorConfig.js***文件。\\n\\n\\n使用vim编写MigrtorConfig.js文件\\n\\n```\\nvim MigrtorConfig.js\\n```\\n\\n\\n> module.exports = {\\n>     database: {\\n>         client: 'mysql',\\n>         connection: {\\n>             host: '127.0.0.1',\\n>             user: 'ghost',（之前mysql设置时建立的用户名）\\n>             password: 'password',（改成mysql的ghost用户密码）\\n>             charset: 'utf8',\\n>             name: 'blog'（之前mysql设置时建立的数据库）\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version',\\n>  /**\\n>     subfolder: 'upgrades'  [default: versions]\\n>     （这一部分在执行时总出问题，就注释掉了）\\n>  */\\n> }\\n\\n（下面应该是数据库使用sqlite3时的设置，由于本方案使用的mysql，所以可以不用写进去）\\n> module.exports = {\\n>     database: {\\n>         client: 'sqlite3',\\n>         connection: {\\n>             filename: 'path/to/your.db'\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version'\\n> }\\n> \\n\\n使用下面指令安装：\\n```\\nnpm install -g knex-migrator\\n```\\n\\n由于国内网络的原因，这个命令也可能需要执行多次才能安装完，中间会提示校验错误，这个应该是下载没有完成，而网络链接断开了的原因，再执行一次就行，直到最后完成安装。\\n\\n\\n运行一下：\\n```\\nnpm start --production\\n```\\n如果看到下面的提示，证明你已经完成80%了：\\n\\n\\n> Ghost is running in production...  \\n> Your blog is now available on https://www.itony.net  \\n> Ctrl+C to shut down  \\n\\n### 问题及解决方案\\n\\n#### 权限问题\\n在执行npm start --production的时候，遇到npm权限的问题，提示没有node_modules文件夹的写权限，这个时候使用sudo命令进行安装时又提示别的错误，最终采用\\nnpmjs.com网站中的[解决方法2](https://docs.npmjs.com/getting-started/fixing-npm-permissions)。\\n首先检查npm的路径：\\n```\\nnpm config get prefix\\n```\\n发现是/usr\\n然后改变npm的默认路径：\\n1.为全局安装路径建立文件夹：（操作均在www用户下完成）\\n```\\nmkdir ~/.npm-global\\n```\\n2.设置默认路径：\\n```\\nnpm config set prefix '~/.npm-global'\\n```\\n3.加入用户PATH：\\n打开用户家目录下面的profile文件，这里是.bash_profile，加入下面的语句：\\n```\\nexport PATH=~/.npm-global/bin:$PATH\\n```\\n4.更新profile文件\\n```\\nsource ~/.bash_profile\\n```\\n**检验**：全局下载文件包，**不要用sudo**，也可以省去检测\\n``` \\nnpm install -g jshint\\n```\\n也可以使用下面更改环境变量的方式代替2-4步：（如果不想更改profile文件的话）\\n```\\nNPM_CONFIG_PREFIX=~/.npm-global\\n```\\n#### 语法错误问题\\n> Syntax error: Unexpected token\\n出现上面的语句就要检查一下相应的配置文件的语法是否有错误。\\n## 全局安装PM2\\n目前你是开着远程连接到你的服务器，一旦你把窗口关闭了，那么你刚才起的npm start --production可就悲剧了，如何避免呢，这时候我们就需要一个能帮我们在后台稳定运行node服务的工具了，目前比较火热的要数PM2了：\\n\\n``\\nyarn global add pm2 --prefix /usr/local\\n``\\n### 用PM2来启动Ghost的node服务\\n先切到ghost的目录，然后再运行\\n```\\nNODE_ENV=production pm2 start index.js --name \\\"blog\\\"\\n```\\n### 检查运行结果\\n```\\npm2 show blog  \\n```\\n\"}]],\"sections\":[[10,0]]}","page":false,"plaintext":"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\n什么是ghost？\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\n但是这并不影响我们搭建ghost服务器。吼吼吼~\n\n搭建准备\n在阿里云 [https://www.aliyun.com/]上购买了一年的ECS服务器，配置如下:\nCPU 1核；\n内存 2G；\n带宽 1Mbps；\n硬盘 40G。\n系统 CentOS 7.3 64位\n\n云服务器配置\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\n\n云服务器ECS——网络和安全——安全组——配置规则\n\n\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\n这里的设置主要是参考了阿里云的官方帮助文档 [https://help.aliyun.com/knowledge_detail/34403.html]。","published_at":"2017-09-28T13:41:32.000Z","slug":"shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost","status":"published","title":"搭建Ghost服务器","updated_at":"2017-09-29T02:09:25.000Z","updated_by":"1","tags":{"0":{"id":"59ccb425a744810195a3dc01","name":"技术","slug":"ji-zhu","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T08:34:45.000Z","updated_at":"2017-09-28T08:34:45.000Z","created_by":"1","updated_by":"1"},"1":{"id":"59cd12bfa744810195a3dc06","name":"博客","slug":"bo-ke","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T15:18:23.000Z","updated_at":"2017-09-28T15:18:23.000Z","created_by":"1","updated_by":"1"}},"author_id":"1"}}},"query":{"include":"tags"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"http://47.95.197.107","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/*","content-type":"application/json; charset=utf-8","etag":"W/\"49aa-KoSs5CFVC+djDYSa7795FnTKNAc\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"63ms"},"msg":"","time":"2017-09-29T02:09:39.830Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"41644760-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","method":"GET","originalUrl":"/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","params":{"0":"/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"text/html, application/xhtml+xml, image/jxr, */*","referer":"http://47.95.197.107/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-none-match":"W/\"8849-jmFi0hqA18lu4ivnrxvbhXKK3f0\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"886a-CfRO6yCHlC8KFTVZVjnkI9OT5R0\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"42ms"},"msg":"","time":"2017-09-29T02:09:42.145Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"416c84c0-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/assets/built/screen.css?v=b5301c75d8","method":"GET","originalUrl":"/assets/built/screen.css?v=b5301c75d8","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"text/css, */*","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 07:32:48 GMT","if-none-match":"W/\"759e-15ec766fb30\""},"body":{},"query":{"v":"b5301c75d8"}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 07:32:48 GMT","etag":"W/\"759e-15ec766fb30\""},"statusCode":304,"responseTime":"1ms"},"msg":"","time":"2017-09-29T02:09:42.158Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"416e5980-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/public/ghost-sdk.min.js?v=b5301c75d8","method":"GET","originalUrl":"/public/ghost-sdk.min.js?v=b5301c75d8","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"application/javascript, */*;q=0.8","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-none-match":"\"30c3227170bdaa36ca322470e2b77a33\""},"body":{},"query":{"v":"b5301c75d8"}},"res":{"_headers":{"x-powered-by":"Express","content-type":"application/javascript","content-length":765,"etag":"\"30c3227170bdaa36ca322470e2b77a33\"","cache-control":"public, max-age=3600","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"0ms"},"msg":"","time":"2017-09-29T02:09:42.169Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"4170a370-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/2017/09/--------.jpg","method":"GET","originalUrl":"/content/images/2017/09/--------.jpg","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"image/png, image/svg+xml, image/jxr, image/*;q=0.8, */*;q=0.5","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 13:33:23 GMT","if-none-match":"W/\"e957-15ec8b11b2b\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 13:33:23 GMT","etag":"W/\"e957-15ec8b11b2b\""},"statusCode":304,"responseTime":"1ms"},"msg":"","time":"2017-09-29T02:09:42.184Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"4170ca80-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/2017/09/-------.jpg","method":"GET","originalUrl":"/content/images/2017/09/-------.jpg","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"image/png, image/svg+xml, image/jxr, image/*;q=0.8, */*;q=0.5","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 13:34:45 GMT","if-none-match":"W/\"d3bc-15ec8b2597a\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 13:34:45 GMT","etag":"W/\"d3bc-15ec8b2597a\""},"statusCode":304,"responseTime":"1ms"},"msg":"","time":"2017-09-29T02:09:42.185Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"4176bdf0-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/2017/09/ghost.png","method":"GET","originalUrl":"/content/images/2017/09/ghost.png","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"image/png, image/svg+xml, image/jxr, image/*;q=0.8, */*;q=0.5","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 15:17:51 GMT","if-none-match":"W/\"37a86-15ec910bf89\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 15:17:51 GMT","etag":"W/\"37a86-15ec910bf89\""},"statusCode":304,"responseTime":"0ms"},"msg":"","time":"2017-09-29T02:09:42.224Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"4176e500-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/2017/09/---.jpg","method":"GET","originalUrl":"/content/images/2017/09/---.jpg","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"image/png, image/svg+xml, image/jxr, image/*;q=0.8, */*;q=0.5","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 08:33:32 GMT","if-none-match":"W/\"545b-15ec79e95e4\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 08:33:32 GMT","etag":"W/\"545b-15ec79e95e4\""},"statusCode":304,"responseTime":"1ms"},"msg":"","time":"2017-09-29T02:09:42.226Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"419346a0-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/assets/js/jquery.fitvids.js?v=b5301c75d8","method":"GET","originalUrl":"/assets/js/jquery.fitvids.js?v=b5301c75d8","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"application/javascript, */*;q=0.8","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 07:32:48 GMT","if-none-match":"W/\"d76-15ec766fb30\""},"body":{},"query":{"v":"b5301c75d8"}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 07:32:48 GMT","etag":"W/\"d76-15ec766fb30\""},"statusCode":304,"responseTime":"1ms"},"msg":"","time":"2017-09-29T02:09:42.412Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"548a2a30-a4bb-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/posts/59ccf296a744810195a3dc03/?include=tags","method":"PUT","originalUrl":"/ghost/api/v0.1/posts/59ccf296a744810195a3dc03/?include=tags","params":{"id":"59ccf296a744810195a3dc03"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","content-length":"18523","origin":"http://47.95.197.107","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"1.9","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{"posts":{"0":{"id":"59ccf296a744810195a3dc03","created_at":"2017-09-28T13:01:10.000Z","created_by":"1","featured":false,"feature_image":"/content/images/2017/09/ghost.png","codeinjection_foot":"","codeinjection_head":"","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\\n什么是ghost？\\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\\n但是这并不影响我们搭建ghost服务器。吼吼吼~\\n\\n# 搭建准备\\n在[**阿里云**](https://www.aliyun.com/)上购买了一年的ECS服务器，配置如下:\\nCPU 1核；\\n内存 2G；\\n带宽 1Mbps；\\n硬盘 40G。\\n系统 CentOS 7.3 64位\\n\\n# 云服务器配置\\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\\n> 云服务器ECS——网络和安全——安全组——配置规则\\n![--------](/content/images/2017/09/--------.jpg)\\n![-------](/content/images/2017/09/-------.jpg)\\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\\n这里的设置主要是参考了[**阿里云的官方帮助文档**](https://help.aliyun.com/knowledge_detail/34403.html)。\\n# 安装ghost\\n\\n## 需要用到的东西\\n\\n* 一个完成A记录解析设置的域名（建议做好ICP备案）；（可选）\\n* 使用 [**MySQL**](https://www.mysql.com/) 做数据库服务；\\n* 使用 [**Nginx**](https://nginx.org/) 做网页服务器（Ghost的代理服务）；\\n* 使用 [**NodeJS**](https://nodejs.org/) 做后端服务；\\n* [**Ghost**](https://ghost.org/)一个开源的博客系统；\\n\\n## 基础设置\\n\\n### 查看一下系统信息：\\n\\n```\\ncat /etc/redhat-release  \\n```\\n> #>>> CentOS Linux release 7.3.1611 (Core)\\n\\n\\n### 更新一下系统，安装一些基础工具：\\n\\n阿里云的centos已经优化了yum的源，你也可以自行修改\\n```\\nyum update -y && yum upgrage -y && yum clean all\\n```\\ncurl, wget都是方便后边的下载\\nvim作为一个老牌Linux文本编辑工具，你值得拥有\\n```\\nyum install curl wget vim -y\\n```\\n\\n### 更新全系统的vim配置\\n```\\ncurl https://raw.githubusercontent.com/tonyc726/vim-for-server/master/vimrc > /etc/vimrc  \\n```\\n\\n## MySQL安装设置\\n由于CentOS7已经不带Mysql数据库了（默认的数据库是MariaDB，Mysql的一个分支），所以需要先安裝MySQL Repository（具体的版本号，可以参考 https://dev.mysql.com/downloads/repo/yum/）:\\n\\n### 安裝 MySQL Repository\\n```\\nrpm -Uvh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\\n```\\n### 安装MySQL数据库的服务器社区稳定版\\n```\\nyum install mysql-community-server -y\\n```\\n### 启动MySQL服务\\n```\\nsystemctl start mysqld.service\\n```\\n### 设置随系统自启动\\n```\\nsystemctl enable mysqld.service  \\n```\\n### 初始化设置\\n```\\nmysql_secure_installation\\n```\\n由于MySQL5.7默认会初始化Root用户的密码，所以在执行之前需要获取这个初始密码：\\n（本次设置中并没有执行如下操作，应为默认安装后第一次运行时不需密码，在初始化过程中会提示设置密码）\\n```\\ngrep \\\"password\\\" /var/log/mysqld.log  \\n```\\n\\n\\n### 创建Ghost需要的用户及数据库：\\n\\n运行以后输入刚才拿到的密码\\n```\\nmysql -uroot -p \\n```\\n添加新数据库blog，后面Ghost会用到\\n```\\nCREATE DATABASE blog;\\n```\\n添加新用户ghost（password替换为你需要的密码）\\n```\\nCREATE USER ghost IDENTIFIED BY 'password';\\n```\\n授予ghost用户在blog数据库上的所有权限\\n（password就是你刚才创建ghost账户时设置的密码）\\n```\\nGRANT ALL PRIVILEGES ON blog.* TO 'ghost'@'localhost' IDENTIFIED BY 'password';\\n```\\n刷新权限\\n（当执行过GRANT，CREATE USER，REVOKE命令之后，必须要执行刷新权限才能生效）\\n```\\nFLUSH PRIVILEGES;\\n```\\nCtrl+D 退出\\n\\n好了，以上就是MySQL部分\\n\\n## NodeJS安装设置\\n\\n推荐使用以下方式安装NodeJS\\n本系统使用V6稳定版，如需其它版本，你可以自行调整\\n```\\ncurl -sL https://rpm.nodesource.com/setup_6.x | sudo -E bash -  \\n```\\n### 安装NodeJS及其依赖包\\nyum install gcc-c++ make nodejs -y\\n\\nNodeJS安装以后，默认已经自带的NPM\\n不过npm之前一直被吐槽，建议***升级最新版或者用yarn代替***\\n### 升级npm至最新版本(^v5.0.4)\\n```\\nnpm install npm@latest -g\\n```\\n### 安装yarn代替（推荐）\\n```\\ncurl --silent --location https://rpm.nodesource.com/setup_6.x | bash -  \\nyum install yarn -y\\n```\\n\\n### 测试一下\\n```\\nnode -v\\n```\\n\\n> v6.11.0\\n```\\nnpm -v\\n```\\n> v5.1.0\\n```\\nyarn -v\\n```\\n> v0.27.5\\n\\n这里有个坑，如果直接使用yum install nodejs -y也是可以安装NodeJS的，不过nodesource维护的更加好，而且可以升级npm。\\n\\n如果你已经看到了最后输出的信息，那么久代表NodeJS已经就绪了。\\n## Nginx安装配置\\n\\n### 直接安装即可\\n```\\nyum install nginx -y\\n```\\n### 立即启动\\n```\\nsystemctl start nginx\\n```\\n### 设置开机自启动\\n```\\nsystemctl enable nginx  \\n```\\n\\n现在，打开你的浏览器，输入你的公网IP，不出意外，你就已经可以看到一个Nginx的欢迎页面了。\\n\\n不过，出于后期的扩展或者安全性考虑，我们需要为系统创建一个名为www的用户，专门用于管理网站.\\n\\n### 反向代理80端口\\n\\n众所周知，网站基本都以 80 端口作为默认端口（除非你不想让别人访问你的网站），也就是说：访问域名或服务器 IP 地址，实际上是在访问该服务器的 80 端口。而 Ghost 博客默认运行在 2368 端口上。\\n\\n为了输入域名或服务器 IP 地址就可以访问到你的 Ghost 博客，需要将访问 80 端口的请求，反向代理到 Ghost 的 2368 端口上。\\n\\n进入 Nginx 配置目录：\\n    ```\\n    cd /etc/nginx/conf.d\\n    ```\\n新建 Ghost 博客的 Nginx 配置文件：\\n```\\nvim ghost.conf\\n```\\n按 i 输入以下内容：\\n\\n> server {  \\n>     listen 80;\\n>     server_name loyalsoldier.me //修改为域名或服务器 IP 地址;\\n>     gzip on;\\n>     gzip_types text/plain application/xml text/css application/javascript application/json application/font-woff application/font-woff2 application/vnd.ms-fontobject application/x-font-ttf font/opentype application/pdf image/png image/bmp image/gif image/jpeg image/webp image/svg+xml;\\n>     gzip_proxied no-cache no-store private expired auth;\\n>     gzip_vary on;\\n>     gzip_min_length 1024;\\n>     location / {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>     }\\n>     location ~* .*\\\\.(jpg|jpeg|bmp|png|gif|ico|js|css|eot|woff|woff2|svg|ttf|otf)$ {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>         add_header Cache-Control max-age=2592000;\\n>         expires    30d;\\n>         etag       on;\\n>     }\\n> }\\n\\n按 ESC 键结束编辑，输入 :wq 保存文件并退出编辑\\n使用 nginx -t 测试 Nginx 配置文件是否语法正确：\\n\\n```\\nsudo nginx -t\\n```\\n若输出的结果有 ok、successful 等字样，表示配置正确\\n\\n如果正确的话，重启Nginx服务\\n```\\nsystemctl restart nginx.service  \\n```\\n\\n\\n## 添加新用户\\n创建一个名为www的用户组\\n```\\nadduser www\\n```\\n\\n### 设置密码(请记录下你的密码，以后需要用到)\\n```\\npasswd www\\n```\\n\\n### 分配Root权限 - 让我们新创建的www用户拥有Root用户的权限\\n```\\ngpasswd -a www wheel\\n```\\n### 将nginx用户添加入www的用户组，方便后期的权限控制\\n```\\nusermod -a -G nginx,www nginx  \\n```\\n\\n## 安装ghost\\n以上就是Ghost需要用到的基础系统了，下面就来安装Ghost，新开一个Terminal窗口，用**www**账户登录：\\n```\\nssh www@xxx.xxx.xxx.xxx  \\n```\\n然后下载Ghost最新的代码。\\n\\n### 下载Ghost最新的稳定版\\n```\\ncurl -L https://ghost.org/zip/ghost-latest.zip -o ghost.zip\\n```\\n### 解压\\n```\\nunzip -uo ghost.zip -d ghost\\n```\\n### 进入Ghost的目录并安装生产环境的依赖\\n```\\ncd ghost && npm install --production\\n```\\nnpm install --production这个命令可能需要执行多次，也是由于国内网络的原因，导致下载速度很慢，每次都下载不完全，需要多次执行，直到成功安装完成。\\n### 修改Ghost的config，修改数据库配置\\n```\\nvim config.js  \\n```\\n完整的config.js配置如下：\\n\\n> var path = require('path'),  \\n>     config;\\n> \\n> config = {  \\n>     production: {\\n>         url: 'https://www.xxxx.xxx',（换成服务器ip或者申请的域名）\\n>         mail: {},\\n>         database: {\\n>             client: 'mysql',（前面安装的mysql数据库，这里一定要对应）\\n>             connection: {\\n>                 host     : '127.0.0.1',\\n>                 user     : 'ghost', //用户名\\n>                 password : 'password', //ghost的密码，之前设置的\\n>                 database : 'blog', //数据库名\\n>                 charset  : 'utf8'\\n>             },\\n>             debug: false\\n>         },\\n>         server: {\\n>             host: '127.0.0.1',\\n>             port: '2368'\\n>         }\\n>     }\\n> };\\n> \\n> module.exports = config;  \\n\\n除了ghost安装根目录下的这个配置文件，还要检查一下/ghost/core/server/config下面的相应的配置文件，将相应的项更改正确，端口由于使用反向代理，因此不要更改，主要看一下url和database下面相应的设置。\\n\\n### 安装knex-migrator\\n实际上这个时候用生产模式运行ghost会报错，提示没有安装knex-migrator。\\n安装之前需要先编辑ghost安装文件夹下的***MigrtorConfig.js***文件。\\n\\n\\n使用vim编写MigrtorConfig.js文件\\n\\n```\\nvim MigrtorConfig.js\\n```\\n\\n\\n> module.exports = {\\n>     database: {\\n>         client: 'mysql',\\n>         connection: {\\n>             host: '127.0.0.1',\\n>             user: 'ghost',（之前mysql设置时建立的用户名）\\n>             password: 'password',（改成mysql的ghost用户密码）\\n>             charset: 'utf8',\\n>             name: 'blog'（之前mysql设置时建立的数据库）\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version',\\n>  /**\\n>     subfolder: 'upgrades'  [default: versions]\\n>     （这一部分在执行时总出问题，就注释掉了）\\n>  */\\n> }\\n\\n（下面应该是数据库使用sqlite3时的设置，由于本方案使用的mysql，所以可以不用写进去）\\n> module.exports = {\\n>     database: {\\n>         client: 'sqlite3',\\n>         connection: {\\n>             filename: 'path/to/your.db'\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version'\\n> }\\n> \\n\\n使用下面指令安装：\\n```\\nnpm install -g knex-migrator\\n```\\n\\n由于国内网络的原因，这个命令也可能需要执行多次才能安装完，中间会提示校验错误，这个应该是下载没有完成，而网络链接断开了的原因，再执行一次就行，直到最后完成安装。\\n\\n\\n运行一下：\\n```\\nnpm start --production\\n```\\n如果看到下面的提示，证明你已经完成80%了：\\n\\n\\n> Ghost is running in production...  \\n> Your blog is now available on xx.xx.xx.xx  \\n> Ctrl+C to shut down  \\n\\n### 问题及解决方案\\n\\n#### 权限问题\\n在执行npm start --production的时候，遇到npm权限的问题，提示没有node_modules文件夹的写权限，这个时候使用sudo命令进行安装时又提示别的错误，最终采用\\nnpmjs.com网站中的[解决方法2](https://docs.npmjs.com/getting-started/fixing-npm-permissions)。\\n首先检查npm的路径：\\n```\\nnpm config get prefix\\n```\\n发现是/usr\\n然后改变npm的默认路径：\\n1.为全局安装路径建立文件夹：（操作均在www用户下完成）\\n```\\nmkdir ~/.npm-global\\n```\\n2.设置默认路径：\\n```\\nnpm config set prefix '~/.npm-global'\\n```\\n3.加入用户PATH：\\n打开用户家目录下面的profile文件，这里是.bash_profile，加入下面的语句：\\n```\\nexport PATH=~/.npm-global/bin:$PATH\\n```\\n4.更新profile文件\\n```\\nsource ~/.bash_profile\\n```\\n**检验**：全局下载文件包，**不要用sudo**，也可以省去检测\\n``` \\nnpm install -g jshint\\n```\\n也可以使用下面更改环境变量的方式代替2-4步：（如果不想更改profile文件的话）\\n```\\nNPM_CONFIG_PREFIX=~/.npm-global\\n```\\n#### 语法错误问题\\n> Syntax error: Unexpected token\\n出现上面的语句就要检查一下相应的配置文件的语法是否有错误。\\n## 全局安装PM2\\n目前你是开着远程连接到你的服务器，一旦你把窗口关闭了，那么你刚才起的npm start --production可就悲剧了，如何避免呢，这时候我们就需要一个能帮我们在后台稳定运行node服务的工具了，目前比较火热的要数PM2了：\\n\\n``\\nyarn global add pm2 --prefix /usr/local\\n``\\n### 用PM2来启动Ghost的node服务\\n先切到ghost的目录，然后再运行\\n```\\nNODE_ENV=production pm2 start index.js --name \\\"blog\\\"\\n```\\n### 检查运行结果\\n```\\npm2 show blog  \\n```\\n\"}]],\"sections\":[[10,0]]}","page":false,"plaintext":"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\n什么是ghost？\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\n但是这并不影响我们搭建ghost服务器。吼吼吼~\n\n搭建准备\n在阿里云 [https://www.aliyun.com/]上购买了一年的ECS服务器，配置如下:\nCPU 1核；\n内存 2G；\n带宽 1Mbps；\n硬盘 40G。\n系统 CentOS 7.3 64位\n\n云服务器配置\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\n\n云服务器ECS——网络和安全——安全组——配置规则\n\n\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\n这里的设置主要是参考了阿里云的官方帮助文档 [https://help.aliyun.com/knowledge_detail/34403.html]。","published_at":"2017-09-28T13:41:32.000Z","slug":"shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost","status":"published","title":"搭建Ghost服务器","updated_at":"2017-09-29T02:09:39.000Z","updated_by":"1","tags":{"0":{"id":"59ccb425a744810195a3dc01","name":"技术","slug":"ji-zhu","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T08:34:45.000Z","updated_at":"2017-09-28T08:34:45.000Z","created_by":"1","updated_by":"1"},"1":{"id":"59cd12bfa744810195a3dc06","name":"博客","slug":"bo-ke","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T15:18:23.000Z","updated_at":"2017-09-28T15:18:23.000Z","created_by":"1","updated_by":"1"}},"author_id":"1"}}},"query":{"include":"tags"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"http://47.95.197.107","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/*","content-type":"application/json; charset=utf-8","etag":"W/\"497a-99F9hTvYmrc9ZVFQTgd5JNE1GK4\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"54ms"},"msg":"","time":"2017-09-29T02:10:14.284Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"55835740-a4bb-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/posts/59ccf296a744810195a3dc03/?include=tags","method":"PUT","originalUrl":"/ghost/api/v0.1/posts/59ccf296a744810195a3dc03/?include=tags","params":{"id":"59ccf296a744810195a3dc03"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","content-length":"18523","origin":"http://47.95.197.107","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"1.9","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{"posts":{"0":{"id":"59ccf296a744810195a3dc03","created_at":"2017-09-28T13:01:10.000Z","created_by":"1","featured":false,"feature_image":"/content/images/2017/09/ghost.png","codeinjection_foot":"","codeinjection_head":"","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\\n什么是ghost？\\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\\n但是这并不影响我们搭建ghost服务器。吼吼吼~\\n\\n# 搭建准备\\n在[**阿里云**](https://www.aliyun.com/)上购买了一年的ECS服务器，配置如下:\\nCPU 1核；\\n内存 2G；\\n带宽 1Mbps；\\n硬盘 40G。\\n系统 CentOS 7.3 64位\\n\\n# 云服务器配置\\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\\n> 云服务器ECS——网络和安全——安全组——配置规则\\n![--------](/content/images/2017/09/--------.jpg)\\n![-------](/content/images/2017/09/-------.jpg)\\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\\n这里的设置主要是参考了[**阿里云的官方帮助文档**](https://help.aliyun.com/knowledge_detail/34403.html)。\\n# 安装ghost\\n\\n## 需要用到的东西\\n\\n* 一个完成A记录解析设置的域名（建议做好ICP备案）；（可选）\\n* 使用 [**MySQL**](https://www.mysql.com/) 做数据库服务；\\n* 使用 [**Nginx**](https://nginx.org/) 做网页服务器（Ghost的代理服务）；\\n* 使用 [**NodeJS**](https://nodejs.org/) 做后端服务；\\n* [**Ghost**](https://ghost.org/)一个开源的博客系统；\\n\\n## 基础设置\\n\\n### 查看一下系统信息：\\n\\n```\\ncat /etc/redhat-release  \\n```\\n> #>>> CentOS Linux release 7.3.1611 (Core)\\n\\n\\n### 更新一下系统，安装一些基础工具：\\n\\n阿里云的centos已经优化了yum的源，你也可以自行修改\\n```\\nyum update -y && yum upgrage -y && yum clean all\\n```\\ncurl, wget都是方便后边的下载\\nvim作为一个老牌Linux文本编辑工具，你值得拥有\\n```\\nyum install curl wget vim -y\\n```\\n\\n### 更新全系统的vim配置\\n```\\ncurl https://raw.githubusercontent.com/tonyc726/vim-for-server/master/vimrc > /etc/vimrc  \\n```\\n\\n## MySQL安装设置\\n由于CentOS7已经不带Mysql数据库了（默认的数据库是MariaDB，Mysql的一个分支），所以需要先安裝MySQL Repository（具体的版本号，可以参考 https://dev.mysql.com/downloads/repo/yum/）:\\n\\n### 安裝 MySQL Repository\\n```\\nrpm -Uvh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\\n```\\n### 安装MySQL数据库的服务器社区稳定版\\n```\\nyum install mysql-community-server -y\\n```\\n### 启动MySQL服务\\n```\\nsystemctl start mysqld.service\\n```\\n### 设置随系统自启动\\n```\\nsystemctl enable mysqld.service  \\n```\\n### 初始化设置\\n```\\nmysql_secure_installation\\n```\\n由于MySQL5.7默认会初始化Root用户的密码，所以在执行之前需要获取这个初始密码：\\n（本次设置中并没有执行如下操作，应为默认安装后第一次运行时不需密码，在初始化过程中会提示设置密码）\\n```\\ngrep \\\"password\\\" /var/log/mysqld.log  \\n```\\n\\n\\n### 创建Ghost需要的用户及数据库：\\n\\n运行以后输入刚才拿到的密码\\n```\\nmysql -uroot -p \\n```\\n添加新数据库blog，后面Ghost会用到\\n```\\nCREATE DATABASE blog;\\n```\\n添加新用户ghost（password替换为你需要的密码）\\n```\\nCREATE USER ghost IDENTIFIED BY 'password';\\n```\\n授予ghost用户在blog数据库上的所有权限\\n（password就是你刚才创建ghost账户时设置的密码）\\n```\\nGRANT ALL PRIVILEGES ON blog.* TO 'ghost'@'localhost' IDENTIFIED BY 'password';\\n```\\n刷新权限\\n（当执行过GRANT，CREATE USER，REVOKE命令之后，必须要执行刷新权限才能生效）\\n```\\nFLUSH PRIVILEGES;\\n```\\nCtrl+D 退出\\n\\n好了，以上就是MySQL部分\\n\\n## NodeJS安装设置\\n\\n推荐使用以下方式安装NodeJS\\n本系统使用V6稳定版，如需其它版本，你可以自行调整\\n```\\ncurl -sL https://rpm.nodesource.com/setup_6.x | sudo -E bash -  \\n```\\n### 安装NodeJS及其依赖包\\nyum install gcc-c++ make nodejs -y\\n\\nNodeJS安装以后，默认已经自带的NPM\\n不过npm之前一直被吐槽，建议***升级最新版或者用yarn代替***\\n### 升级npm至最新版本(^v5.0.4)\\n```\\nnpm install npm@latest -g\\n```\\n### 安装yarn代替（推荐）\\n```\\ncurl --silent --location https://rpm.nodesource.com/setup_6.x | bash -  \\nyum install yarn -y\\n```\\n\\n### 测试一下\\n```\\nnode -v\\n```\\n\\n> v6.11.0\\n```\\nnpm -v\\n```\\n> v5.1.0\\n```\\nyarn -v\\n```\\n> v0.27.5\\n\\n这里有个坑，如果直接使用yum install nodejs -y也是可以安装NodeJS的，不过nodesource维护的更加好，而且可以升级npm。\\n\\n如果你已经看到了最后输出的信息，那么久代表NodeJS已经就绪了。\\n## Nginx安装配置\\n\\n### 直接安装即可\\n```\\nyum install nginx -y\\n```\\n### 立即启动\\n```\\nsystemctl start nginx\\n```\\n### 设置开机自启动\\n```\\nsystemctl enable nginx  \\n```\\n\\n现在，打开你的浏览器，输入你的公网IP，不出意外，你就已经可以看到一个Nginx的欢迎页面了。\\n\\n不过，出于后期的扩展或者安全性考虑，我们需要为系统创建一个名为www的用户，专门用于管理网站.\\n\\n### 反向代理80端口\\n\\n众所周知，网站基本都以 80 端口作为默认端口（除非你不想让别人访问你的网站），也就是说：访问域名或服务器 IP 地址，实际上是在访问该服务器的 80 端口。而 Ghost 博客默认运行在 2368 端口上。\\n\\n为了输入域名或服务器 IP 地址就可以访问到你的 Ghost 博客，需要将访问 80 端口的请求，反向代理到 Ghost 的 2368 端口上。\\n\\n进入 Nginx 配置目录：\\n    ```\\n    cd /etc/nginx/conf.d\\n    ```\\n新建 Ghost 博客的 Nginx 配置文件：\\n```\\nvim ghost.conf\\n```\\n按 i 输入以下内容：\\n\\n> server {  \\n>     listen 80;\\n>     server_name loyalsoldier.me //修改为域名或服务器 IP 地址;\\n>     gzip on;\\n>     gzip_types text/plain application/xml text/css application/javascript application/json application/font-woff application/font-woff2 application/vnd.ms-fontobject application/x-font-ttf font/opentype application/pdf image/png image/bmp image/gif image/jpeg image/webp image/svg+xml;\\n>     gzip_proxied no-cache no-store private expired auth;\\n>     gzip_vary on;\\n>     gzip_min_length 1024;\\n>     location / {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>     }\\n>     location ~* .*\\\\.(jpg|jpeg|bmp|png|gif|ico|js|css|eot|woff|woff2|svg|ttf|otf)$ {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>         add_header Cache-Control max-age=2592000;\\n>         expires    30d;\\n>         etag       on;\\n>     }\\n> }\\n\\n按 ESC 键结束编辑，输入 :wq 保存文件并退出编辑\\n使用 nginx -t 测试 Nginx 配置文件是否语法正确：\\n\\n```\\nsudo nginx -t\\n```\\n若输出的结果有 ok、successful 等字样，表示配置正确\\n\\n如果正确的话，重启Nginx服务\\n```\\nsystemctl restart nginx.service  \\n```\\n\\n\\n## 添加新用户\\n创建一个名为www的用户组\\n```\\nadduser www\\n```\\n\\n### 设置密码(请记录下你的密码，以后需要用到)\\n```\\npasswd www\\n```\\n\\n### 分配Root权限 - 让我们新创建的www用户拥有Root用户的权限\\n```\\ngpasswd -a www wheel\\n```\\n### 将nginx用户添加入www的用户组，方便后期的权限控制\\n```\\nusermod -a -G nginx,www nginx  \\n```\\n\\n## 安装ghost\\n以上就是Ghost需要用到的基础系统了，下面就来安装Ghost，新开一个Terminal窗口，用**www**账户登录：\\n```\\nssh www@xxx.xxx.xxx.xxx  \\n```\\n然后下载Ghost最新的代码。\\n\\n### 下载Ghost最新的稳定版\\n```\\ncurl -L https://ghost.org/zip/ghost-latest.zip -o ghost.zip\\n```\\n### 解压\\n```\\nunzip -uo ghost.zip -d ghost\\n```\\n### 进入Ghost的目录并安装生产环境的依赖\\n```\\ncd ghost && npm install --production\\n```\\nnpm install --production这个命令可能需要执行多次，也是由于国内网络的原因，导致下载速度很慢，每次都下载不完全，需要多次执行，直到成功安装完成。\\n### 修改Ghost的config，修改数据库配置\\n```\\nvim config.js  \\n```\\n完整的config.js配置如下：\\n\\n> var path = require('path'),  \\n>     config;\\n> \\n> config = {  \\n>     production: {\\n>         url: 'https://www.xxxx.xxx',（换成服务器ip或者申请的域名）\\n>         mail: {},\\n>         database: {\\n>             client: 'mysql',（前面安装的mysql数据库，这里一定要对应）\\n>             connection: {\\n>                 host     : '127.0.0.1',\\n>                 user     : 'ghost', //用户名\\n>                 password : 'password', //ghost的密码，之前设置的\\n>                 database : 'blog', //数据库名\\n>                 charset  : 'utf8'\\n>             },\\n>             debug: false\\n>         },\\n>         server: {\\n>             host: '127.0.0.1',\\n>             port: '2368'\\n>         }\\n>     }\\n> };\\n> \\n> module.exports = config;  \\n\\n除了ghost安装根目录下的这个配置文件，还要检查一下/ghost/core/server/config下面的相应的配置文件，将相应的项更改正确，端口由于使用反向代理，因此不要更改，主要看一下url和database下面相应的设置。\\n\\n### 安装knex-migrator\\n实际上这个时候用生产模式运行ghost会报错，提示没有安装knex-migrator。\\n安装之前需要先编辑ghost安装文件夹下的***MigrtorConfig.js***文件。\\n\\n\\n使用vim编写MigrtorConfig.js文件\\n\\n```\\nvim MigrtorConfig.js\\n```\\n\\n\\n> module.exports = {\\n>     database: {\\n>         client: 'mysql',\\n>         connection: {\\n>             host: '127.0.0.1',\\n>             user: 'ghost',（之前mysql设置时建立的用户名）\\n>             password: 'password',（改成mysql的ghost用户密码）\\n>             charset: 'utf8',\\n>             name: 'blog'（之前mysql设置时建立的数据库）\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version',\\n>  /**\\n>     subfolder: 'upgrades'  [default: versions]\\n>     （这一部分在执行时总出问题，就注释掉了）\\n>  */\\n> }\\n\\n（下面应该是数据库使用sqlite3时的设置，由于本方案使用的mysql，所以可以不用写进去）\\n> module.exports = {\\n>     database: {\\n>         client: 'sqlite3',\\n>         connection: {\\n>             filename: 'path/to/your.db'\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version'\\n> }\\n> \\n\\n使用下面指令安装：\\n```\\nnpm install -g knex-migrator\\n```\\n\\n由于国内网络的原因，这个命令也可能需要执行多次才能安装完，中间会提示校验错误，这个应该是下载没有完成，而网络链接断开了的原因，再执行一次就行，直到最后完成安装。\\n\\n\\n运行一下：\\n```\\nnpm start --production\\n```\\n如果看到下面的提示，证明你已经完成80%了：\\n\\n\\n> Ghost is running in production...  \\n> Your blog is now available on xx.xx.xx.xx  \\n> Ctrl+C to shut down  \\n\\n### 问题及解决方案\\n\\n#### 权限问题\\n在执行npm start --production的时候，遇到npm权限的问题，提示没有node_modules文件夹的写权限，这个时候使用sudo命令进行安装时又提示别的错误，最终采用\\nnpmjs.com网站中的[解决方法2](https://docs.npmjs.com/getting-started/fixing-npm-permissions)。\\n首先检查npm的路径：\\n```\\nnpm config get prefix\\n```\\n发现是/usr\\n然后改变npm的默认路径：\\n1.为全局安装路径建立文件夹：（操作均在www用户下完成）\\n```\\nmkdir ~/.npm-global\\n```\\n2.设置默认路径：\\n```\\nnpm config set prefix '~/.npm-global'\\n```\\n3.加入用户PATH：\\n打开用户家目录下面的profile文件，这里是.bash_profile，加入下面的语句：\\n```\\nexport PATH=~/.npm-global/bin:$PATH\\n```\\n4.更新profile文件\\n```\\nsource ~/.bash_profile\\n```\\n**检验**：全局下载文件包，**不要用sudo**，也可以省去检测\\n``` \\nnpm install -g jshint\\n```\\n也可以使用下面更改环境变量的方式代替2-4步：（如果不想更改profile文件的话）\\n```\\nNPM_CONFIG_PREFIX=~/.npm-global\\n```\\n#### 语法错误问题\\n> Syntax error: Unexpected token\\n出现上面的语句就要检查一下相应的配置文件的语法是否有错误。\\n## 全局安装PM2\\n目前你是开着远程连接到你的服务器，一旦你把窗口关闭了，那么你刚才起的npm start --production可就悲剧了，如何避免呢，这时候我们就需要一个能帮我们在后台稳定运行node服务的工具了，目前比较火热的要数PM2了：\\n\\n``\\nyarn global add pm2 --prefix /usr/local\\n``\\n### 用PM2来启动Ghost的node服务\\n先切到ghost的目录，然后再运行\\n```\\nNODE_ENV=production pm2 start index.js --name \\\"blog\\\"\\n```\\n### 检查运行结果\\n```\\npm2 show blog  \\n```\\n\"}]],\"sections\":[[10,0]]}","page":false,"plaintext":"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\n什么是ghost？\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\n但是这并不影响我们搭建ghost服务器。吼吼吼~\n\n搭建准备\n在阿里云 [https://www.aliyun.com/]上购买了一年的ECS服务器，配置如下:\nCPU 1核；\n内存 2G；\n带宽 1Mbps；\n硬盘 40G。\n系统 CentOS 7.3 64位\n\n云服务器配置\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\n\n云服务器ECS——网络和安全——安全组——配置规则\n\n\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\n这里的设置主要是参考了阿里云的官方帮助文档 [https://help.aliyun.com/knowledge_detail/34403.html]。","published_at":"2017-09-28T13:41:32.000Z","slug":"shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost","status":"published","title":"搭建Ghost服务器","updated_at":"2017-09-29T02:10:14.000Z","updated_by":"1","tags":{"0":{"id":"59ccb425a744810195a3dc01","name":"技术","slug":"ji-zhu","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T08:34:45.000Z","updated_at":"2017-09-28T08:34:45.000Z","created_by":"1","updated_by":"1"},"1":{"id":"59cd12bfa744810195a3dc06","name":"博客","slug":"bo-ke","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T15:18:23.000Z","updated_at":"2017-09-28T15:18:23.000Z","created_by":"1","updated_by":"1"}},"author_id":"1"}}},"query":{"include":"tags"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"http://47.95.197.107","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/*","content-type":"application/json; charset=utf-8","etag":"W/\"497a-TOlhWd+bPwK+/ZAcAS+h59pRCNo\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"46ms"},"msg":"","time":"2017-09-29T02:10:15.909Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"63992530-a4bb-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/posts/59ccf296a744810195a3dc03/?include=tags","method":"PUT","originalUrl":"/ghost/api/v0.1/posts/59ccf296a744810195a3dc03/?include=tags","params":{"id":"59ccf296a744810195a3dc03"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","content-length":"18526","origin":"http://47.95.197.107","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"1.9","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{"posts":{"0":{"id":"59ccf296a744810195a3dc03","created_at":"2017-09-28T13:01:10.000Z","created_by":"1","featured":false,"feature_image":"/content/images/2017/09/ghost.png","codeinjection_foot":"","codeinjection_head":"","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\\n什么是ghost？\\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\\n但是这并不影响我们搭建ghost服务器。吼吼吼~\\n\\n# 搭建准备\\n在[**阿里云**](https://www.aliyun.com/)上购买了一年的ECS服务器，配置如下:\\nCPU 1核；\\n内存 2G；\\n带宽 1Mbps；\\n硬盘 40G。\\n系统 CentOS 7.3 64位\\n\\n# 云服务器配置\\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\\n> 云服务器ECS——网络和安全——安全组——配置规则\\n![--------](/content/images/2017/09/--------.jpg)\\n![-------](/content/images/2017/09/-------.jpg)\\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\\n这里的设置主要是参考了[**阿里云的官方帮助文档**](https://help.aliyun.com/knowledge_detail/34403.html)。\\n# 安装ghost\\n\\n## 需要用到的东西\\n\\n* 一个完成A记录解析设置的域名（建议做好ICP备案）；（可选）\\n* 使用 [**MySQL**](https://www.mysql.com/) 做数据库服务；\\n* 使用 [**Nginx**](https://nginx.org/) 做网页服务器（Ghost的代理服务）；\\n* 使用 [**NodeJS**](https://nodejs.org/) 做后端服务；\\n* [**Ghost**](https://ghost.org/)一个开源的博客系统；\\n\\n## 基础设置\\n\\n### 查看一下系统信息：\\n\\n```\\ncat /etc/redhat-release  \\n```\\n> #>>> CentOS Linux release 7.3.1611 (Core)\\n\\n\\n### 更新一下系统，安装一些基础工具：\\n\\n阿里云的centos已经优化了yum的源，你也可以自行修改\\n```\\nyum update -y && yum upgrage -y && yum clean all\\n```\\ncurl, wget都是方便后边的下载\\nvim作为一个老牌Linux文本编辑工具，你值得拥有\\n```\\nyum install curl wget vim -y\\n```\\n\\n### 更新全系统的vim配置\\n```\\ncurl https://raw.githubusercontent.com/tonyc726/vim-for-server/master/vimrc > /etc/vimrc  \\n```\\n\\n## MySQL安装设置\\n由于CentOS7已经不带Mysql数据库了（默认的数据库是MariaDB，Mysql的一个分支），所以需要先安裝MySQL Repository（具体的版本号，可以参考 https://dev.mysql.com/downloads/repo/yum/）:\\n\\n### 安裝 MySQL Repository\\n```\\nrpm -Uvh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\\n```\\n### 安装MySQL数据库的服务器社区稳定版\\n```\\nyum install mysql-community-server -y\\n```\\n### 启动MySQL服务\\n```\\nsystemctl start mysqld.service\\n```\\n### 设置随系统自启动\\n```\\nsystemctl enable mysqld.service  \\n```\\n### 初始化设置\\n```\\nmysql_secure_installation\\n```\\n由于MySQL5.7默认会初始化Root用户的密码，所以在执行之前需要获取这个初始密码：\\n（本次设置中并没有执行如下操作，应为默认安装后第一次运行时不需密码，在初始化过程中会提示设置密码）\\n```\\ngrep \\\"password\\\" /var/log/mysqld.log  \\n```\\n\\n\\n### 创建Ghost需要的用户及数据库：\\n\\n运行以后输入刚才拿到的密码\\n```\\nmysql -uroot -p \\n```\\n添加新数据库blog，后面Ghost会用到\\n```\\nCREATE DATABASE blog;\\n```\\n添加新用户ghost（password替换为你需要的密码）\\n```\\nCREATE USER ghost IDENTIFIED BY 'password';\\n```\\n授予ghost用户在blog数据库上的所有权限\\n（password就是你刚才创建ghost账户时设置的密码）\\n```\\nGRANT ALL PRIVILEGES ON blog.* TO 'ghost'@'localhost' IDENTIFIED BY 'password';\\n```\\n刷新权限\\n（当执行过GRANT，CREATE USER，REVOKE命令之后，必须要执行刷新权限才能生效）\\n```\\nFLUSH PRIVILEGES;\\n```\\nCtrl+D 退出\\n\\n好了，以上就是MySQL部分\\n\\n## NodeJS安装设置\\n\\n推荐使用以下方式安装NodeJS\\n本系统使用V6稳定版，如需其它版本，你可以自行调整\\n```\\ncurl -sL https://rpm.nodesource.com/setup_6.x | sudo -E bash -  \\n```\\n### 安装NodeJS及其依赖包\\nyum install gcc-c++ make nodejs -y\\n\\nNodeJS安装以后，默认已经自带的NPM\\n不过npm之前一直被吐槽，建议***升级最新版或者用yarn代替***\\n### 升级npm至最新版本(^v5.0.4)\\n```\\nnpm install npm@latest -g\\n```\\n### 安装yarn代替（推荐）\\n```\\ncurl --silent --location https://rpm.nodesource.com/setup_6.x | bash -  \\nyum install yarn -y\\n```\\n\\n### 测试一下\\n```\\nnode -v\\n```\\n\\n> v6.11.0\\n```\\nnpm -v\\n```\\n> v5.1.0\\n```\\nyarn -v\\n```\\n> v0.27.5\\n\\n这里有个坑，如果直接使用yum install nodejs -y也是可以安装NodeJS的，不过nodesource维护的更加好，而且可以升级npm。\\n\\n如果你已经看到了最后输出的信息，那么久代表NodeJS已经就绪了。\\n## Nginx安装配置\\n\\n### 直接安装即可\\n```\\nyum install nginx -y\\n```\\n### 立即启动\\n```\\nsystemctl start nginx\\n```\\n### 设置开机自启动\\n```\\nsystemctl enable nginx  \\n```\\n\\n现在，打开你的浏览器，输入你的公网IP，不出意外，你就已经可以看到一个Nginx的欢迎页面了。\\n\\n不过，出于后期的扩展或者安全性考虑，我们需要为系统创建一个名为www的用户，专门用于管理网站.\\n\\n### 反向代理80端口\\n\\n众所周知，网站基本都以 80 端口作为默认端口（除非你不想让别人访问你的网站），也就是说：访问域名或服务器 IP 地址，实际上是在访问该服务器的 80 端口。而 Ghost 博客默认运行在 2368 端口上。\\n\\n为了输入域名或服务器 IP 地址就可以访问到你的 Ghost 博客，需要将访问 80 端口的请求，反向代理到 Ghost 的 2368 端口上。\\n\\n进入 Nginx 配置目录：\\n    ```\\n    cd /etc/nginx/conf.d\\n    ```\\n新建 Ghost 博客的 Nginx 配置文件：\\n```\\nvim ghost.conf\\n```\\n按 i 输入以下内容：\\n\\n> server {  \\n>     listen 80;\\n>     server_name loyalsoldier.me //修改为域名或服务器 IP 地址;\\n>     gzip on;\\n>     gzip_types text/plain application/xml text/css application/javascript application/json application/font-woff application/font-woff2 application/vnd.ms-fontobject application/x-font-ttf font/opentype application/pdf image/png image/bmp image/gif image/jpeg image/webp image/svg+xml;\\n>     gzip_proxied no-cache no-store private expired auth;\\n>     gzip_vary on;\\n>     gzip_min_length 1024;\\n>     location / {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>     }\\n>     location ~* .*\\\\.(jpg|jpeg|bmp|png|gif|ico|js|css|eot|woff|woff2|svg|ttf|otf)$ {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>         add_header Cache-Control max-age=2592000;\\n>         expires    30d;\\n>         etag       on;\\n>     }\\n> }\\n\\n按 ESC 键结束编辑，输入 :wq 保存文件并退出编辑\\n使用 nginx -t 测试 Nginx 配置文件是否语法正确：\\n\\n```\\nsudo nginx -t\\n```\\n若输出的结果有 ok、successful 等字样，表示配置正确\\n\\n如果正确的话，重启Nginx服务\\n```\\nsystemctl restart nginx.service  \\n```\\n\\n\\n## 添加新用户\\n创建一个名为www的用户组\\n```\\nadduser www\\n```\\n\\n### 设置密码(请记录下你的密码，以后需要用到)\\n```\\npasswd www\\n```\\n\\n### 分配Root权限 - 让我们新创建的www用户拥有Root用户的权限\\n```\\ngpasswd -a www wheel\\n```\\n### 将nginx用户添加入www的用户组，方便后期的权限控制\\n```\\nusermod -a -G nginx,www nginx  \\n```\\n\\n## 安装ghost\\n以上就是Ghost需要用到的基础系统了，下面就来安装Ghost，新开一个Terminal窗口，用**www**账户登录：\\n```\\nssh www@xxx.xxx.xxx.xxx  \\n```\\n然后下载Ghost最新的代码。\\n\\n### 下载Ghost最新的稳定版\\n```\\ncurl -L https://ghost.org/zip/ghost-latest.zip -o ghost.zip\\n```\\n### 解压\\n```\\nunzip -uo ghost.zip -d ghost\\n```\\n### 进入Ghost的目录并安装生产环境的依赖\\n```\\ncd ghost && npm install --production\\n```\\nnpm install --production这个命令可能需要执行多次，也是由于国内网络的原因，导致下载速度很慢，每次都下载不完全，需要多次执行，直到成功安装完成。\\n### 修改Ghost的config，修改数据库配置\\n```\\nvim config.js  \\n```\\n完整的config.js配置如下：\\n\\n> var path = require('path'),  \\n>     config;\\n> \\n> config = {  \\n>     production: {\\n>         url: 'https://www.xxxx.xxx',（换成服务器ip或者申请的域名）\\n>         mail: {},\\n>         database: {\\n>             client: 'mysql',（前面安装的mysql数据库，这里一定要对应）\\n>             connection: {\\n>                 host     : '127.0.0.1',\\n>                 user     : 'ghost', //用户名\\n>                 password : 'password', //ghost的密码，之前设置的\\n>                 database : 'blog', //数据库名\\n>                 charset  : 'utf8'\\n>             },\\n>             debug: false\\n>         },\\n>         server: {\\n>             host: '127.0.0.1',\\n>             port: '2368'\\n>         }\\n>     }\\n> };\\n> \\n> module.exports = config;  \\n\\n除了ghost安装根目录下的这个配置文件，还要检查一下/ghost/core/server/config下面的相应的配置文件，将相应的项更改正确，端口由于使用反向代理，因此不要更改，主要看一下url和database下面相应的设置。\\n\\n### 安装knex-migrator\\n实际上这个时候用生产模式运行ghost会报错，提示没有安装knex-migrator。\\n安装之前需要先编辑ghost安装文件夹下的***MigrtorConfig.js***文件。\\n\\n\\n使用vim编写MigrtorConfig.js文件\\n\\n```\\nvim MigrtorConfig.js\\n```\\n\\n\\n> module.exports = {\\n>     database: {\\n>         client: 'mysql',\\n>         connection: {\\n>             host: '127.0.0.1',\\n>             user: 'ghost',（之前mysql设置时建立的用户名）\\n>             password: 'password',（改成mysql的ghost用户密码）\\n>             charset: 'utf8',\\n>             name: 'blog'（之前mysql设置时建立的数据库）\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version',\\n>  /**\\n>     subfolder: 'upgrades'  [default: versions]\\n>     （这一部分在执行时总出问题，就注释掉了）\\n>  */\\n> }\\n\\n（下面应该是数据库使用sqlite3时的设置，由于本方案使用的mysql，所以可以不用写进去）\\n> module.exports = {\\n>     database: {\\n>         client: 'sqlite3',\\n>         connection: {\\n>             filename: 'path/to/your.db'\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version'\\n> }\\n> \\n\\n使用下面指令安装：\\n```\\nnpm install -g knex-migrator\\n```\\n\\n由于国内网络的原因，这个命令也可能需要执行多次才能安装完，中间会提示校验错误，这个应该是下载没有完成，而网络链接断开了的原因，再执行一次就行，直到最后完成安装。\\n\\n\\n运行一下：\\n```\\nnpm start --production\\n```\\n如果看到下面的提示，证明你已经完成80%了：\\n\\n\\n> Ghost is running in production...  \\n> Your blog is now available on xx.xx.xx.xx  \\n> Ctrl+C to shut down  \\n\\n### 问题及解决方案\\n\\n#### 权限问题\\n在执行npm start --production的时候，遇到npm权限的问题，提示没有node_modules文件夹的写权限，这个时候使用sudo命令进行安装时又提示别的错误，最终采用\\nnpmjs.com网站中的[解决方法2](https://docs.npmjs.com/getting-started/fixing-npm-permissions)。\\n首先检查npm的路径：\\n```\\nnpm config get prefix\\n```\\n发现是/usr\\n然后改变npm的默认路径：\\n1.为全局安装路径建立文件夹：（操作均在www用户下完成）\\n```\\nmkdir ~/.npm-global\\n```\\n2.设置默认路径：\\n```\\nnpm config set prefix '~/.npm-global'\\n```\\n3.加入用户PATH：\\n打开用户家目录下面的profile文件，这里是.bash_profile，加入下面的语句：\\n```\\nexport PATH=~/.npm-global/bin:$PATH\\n```\\n4.更新profile文件\\n```\\nsource ~/.bash_profile\\n```\\n**检验**：全局下载文件包，**不要用sudo**，也可以省去检测\\n``` \\nnpm install -g jshint\\n```\\n也可以使用下面更改环境变量的方式代替2-4步：（如果不想更改profile文件的话）\\n```\\nNPM_CONFIG_PREFIX=~/.npm-global\\n```\\n#### 语法错误问题\\n> Syntax error: Unexpected token\\n\\n出现上面的语句就要检查一下相应的配置文件的语法是否有错误。\\n## 全局安装PM2\\n目前你是开着远程连接到你的服务器，一旦你把窗口关闭了，那么你刚才起的npm start --production可就悲剧了，如何避免呢，这时候我们就需要一个能帮我们在后台稳定运行node服务的工具了，目前比较火热的要数PM2了：\\n\\n``\\nyarn global add pm2 --prefix /usr/local\\n``\\n### 用PM2来启动Ghost的node服务\\n先切到ghost的目录，然后再运行\\n```\\nNODE_ENV=production pm2 start index.js --name \\\"blog\\\"\\n```\\n### 检查运行结果\\n```\\npm2 show blog  \\n```\\n\"}]],\"sections\":[[10,0]]}","page":false,"plaintext":"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\n什么是ghost？\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\n但是这并不影响我们搭建ghost服务器。吼吼吼~\n\n搭建准备\n在阿里云 [https://www.aliyun.com/]上购买了一年的ECS服务器，配置如下:\nCPU 1核；\n内存 2G；\n带宽 1Mbps；\n硬盘 40G。\n系统 CentOS 7.3 64位\n\n云服务器配置\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\n\n云服务器ECS——网络和安全——安全组——配置规则\n\n\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\n这里的设置主要是参考了阿里云的官方帮助文档 [https://help.aliyun.com/knowledge_detail/34403.html]。","published_at":"2017-09-28T13:41:32.000Z","slug":"shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost","status":"published","title":"搭建Ghost服务器","updated_at":"2017-09-29T02:10:15.000Z","updated_by":"1","tags":{"0":{"id":"59ccb425a744810195a3dc01","name":"技术","slug":"ji-zhu","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T08:34:45.000Z","updated_at":"2017-09-28T08:34:45.000Z","created_by":"1","updated_by":"1"},"1":{"id":"59cd12bfa744810195a3dc06","name":"博客","slug":"bo-ke","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T15:18:23.000Z","updated_at":"2017-09-28T15:18:23.000Z","created_by":"1","updated_by":"1"}},"author_id":"1"}}},"query":{"include":"tags"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"http://47.95.197.107","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/*","content-type":"application/json; charset=utf-8","etag":"W/\"497d-fmBy6fa/4OrePOMSKXjLvERFfpU\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"94ms"},"msg":"","time":"2017-09-29T02:10:39.590Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"64dbb750-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","method":"GET","originalUrl":"/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","params":{"0":"/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"text/html, application/xhtml+xml, image/jxr, */*","referer":"http://47.95.197.107/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-none-match":"W/\"886a-CfRO6yCHlC8KFTVZVjnkI9OT5R0\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"883f-DJpk9hqb8/az7YnnqCtw6+LlBhc\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"61ms"},"msg":"","time":"2017-09-29T02:10:41.667Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"64e6b3d0-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/assets/built/screen.css?v=b5301c75d8","method":"GET","originalUrl":"/assets/built/screen.css?v=b5301c75d8","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"text/css, */*","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 07:32:48 GMT","if-none-match":"W/\"759e-15ec766fb30\""},"body":{},"query":{"v":"b5301c75d8"}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 07:32:48 GMT","etag":"W/\"759e-15ec766fb30\""},"statusCode":304,"responseTime":"1ms"},"msg":"","time":"2017-09-29T02:10:41.679Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"64e88890-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/public/ghost-sdk.min.js?v=b5301c75d8","method":"GET","originalUrl":"/public/ghost-sdk.min.js?v=b5301c75d8","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"application/javascript, */*;q=0.8","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-none-match":"\"30c3227170bdaa36ca322470e2b77a33\""},"body":{},"query":{"v":"b5301c75d8"}},"res":{"_headers":{"x-powered-by":"Express","content-type":"application/javascript","content-length":765,"etag":"\"30c3227170bdaa36ca322470e2b77a33\"","cache-control":"public, max-age=3600","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"1ms"},"msg":"","time":"2017-09-29T02:10:41.691Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"64ead280-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/2017/09/--------.jpg","method":"GET","originalUrl":"/content/images/2017/09/--------.jpg","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"image/png, image/svg+xml, image/jxr, image/*;q=0.8, */*;q=0.5","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 13:33:23 GMT","if-none-match":"W/\"e957-15ec8b11b2b\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 13:33:23 GMT","etag":"W/\"e957-15ec8b11b2b\""},"statusCode":304,"responseTime":"0ms"},"msg":"","time":"2017-09-29T02:10:41.705Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"64eb20a0-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/2017/09/-------.jpg","method":"GET","originalUrl":"/content/images/2017/09/-------.jpg","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"image/png, image/svg+xml, image/jxr, image/*;q=0.8, */*;q=0.5","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 13:34:45 GMT","if-none-match":"W/\"d3bc-15ec8b2597a\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 13:34:45 GMT","etag":"W/\"d3bc-15ec8b2597a\""},"statusCode":304,"responseTime":"0ms"},"msg":"","time":"2017-09-29T02:10:41.707Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"64eeca20-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/2017/09/ghost.png","method":"GET","originalUrl":"/content/images/2017/09/ghost.png","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"image/png, image/svg+xml, image/jxr, image/*;q=0.8, */*;q=0.5","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 15:17:51 GMT","if-none-match":"W/\"37a86-15ec910bf89\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 15:17:51 GMT","etag":"W/\"37a86-15ec910bf89\""},"statusCode":304,"responseTime":"0ms"},"msg":"","time":"2017-09-29T02:10:41.731Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"64ef1840-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/2017/09/---.jpg","method":"GET","originalUrl":"/content/images/2017/09/---.jpg","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"image/png, image/svg+xml, image/jxr, image/*;q=0.8, */*;q=0.5","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 08:33:32 GMT","if-none-match":"W/\"545b-15ec79e95e4\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 08:33:32 GMT","etag":"W/\"545b-15ec79e95e4\""},"statusCode":304,"responseTime":"0ms"},"msg":"","time":"2017-09-29T02:10:41.733Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"650cb260-a4bb-11e7-ad29-7b3837c864ae","userId":null},"url":"/assets/js/jquery.fitvids.js?v=b5301c75d8","method":"GET","originalUrl":"/assets/js/jquery.fitvids.js?v=b5301c75d8","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"application/javascript, */*;q=0.8","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 07:32:48 GMT","if-none-match":"W/\"d76-15ec766fb30\""},"body":{},"query":{"v":"b5301c75d8"}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 07:32:48 GMT","etag":"W/\"d76-15ec766fb30\""},"statusCode":304,"responseTime":"3ms"},"msg":"","time":"2017-09-29T02:10:41.930Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"ccfef4f0-a4bb-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/posts/59ccf296a744810195a3dc03/?include=tags","method":"PUT","originalUrl":"/ghost/api/v0.1/posts/59ccf296a744810195a3dc03/?include=tags","params":{"id":"59ccf296a744810195a3dc03"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","content-length":"18621","origin":"http://47.95.197.107","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"1.9","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{"posts":{"0":{"id":"59ccf296a744810195a3dc03","created_at":"2017-09-28T13:01:10.000Z","created_by":"1","featured":false,"feature_image":"/content/images/2017/09/ghost.png","codeinjection_foot":"","codeinjection_head":"","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\\n什么是ghost？\\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\\n但是这并不影响我们搭建ghost服务器。吼吼吼~\\n\\n# 搭建准备\\n在[**阿里云**](https://www.aliyun.com/)上购买了一年的ECS服务器，配置如下:\\nCPU 1核；\\n内存 2G；\\n带宽 1Mbps；\\n硬盘 40G。\\n系统 CentOS 7.3 64位\\n\\n# 云服务器配置\\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\\n> 云服务器ECS——网络和安全——安全组——配置规则\\n![--------](/content/images/2017/09/--------.jpg)\\n![-------](/content/images/2017/09/-------.jpg)\\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\\n这里的设置主要是参考了[**阿里云的官方帮助文档**](https://help.aliyun.com/knowledge_detail/34403.html)。\\n# 安装ghost\\n\\n## 需要用到的东西\\n\\n* 一个完成A记录解析设置的域名（建议做好ICP备案）；（可选）\\n* 使用 [**MySQL**](https://www.mysql.com/) 做数据库服务；\\n* 使用 [**Nginx**](https://nginx.org/) 做网页服务器（Ghost的代理服务）；\\n* 使用 [**NodeJS**](https://nodejs.org/) 做后端服务；\\n* [**Ghost**](https://ghost.org/)一个开源的博客系统；\\n\\n## 基础设置\\n\\n### 查看一下系统信息：\\n\\n```\\ncat /etc/redhat-release  \\n```\\n> #>>> CentOS Linux release 7.3.1611 (Core)\\n\\n\\n### 更新一下系统，安装一些基础工具：\\n\\n阿里云的centos已经优化了yum的源，你也可以自行修改\\n```\\nyum update -y && yum upgrage -y && yum clean all\\n```\\ncurl, wget都是方便后边的下载\\nvim作为一个老牌Linux文本编辑工具，你值得拥有\\n```\\nyum install curl wget vim -y\\n```\\n\\n### 更新全系统的vim配置\\n```\\ncurl https://raw.githubusercontent.com/tonyc726/vim-for-server/master/vimrc > /etc/vimrc  \\n```\\n\\n## MySQL安装设置\\n由于CentOS7已经不带Mysql数据库了（默认的数据库是MariaDB，Mysql的一个分支），所以需要先安裝MySQL Repository（具体的版本号，可以参考 https://dev.mysql.com/downloads/repo/yum/）:\\n\\n### 安裝 MySQL Repository\\n```\\nrpm -Uvh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\\n```\\n### 安装MySQL数据库的服务器社区稳定版\\n```\\nyum install mysql-community-server -y\\n```\\n### 启动MySQL服务\\n```\\nsystemctl start mysqld.service\\n```\\n### 设置随系统自启动\\n```\\nsystemctl enable mysqld.service  \\n```\\n### 初始化设置\\n```\\nmysql_secure_installation\\n```\\n由于MySQL5.7默认会初始化Root用户的密码，所以在执行之前需要获取这个初始密码：\\n（本次设置中并没有执行如下操作，应为默认安装后第一次运行时不需密码，在初始化过程中会提示设置密码）\\n```\\ngrep \\\"password\\\" /var/log/mysqld.log  \\n```\\n\\n\\n### 创建Ghost需要的用户及数据库：\\n\\n运行以后输入刚才拿到的密码\\n```\\nmysql -uroot -p \\n```\\n添加新数据库blog，后面Ghost会用到\\n```\\nCREATE DATABASE blog;\\n```\\n添加新用户ghost（password替换为你需要的密码）\\n```\\nCREATE USER ghost IDENTIFIED BY 'password';\\n```\\n授予ghost用户在blog数据库上的所有权限\\n（password就是你刚才创建ghost账户时设置的密码）\\n```\\nGRANT ALL PRIVILEGES ON blog.* TO 'ghost'@'localhost' IDENTIFIED BY 'password';\\n```\\n刷新权限\\n（当执行过GRANT，CREATE USER，REVOKE命令之后，必须要执行刷新权限才能生效）\\n```\\nFLUSH PRIVILEGES;\\n```\\nCtrl+D 退出\\n\\n好了，以上就是MySQL部分\\n\\n## NodeJS安装设置\\n\\n推荐使用以下方式安装NodeJS\\n本系统使用V6稳定版，如需其它版本，你可以自行调整\\n```\\ncurl -sL https://rpm.nodesource.com/setup_6.x | sudo -E bash -  \\n```\\n### 安装NodeJS及其依赖包\\n```\\nyum install gcc-c++ make nodejs -y\\n```\\nNodeJS安装以后，默认已经自带的NPM\\n不过[**npm**](https://github.com/nodejs-tw/nodejs-wiki-book/blob/master/zh-tw/node_npm.rst)之前一直被吐槽，建议***升级最新版或者用yarn代替***\\n### 升级npm至最新版本(^v5.0.4)\\n```\\nnpm install npm@latest -g\\n```\\n### 安装yarn代替（推荐）\\n```\\ncurl --silent --location https://rpm.nodesource.com/setup_6.x | bash -  \\nyum install yarn -y\\n```\\n\\n### 测试一下\\n```\\nnode -v\\n```\\n\\n> v6.11.0\\n```\\nnpm -v\\n```\\n> v5.1.0\\n```\\nyarn -v\\n```\\n> v0.27.5\\n\\n这里有个坑，如果直接使用yum install nodejs -y也是可以安装NodeJS的，不过nodesource维护的更加好，而且可以升级npm。\\n\\n如果你已经看到了最后输出的信息，那么久代表NodeJS已经就绪了。\\n## Nginx安装配置\\n\\n### 直接安装即可\\n```\\nyum install nginx -y\\n```\\n### 立即启动\\n```\\nsystemctl start nginx\\n```\\n### 设置开机自启动\\n```\\nsystemctl enable nginx  \\n```\\n\\n现在，打开你的浏览器，输入你的公网IP，不出意外，你就已经可以看到一个Nginx的欢迎页面了。\\n\\n不过，出于后期的扩展或者安全性考虑，我们需要为系统创建一个名为www的用户，专门用于管理网站.\\n\\n### 反向代理80端口\\n\\n众所周知，网站基本都以 80 端口作为默认端口（除非你不想让别人访问你的网站），也就是说：访问域名或服务器 IP 地址，实际上是在访问该服务器的 80 端口。而 Ghost 博客默认运行在 2368 端口上。\\n\\n为了输入域名或服务器 IP 地址就可以访问到你的 Ghost 博客，需要将访问 80 端口的请求，反向代理到 Ghost 的 2368 端口上。\\n\\n进入 Nginx 配置目录：\\n    ```\\n    cd /etc/nginx/conf.d\\n    ```\\n新建 Ghost 博客的 Nginx 配置文件：\\n```\\nvim ghost.conf\\n```\\n按 i 输入以下内容：\\n\\n> server {  \\n>     listen 80;\\n>     server_name loyalsoldier.me //修改为域名或服务器 IP 地址;\\n>     gzip on;\\n>     gzip_types text/plain application/xml text/css application/javascript application/json application/font-woff application/font-woff2 application/vnd.ms-fontobject application/x-font-ttf font/opentype application/pdf image/png image/bmp image/gif image/jpeg image/webp image/svg+xml;\\n>     gzip_proxied no-cache no-store private expired auth;\\n>     gzip_vary on;\\n>     gzip_min_length 1024;\\n>     location / {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>     }\\n>     location ~* .*\\\\.(jpg|jpeg|bmp|png|gif|ico|js|css|eot|woff|woff2|svg|ttf|otf)$ {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>         add_header Cache-Control max-age=2592000;\\n>         expires    30d;\\n>         etag       on;\\n>     }\\n> }\\n\\n按 ESC 键结束编辑，输入 :wq 保存文件并退出编辑\\n使用 nginx -t 测试 Nginx 配置文件是否语法正确：\\n\\n```\\nsudo nginx -t\\n```\\n若输出的结果有 ok、successful 等字样，表示配置正确\\n\\n如果正确的话，重启Nginx服务\\n```\\nsystemctl restart nginx.service  \\n```\\n\\n\\n## 添加新用户\\n创建一个名为www的用户组\\n```\\nadduser www\\n```\\n\\n### 设置密码(请记录下你的密码，以后需要用到)\\n```\\npasswd www\\n```\\n\\n### 分配Root权限 - 让我们新创建的www用户拥有Root用户的权限\\n```\\ngpasswd -a www wheel\\n```\\n### 将nginx用户添加入www的用户组，方便后期的权限控制\\n```\\nusermod -a -G nginx,www nginx  \\n```\\n\\n## 安装ghost\\n以上就是Ghost需要用到的基础系统了，下面就来安装Ghost，新开一个Terminal窗口，用**www**账户登录：\\n```\\nssh www@xxx.xxx.xxx.xxx  \\n```\\n然后下载Ghost最新的代码。\\n\\n### 下载Ghost最新的稳定版\\n```\\ncurl -L https://ghost.org/zip/ghost-latest.zip -o ghost.zip\\n```\\n### 解压\\n```\\nunzip -uo ghost.zip -d ghost\\n```\\n### 进入Ghost的目录并安装生产环境的依赖\\n```\\ncd ghost && npm install --production\\n```\\nnpm install --production这个命令可能需要执行多次，也是由于国内网络的原因，导致下载速度很慢，每次都下载不完全，需要多次执行，直到成功安装完成。\\n### 修改Ghost的config，修改数据库配置\\n```\\nvim config.js  \\n```\\n完整的config.js配置如下：\\n\\n> var path = require('path'),  \\n>     config;\\n> \\n> config = {  \\n>     production: {\\n>         url: 'https://www.xxxx.xxx',（换成服务器ip或者申请的域名）\\n>         mail: {},\\n>         database: {\\n>             client: 'mysql',（前面安装的mysql数据库，这里一定要对应）\\n>             connection: {\\n>                 host     : '127.0.0.1',\\n>                 user     : 'ghost', //用户名\\n>                 password : 'password', //ghost的密码，之前设置的\\n>                 database : 'blog', //数据库名\\n>                 charset  : 'utf8'\\n>             },\\n>             debug: false\\n>         },\\n>         server: {\\n>             host: '127.0.0.1',\\n>             port: '2368'\\n>         }\\n>     }\\n> };\\n> \\n> module.exports = config;  \\n\\n除了ghost安装根目录下的这个配置文件，还要检查一下/ghost/core/server/config下面的相应的配置文件，将相应的项更改正确，端口由于使用反向代理，因此不要更改，主要看一下url和database下面相应的设置。\\n\\n### 安装knex-migrator\\n实际上这个时候用生产模式运行ghost会报错，提示没有安装knex-migrator。\\n安装之前需要先编辑ghost安装文件夹下的***MigrtorConfig.js***文件。\\n\\n\\n使用vim编写MigrtorConfig.js文件\\n\\n```\\nvim MigrtorConfig.js\\n```\\n\\n\\n> module.exports = {\\n>     database: {\\n>         client: 'mysql',\\n>         connection: {\\n>             host: '127.0.0.1',\\n>             user: 'ghost',（之前mysql设置时建立的用户名）\\n>             password: 'password',（改成mysql的ghost用户密码）\\n>             charset: 'utf8',\\n>             name: 'blog'（之前mysql设置时建立的数据库）\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version',\\n>  /**\\n>     subfolder: 'upgrades'  [default: versions]\\n>     （这一部分在执行时总出问题，就注释掉了）\\n>  */\\n> }\\n\\n（下面应该是数据库使用sqlite3时的设置，由于本方案使用的mysql，所以可以不用写进去）\\n> module.exports = {\\n>     database: {\\n>         client: 'sqlite3',\\n>         connection: {\\n>             filename: 'path/to/your.db'\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version'\\n> }\\n> \\n\\n使用下面指令安装：\\n```\\nnpm install -g knex-migrator\\n```\\n\\n由于国内网络的原因，这个命令也可能需要执行多次才能安装完，中间会提示校验错误，这个应该是下载没有完成，而网络链接断开了的原因，再执行一次就行，直到最后完成安装。\\n\\n\\n运行一下：\\n```\\nnpm start --production\\n```\\n如果看到下面的提示，证明你已经完成80%了：\\n\\n\\n> Ghost is running in production...  \\n> Your blog is now available on xx.xx.xx.xx  \\n> Ctrl+C to shut down  \\n\\n### 问题及解决方案\\n\\n#### 权限问题\\n在执行npm start --production的时候，遇到npm权限的问题，提示没有node_modules文件夹的写权限，这个时候使用sudo命令进行安装时又提示别的错误，最终采用\\nnpmjs.com网站中的[解决方法2](https://docs.npmjs.com/getting-started/fixing-npm-permissions)。\\n首先检查npm的路径：\\n```\\nnpm config get prefix\\n```\\n发现是/usr\\n然后改变npm的默认路径：\\n1.为全局安装路径建立文件夹：（操作均在www用户下完成）\\n```\\nmkdir ~/.npm-global\\n```\\n2.设置默认路径：\\n```\\nnpm config set prefix '~/.npm-global'\\n```\\n3.加入用户PATH：\\n打开用户家目录下面的profile文件，这里是.bash_profile，加入下面的语句：\\n```\\nexport PATH=~/.npm-global/bin:$PATH\\n```\\n4.更新profile文件\\n```\\nsource ~/.bash_profile\\n```\\n**检验**：全局下载文件包，**不要用sudo**，也可以省去检测\\n``` \\nnpm install -g jshint\\n```\\n也可以使用下面更改环境变量的方式代替2-4步：（如果不想更改profile文件的话）\\n```\\nNPM_CONFIG_PREFIX=~/.npm-global\\n```\\n#### 语法错误问题\\n> Syntax error: Unexpected token\\n\\n出现上面的语句就要检查一下相应的配置文件的语法是否有错误。\\n## 全局安装PM2\\n目前你是开着远程连接到你的服务器，一旦你把窗口关闭了，那么你刚才起的npm start --production可就悲剧了，如何避免呢，这时候我们就需要一个能帮我们在后台稳定运行node服务的工具了，目前比较火热的要数PM2了：\\n\\n```\\nyarn global add pm2 --prefix /usr/local\\n```\\n### 用PM2来启动Ghost的node服务\\n先切到ghost的目录，然后再运行\\n```\\nNODE_ENV=production pm2 start index.js --name \\\"blog\\\"\\n```\\n### 检查运行结果\\n```\\npm2 show blog  \\n```\\n\"}]],\"sections\":[[10,0]]}","page":false,"plaintext":"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\n什么是ghost？\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\n但是这并不影响我们搭建ghost服务器。吼吼吼~\n\n搭建准备\n在阿里云 [https://www.aliyun.com/]上购买了一年的ECS服务器，配置如下:\nCPU 1核；\n内存 2G；\n带宽 1Mbps；\n硬盘 40G。\n系统 CentOS 7.3 64位\n\n云服务器配置\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\n\n云服务器ECS——网络和安全——安全组——配置规则\n\n\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\n这里的设置主要是参考了阿里云的官方帮助文档 [https://help.aliyun.com/knowledge_detail/34403.html]。","published_at":"2017-09-28T13:41:32.000Z","slug":"shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost","status":"published","title":"搭建Ghost服务器","updated_at":"2017-09-29T02:10:39.000Z","updated_by":"1","tags":{"0":{"id":"59ccb425a744810195a3dc01","name":"技术","slug":"ji-zhu","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T08:34:45.000Z","updated_at":"2017-09-28T08:34:45.000Z","created_by":"1","updated_by":"1"},"1":{"id":"59cd12bfa744810195a3dc06","name":"博客","slug":"bo-ke","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T15:18:23.000Z","updated_at":"2017-09-28T15:18:23.000Z","created_by":"1","updated_by":"1"}},"author_id":"1"}}},"query":{"include":"tags"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"http://47.95.197.107","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/*","content-type":"application/json; charset=utf-8","etag":"W/\"4a04-eP5SGogKbRkiMuj1Br1rX/QXLKE\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"68ms"},"msg":"","time":"2017-09-29T02:13:36.390Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"d193bf50-a4bb-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/posts/59ccf296a744810195a3dc03/?include=tags","method":"PUT","originalUrl":"/ghost/api/v0.1/posts/59ccf296a744810195a3dc03/?include=tags","params":{"id":"59ccf296a744810195a3dc03"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","content-length":"18621","origin":"http://47.95.197.107","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"1.9","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{"posts":{"0":{"id":"59ccf296a744810195a3dc03","created_at":"2017-09-28T13:01:10.000Z","created_by":"1","featured":false,"feature_image":"/content/images/2017/09/ghost.png","codeinjection_foot":"","codeinjection_head":"","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\\n什么是ghost？\\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\\n但是这并不影响我们搭建ghost服务器。吼吼吼~\\n\\n# 搭建准备\\n在[**阿里云**](https://www.aliyun.com/)上购买了一年的ECS服务器，配置如下:\\nCPU 1核；\\n内存 2G；\\n带宽 1Mbps；\\n硬盘 40G。\\n系统 CentOS 7.3 64位\\n\\n# 云服务器配置\\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\\n> 云服务器ECS——网络和安全——安全组——配置规则\\n![--------](/content/images/2017/09/--------.jpg)\\n![-------](/content/images/2017/09/-------.jpg)\\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\\n这里的设置主要是参考了[**阿里云的官方帮助文档**](https://help.aliyun.com/knowledge_detail/34403.html)。\\n# 安装ghost\\n\\n## 需要用到的东西\\n\\n* 一个完成A记录解析设置的域名（建议做好ICP备案）；（可选）\\n* 使用 [**MySQL**](https://www.mysql.com/) 做数据库服务；\\n* 使用 [**Nginx**](https://nginx.org/) 做网页服务器（Ghost的代理服务）；\\n* 使用 [**NodeJS**](https://nodejs.org/) 做后端服务；\\n* [**Ghost**](https://ghost.org/)一个开源的博客系统；\\n\\n## 基础设置\\n\\n### 查看一下系统信息：\\n\\n```\\ncat /etc/redhat-release  \\n```\\n> #>>> CentOS Linux release 7.3.1611 (Core)\\n\\n\\n### 更新一下系统，安装一些基础工具：\\n\\n阿里云的centos已经优化了yum的源，你也可以自行修改\\n```\\nyum update -y && yum upgrage -y && yum clean all\\n```\\ncurl, wget都是方便后边的下载\\nvim作为一个老牌Linux文本编辑工具，你值得拥有\\n```\\nyum install curl wget vim -y\\n```\\n\\n### 更新全系统的vim配置\\n```\\ncurl https://raw.githubusercontent.com/tonyc726/vim-for-server/master/vimrc > /etc/vimrc  \\n```\\n\\n## MySQL安装设置\\n由于CentOS7已经不带Mysql数据库了（默认的数据库是MariaDB，Mysql的一个分支），所以需要先安裝MySQL Repository（具体的版本号，可以参考 https://dev.mysql.com/downloads/repo/yum/）:\\n\\n### 安裝 MySQL Repository\\n```\\nrpm -Uvh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\\n```\\n### 安装MySQL数据库的服务器社区稳定版\\n```\\nyum install mysql-community-server -y\\n```\\n### 启动MySQL服务\\n```\\nsystemctl start mysqld.service\\n```\\n### 设置随系统自启动\\n```\\nsystemctl enable mysqld.service  \\n```\\n### 初始化设置\\n```\\nmysql_secure_installation\\n```\\n由于MySQL5.7默认会初始化Root用户的密码，所以在执行之前需要获取这个初始密码：\\n（本次设置中并没有执行如下操作，应为默认安装后第一次运行时不需密码，在初始化过程中会提示设置密码）\\n```\\ngrep \\\"password\\\" /var/log/mysqld.log  \\n```\\n\\n\\n### 创建Ghost需要的用户及数据库：\\n\\n运行以后输入刚才拿到的密码\\n```\\nmysql -uroot -p \\n```\\n添加新数据库blog，后面Ghost会用到\\n```\\nCREATE DATABASE blog;\\n```\\n添加新用户ghost（password替换为你需要的密码）\\n```\\nCREATE USER ghost IDENTIFIED BY 'password';\\n```\\n授予ghost用户在blog数据库上的所有权限\\n（password就是你刚才创建ghost账户时设置的密码）\\n```\\nGRANT ALL PRIVILEGES ON blog.* TO 'ghost'@'localhost' IDENTIFIED BY 'password';\\n```\\n刷新权限\\n（当执行过GRANT，CREATE USER，REVOKE命令之后，必须要执行刷新权限才能生效）\\n```\\nFLUSH PRIVILEGES;\\n```\\nCtrl+D 退出\\n\\n好了，以上就是MySQL部分\\n\\n## NodeJS安装设置\\n\\n推荐使用以下方式安装NodeJS\\n本系统使用V6稳定版，如需其它版本，你可以自行调整\\n```\\ncurl -sL https://rpm.nodesource.com/setup_6.x | sudo -E bash -  \\n```\\n### 安装NodeJS及其依赖包\\n```\\nyum install gcc-c++ make nodejs -y\\n```\\nNodeJS安装以后，默认已经自带的NPM\\n不过[**npm**](https://github.com/nodejs-tw/nodejs-wiki-book/blob/master/zh-tw/node_npm.rst)之前一直被吐槽，建议***升级最新版或者用yarn代替***\\n### 升级npm至最新版本(^v5.0.4)\\n```\\nnpm install npm@latest -g\\n```\\n### 安装yarn代替（推荐）\\n```\\ncurl --silent --location https://rpm.nodesource.com/setup_6.x | bash -  \\nyum install yarn -y\\n```\\n\\n### 测试一下\\n```\\nnode -v\\n```\\n\\n> v6.11.0\\n```\\nnpm -v\\n```\\n> v5.1.0\\n```\\nyarn -v\\n```\\n> v0.27.5\\n\\n这里有个坑，如果直接使用yum install nodejs -y也是可以安装NodeJS的，不过nodesource维护的更加好，而且可以升级npm。\\n\\n如果你已经看到了最后输出的信息，那么久代表NodeJS已经就绪了。\\n## Nginx安装配置\\n\\n### 直接安装即可\\n```\\nyum install nginx -y\\n```\\n### 立即启动\\n```\\nsystemctl start nginx\\n```\\n### 设置开机自启动\\n```\\nsystemctl enable nginx  \\n```\\n\\n现在，打开你的浏览器，输入你的公网IP，不出意外，你就已经可以看到一个Nginx的欢迎页面了。\\n\\n不过，出于后期的扩展或者安全性考虑，我们需要为系统创建一个名为www的用户，专门用于管理网站.\\n\\n### 反向代理80端口\\n\\n众所周知，网站基本都以 80 端口作为默认端口（除非你不想让别人访问你的网站），也就是说：访问域名或服务器 IP 地址，实际上是在访问该服务器的 80 端口。而 Ghost 博客默认运行在 2368 端口上。\\n\\n为了输入域名或服务器 IP 地址就可以访问到你的 Ghost 博客，需要将访问 80 端口的请求，反向代理到 Ghost 的 2368 端口上。\\n\\n进入 Nginx 配置目录：\\n    ```\\n    cd /etc/nginx/conf.d\\n    ```\\n新建 Ghost 博客的 Nginx 配置文件：\\n```\\nvim ghost.conf\\n```\\n按 i 输入以下内容：\\n\\n> server {  \\n>     listen 80;\\n>     server_name loyalsoldier.me //修改为域名或服务器 IP 地址;\\n>     gzip on;\\n>     gzip_types text/plain application/xml text/css application/javascript application/json application/font-woff application/font-woff2 application/vnd.ms-fontobject application/x-font-ttf font/opentype application/pdf image/png image/bmp image/gif image/jpeg image/webp image/svg+xml;\\n>     gzip_proxied no-cache no-store private expired auth;\\n>     gzip_vary on;\\n>     gzip_min_length 1024;\\n>     location / {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>     }\\n>     location ~* .*\\\\.(jpg|jpeg|bmp|png|gif|ico|js|css|eot|woff|woff2|svg|ttf|otf)$ {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>         add_header Cache-Control max-age=2592000;\\n>         expires    30d;\\n>         etag       on;\\n>     }\\n> }\\n\\n按 ESC 键结束编辑，输入 :wq 保存文件并退出编辑\\n使用 nginx -t 测试 Nginx 配置文件是否语法正确：\\n\\n```\\nsudo nginx -t\\n```\\n若输出的结果有 ok、successful 等字样，表示配置正确\\n\\n如果正确的话，重启Nginx服务\\n```\\nsystemctl restart nginx.service  \\n```\\n\\n\\n## 添加新用户\\n创建一个名为www的用户组\\n```\\nadduser www\\n```\\n\\n### 设置密码(请记录下你的密码，以后需要用到)\\n```\\npasswd www\\n```\\n\\n### 分配Root权限 - 让我们新创建的www用户拥有Root用户的权限\\n```\\ngpasswd -a www wheel\\n```\\n### 将nginx用户添加入www的用户组，方便后期的权限控制\\n```\\nusermod -a -G nginx,www nginx  \\n```\\n\\n## 安装ghost\\n以上就是Ghost需要用到的基础系统了，下面就来安装Ghost，新开一个Terminal窗口，用**www**账户登录：\\n```\\nssh www@xxx.xxx.xxx.xxx  \\n```\\n然后下载Ghost最新的代码。\\n\\n### 下载Ghost最新的稳定版\\n```\\ncurl -L https://ghost.org/zip/ghost-latest.zip -o ghost.zip\\n```\\n### 解压\\n```\\nunzip -uo ghost.zip -d ghost\\n```\\n### 进入Ghost的目录并安装生产环境的依赖\\n```\\ncd ghost && npm install --production\\n```\\nnpm install --production这个命令可能需要执行多次，也是由于国内网络的原因，导致下载速度很慢，每次都下载不完全，需要多次执行，直到成功安装完成。\\n### 修改Ghost的config，修改数据库配置\\n```\\nvim config.js  \\n```\\n完整的config.js配置如下：\\n\\n> var path = require('path'),  \\n>     config;\\n> \\n> config = {  \\n>     production: {\\n>         url: 'https://www.xxxx.xxx',（换成服务器ip或者申请的域名）\\n>         mail: {},\\n>         database: {\\n>             client: 'mysql',（前面安装的mysql数据库，这里一定要对应）\\n>             connection: {\\n>                 host     : '127.0.0.1',\\n>                 user     : 'ghost', //用户名\\n>                 password : 'password', //ghost的密码，之前设置的\\n>                 database : 'blog', //数据库名\\n>                 charset  : 'utf8'\\n>             },\\n>             debug: false\\n>         },\\n>         server: {\\n>             host: '127.0.0.1',\\n>             port: '2368'\\n>         }\\n>     }\\n> };\\n> \\n> module.exports = config;  \\n\\n除了ghost安装根目录下的这个配置文件，还要检查一下/ghost/core/server/config下面的相应的配置文件，将相应的项更改正确，端口由于使用反向代理，因此不要更改，主要看一下url和database下面相应的设置。\\n\\n### 安装knex-migrator\\n实际上这个时候用生产模式运行ghost会报错，提示没有安装knex-migrator。\\n安装之前需要先编辑ghost安装文件夹下的***MigrtorConfig.js***文件。\\n\\n\\n使用vim编写MigrtorConfig.js文件\\n\\n```\\nvim MigrtorConfig.js\\n```\\n\\n\\n> module.exports = {\\n>     database: {\\n>         client: 'mysql',\\n>         connection: {\\n>             host: '127.0.0.1',\\n>             user: 'ghost',（之前mysql设置时建立的用户名）\\n>             password: 'password',（改成mysql的ghost用户密码）\\n>             charset: 'utf8',\\n>             name: 'blog'（之前mysql设置时建立的数据库）\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version',\\n>  /**\\n>     subfolder: 'upgrades'  [default: versions]\\n>     （这一部分在执行时总出问题，就注释掉了）\\n>  */\\n> }\\n\\n（下面应该是数据库使用sqlite3时的设置，由于本方案使用的mysql，所以可以不用写进去）\\n> module.exports = {\\n>     database: {\\n>         client: 'sqlite3',\\n>         connection: {\\n>             filename: 'path/to/your.db'\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version'\\n> }\\n> \\n\\n使用下面指令安装：\\n```\\nnpm install -g knex-migrator\\n```\\n\\n由于国内网络的原因，这个命令也可能需要执行多次才能安装完，中间会提示校验错误，这个应该是下载没有完成，而网络链接断开了的原因，再执行一次就行，直到最后完成安装。\\n\\n\\n运行一下：\\n```\\nnpm start --production\\n```\\n如果看到下面的提示，证明你已经完成80%了：\\n\\n\\n> Ghost is running in production...  \\n> Your blog is now available on xx.xx.xx.xx  \\n> Ctrl+C to shut down  \\n\\n### 问题及解决方案\\n\\n#### 权限问题\\n在执行npm start --production的时候，遇到npm权限的问题，提示没有node_modules文件夹的写权限，这个时候使用sudo命令进行安装时又提示别的错误，最终采用\\nnpmjs.com网站中的[解决方法2](https://docs.npmjs.com/getting-started/fixing-npm-permissions)。\\n首先检查npm的路径：\\n```\\nnpm config get prefix\\n```\\n发现是/usr\\n然后改变npm的默认路径：\\n1.为全局安装路径建立文件夹：（操作均在www用户下完成）\\n```\\nmkdir ~/.npm-global\\n```\\n2.设置默认路径：\\n```\\nnpm config set prefix '~/.npm-global'\\n```\\n3.加入用户PATH：\\n打开用户家目录下面的profile文件，这里是.bash_profile，加入下面的语句：\\n```\\nexport PATH=~/.npm-global/bin:$PATH\\n```\\n4.更新profile文件\\n```\\nsource ~/.bash_profile\\n```\\n**检验**：全局下载文件包，**不要用sudo**，也可以省去检测\\n``` \\nnpm install -g jshint\\n```\\n也可以使用下面更改环境变量的方式代替2-4步：（如果不想更改profile文件的话）\\n```\\nNPM_CONFIG_PREFIX=~/.npm-global\\n```\\n#### 语法错误问题\\n> Syntax error: Unexpected token\\n\\n出现上面的语句就要检查一下相应的配置文件的语法是否有错误。\\n## 全局安装PM2\\n目前你是开着远程连接到你的服务器，一旦你把窗口关闭了，那么你刚才起的npm start --production可就悲剧了，如何避免呢，这时候我们就需要一个能帮我们在后台稳定运行node服务的工具了，目前比较火热的要数PM2了：\\n\\n```\\nyarn global add pm2 --prefix /usr/local\\n```\\n### 用PM2来启动Ghost的node服务\\n先切到ghost的目录，然后再运行\\n```\\nNODE_ENV=production pm2 start index.js --name \\\"blog\\\"\\n```\\n### 检查运行结果\\n```\\npm2 show blog  \\n```\\n\"}]],\"sections\":[[10,0]]}","page":false,"plaintext":"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\n什么是ghost？\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\n但是这并不影响我们搭建ghost服务器。吼吼吼~\n\n搭建准备\n在阿里云 [https://www.aliyun.com/]上购买了一年的ECS服务器，配置如下:\nCPU 1核；\n内存 2G；\n带宽 1Mbps；\n硬盘 40G。\n系统 CentOS 7.3 64位\n\n云服务器配置\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\n\n云服务器ECS——网络和安全——安全组——配置规则\n\n\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\n这里的设置主要是参考了阿里云的官方帮助文档 [https://help.aliyun.com/knowledge_detail/34403.html]。","published_at":"2017-09-28T13:41:32.000Z","slug":"shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost","status":"published","title":"搭建Ghost服务器","updated_at":"2017-09-29T02:13:36.000Z","updated_by":"1","tags":{"0":{"id":"59ccb425a744810195a3dc01","name":"技术","slug":"ji-zhu","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T08:34:45.000Z","updated_at":"2017-09-28T08:34:45.000Z","created_by":"1","updated_by":"1"},"1":{"id":"59cd12bfa744810195a3dc06","name":"博客","slug":"bo-ke","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T15:18:23.000Z","updated_at":"2017-09-28T15:18:23.000Z","created_by":"1","updated_by":"1"}},"author_id":"1"}}},"query":{"include":"tags"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"http://47.95.197.107","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/*","content-type":"application/json; charset=utf-8","etag":"W/\"4a04-5H5goTHidtJb5bJ2LyCQppMS/4s\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"46ms"},"msg":"","time":"2017-09-29T02:13:44.055Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"fab89590-a4bb-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/posts/59ccf296a744810195a3dc03/?include=tags","method":"PUT","originalUrl":"/ghost/api/v0.1/posts/59ccf296a744810195a3dc03/?include=tags","params":{"id":"59ccf296a744810195a3dc03"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","content-length":"18616","origin":"http://47.95.197.107","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"1.9","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{"posts":{"0":{"id":"59ccf296a744810195a3dc03","created_at":"2017-09-28T13:01:10.000Z","created_by":"1","featured":false,"feature_image":"/content/images/2017/09/ghost.png","codeinjection_foot":"","codeinjection_head":"","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\\n什么是ghost？\\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\\n但是这并不影响我们搭建ghost服务器。吼吼吼~\\n\\n# 搭建准备\\n在[**阿里云**](https://www.aliyun.com/)上购买了一年的ECS服务器，配置如下:\\nCPU 1核；\\n内存 2G；\\n带宽 1Mbps；\\n硬盘 40G。\\n系统 CentOS 7.3 64位\\n\\n# 云服务器配置\\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\\n> 云服务器ECS——网络和安全——安全组——配置规则\\n![--------](/content/images/2017/09/--------.jpg)\\n![-------](/content/images/2017/09/-------.jpg)\\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\\n这里的设置主要是参考了[**阿里云的官方帮助文档**](https://help.aliyun.com/knowledge_detail/34403.html)。\\n# 安装ghost\\n\\n## 需要用到的东西\\n\\n* 一个完成A记录解析设置的域名（建议做好ICP备案）；（可选）\\n* 使用 [**MySQL**](https://www.mysql.com/) 做数据库服务；\\n* 使用 [**Nginx**](https://nginx.org/) 做网页服务器（Ghost的代理服务）；\\n* 使用 [**NodeJS**](https://nodejs.org/) 做后端服务；\\n* [**Ghost**](https://ghost.org/)一个开源的博客系统；\\n\\n## 基础设置\\n\\n### 查看一下系统信息：\\n\\n```\\ncat /etc/redhat-release  \\n```\\n> CentOS Linux release 7.4.1708 (Core)\\n\\n\\n### 更新一下系统，安装一些基础工具：\\n\\n阿里云的centos已经优化了yum的源，你也可以自行修改\\n```\\nyum update -y && yum upgrage -y && yum clean all\\n```\\ncurl, wget都是方便后边的下载\\nvim作为一个老牌Linux文本编辑工具，你值得拥有\\n```\\nyum install curl wget vim -y\\n```\\n\\n### 更新全系统的vim配置\\n```\\ncurl https://raw.githubusercontent.com/tonyc726/vim-for-server/master/vimrc > /etc/vimrc  \\n```\\n\\n## MySQL安装设置\\n由于CentOS7已经不带Mysql数据库了（默认的数据库是MariaDB，Mysql的一个分支），所以需要先安裝MySQL Repository（具体的版本号，可以参考 https://dev.mysql.com/downloads/repo/yum/）:\\n\\n### 安裝 MySQL Repository\\n```\\nrpm -Uvh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\\n```\\n### 安装MySQL数据库的服务器社区稳定版\\n```\\nyum install mysql-community-server -y\\n```\\n### 启动MySQL服务\\n```\\nsystemctl start mysqld.service\\n```\\n### 设置随系统自启动\\n```\\nsystemctl enable mysqld.service  \\n```\\n### 初始化设置\\n```\\nmysql_secure_installation\\n```\\n由于MySQL5.7默认会初始化Root用户的密码，所以在执行之前需要获取这个初始密码：\\n（本次设置中并没有执行如下操作，应为默认安装后第一次运行时不需密码，在初始化过程中会提示设置密码）\\n```\\ngrep \\\"password\\\" /var/log/mysqld.log  \\n```\\n\\n\\n### 创建Ghost需要的用户及数据库：\\n\\n运行以后输入刚才拿到的密码\\n```\\nmysql -uroot -p \\n```\\n添加新数据库blog，后面Ghost会用到\\n```\\nCREATE DATABASE blog;\\n```\\n添加新用户ghost（password替换为你需要的密码）\\n```\\nCREATE USER ghost IDENTIFIED BY 'password';\\n```\\n授予ghost用户在blog数据库上的所有权限\\n（password就是你刚才创建ghost账户时设置的密码）\\n```\\nGRANT ALL PRIVILEGES ON blog.* TO 'ghost'@'localhost' IDENTIFIED BY 'password';\\n```\\n刷新权限\\n（当执行过GRANT，CREATE USER，REVOKE命令之后，必须要执行刷新权限才能生效）\\n```\\nFLUSH PRIVILEGES;\\n```\\nCtrl+D 退出\\n\\n好了，以上就是MySQL部分\\n\\n## NodeJS安装设置\\n\\n推荐使用以下方式安装NodeJS\\n本系统使用V6稳定版，如需其它版本，你可以自行调整\\n```\\ncurl -sL https://rpm.nodesource.com/setup_6.x | sudo -E bash -  \\n```\\n### 安装NodeJS及其依赖包\\n```\\nyum install gcc-c++ make nodejs -y\\n```\\nNodeJS安装以后，默认已经自带的NPM\\n不过[**npm**](https://github.com/nodejs-tw/nodejs-wiki-book/blob/master/zh-tw/node_npm.rst)之前一直被吐槽，建议***升级最新版或者用yarn代替***\\n### 升级npm至最新版本(^v5.0.4)\\n```\\nnpm install npm@latest -g\\n```\\n### 安装yarn代替（推荐）\\n```\\ncurl --silent --location https://rpm.nodesource.com/setup_6.x | bash -  \\nyum install yarn -y\\n```\\n\\n### 测试一下\\n```\\nnode -v\\n```\\n\\n> v6.11.0\\n```\\nnpm -v\\n```\\n> v5.1.0\\n```\\nyarn -v\\n```\\n> v0.27.5\\n\\n这里有个坑，如果直接使用yum install nodejs -y也是可以安装NodeJS的，不过nodesource维护的更加好，而且可以升级npm。\\n\\n如果你已经看到了最后输出的信息，那么久代表NodeJS已经就绪了。\\n## Nginx安装配置\\n\\n### 直接安装即可\\n```\\nyum install nginx -y\\n```\\n### 立即启动\\n```\\nsystemctl start nginx\\n```\\n### 设置开机自启动\\n```\\nsystemctl enable nginx  \\n```\\n\\n现在，打开你的浏览器，输入你的公网IP，不出意外，你就已经可以看到一个Nginx的欢迎页面了。\\n\\n不过，出于后期的扩展或者安全性考虑，我们需要为系统创建一个名为www的用户，专门用于管理网站.\\n\\n### 反向代理80端口\\n\\n众所周知，网站基本都以 80 端口作为默认端口（除非你不想让别人访问你的网站），也就是说：访问域名或服务器 IP 地址，实际上是在访问该服务器的 80 端口。而 Ghost 博客默认运行在 2368 端口上。\\n\\n为了输入域名或服务器 IP 地址就可以访问到你的 Ghost 博客，需要将访问 80 端口的请求，反向代理到 Ghost 的 2368 端口上。\\n\\n进入 Nginx 配置目录：\\n    ```\\n    cd /etc/nginx/conf.d\\n    ```\\n新建 Ghost 博客的 Nginx 配置文件：\\n```\\nvim ghost.conf\\n```\\n按 i 输入以下内容：\\n\\n> server {  \\n>     listen 80;\\n>     server_name loyalsoldier.me //修改为域名或服务器 IP 地址;\\n>     gzip on;\\n>     gzip_types text/plain application/xml text/css application/javascript application/json application/font-woff application/font-woff2 application/vnd.ms-fontobject application/x-font-ttf font/opentype application/pdf image/png image/bmp image/gif image/jpeg image/webp image/svg+xml;\\n>     gzip_proxied no-cache no-store private expired auth;\\n>     gzip_vary on;\\n>     gzip_min_length 1024;\\n>     location / {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>     }\\n>     location ~* .*\\\\.(jpg|jpeg|bmp|png|gif|ico|js|css|eot|woff|woff2|svg|ttf|otf)$ {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>         add_header Cache-Control max-age=2592000;\\n>         expires    30d;\\n>         etag       on;\\n>     }\\n> }\\n\\n按 ESC 键结束编辑，输入 :wq 保存文件并退出编辑\\n使用 nginx -t 测试 Nginx 配置文件是否语法正确：\\n\\n```\\nsudo nginx -t\\n```\\n若输出的结果有 ok、successful 等字样，表示配置正确\\n\\n如果正确的话，重启Nginx服务\\n```\\nsystemctl restart nginx.service  \\n```\\n\\n\\n## 添加新用户\\n创建一个名为www的用户组\\n```\\nadduser www\\n```\\n\\n### 设置密码(请记录下你的密码，以后需要用到)\\n```\\npasswd www\\n```\\n\\n### 分配Root权限 - 让我们新创建的www用户拥有Root用户的权限\\n```\\ngpasswd -a www wheel\\n```\\n### 将nginx用户添加入www的用户组，方便后期的权限控制\\n```\\nusermod -a -G nginx,www nginx  \\n```\\n\\n## 安装ghost\\n以上就是Ghost需要用到的基础系统了，下面就来安装Ghost，新开一个Terminal窗口，用**www**账户登录：\\n```\\nssh www@xxx.xxx.xxx.xxx  \\n```\\n然后下载Ghost最新的代码。\\n\\n### 下载Ghost最新的稳定版\\n```\\ncurl -L https://ghost.org/zip/ghost-latest.zip -o ghost.zip\\n```\\n### 解压\\n```\\nunzip -uo ghost.zip -d ghost\\n```\\n### 进入Ghost的目录并安装生产环境的依赖\\n```\\ncd ghost && npm install --production\\n```\\nnpm install --production这个命令可能需要执行多次，也是由于国内网络的原因，导致下载速度很慢，每次都下载不完全，需要多次执行，直到成功安装完成。\\n### 修改Ghost的config，修改数据库配置\\n```\\nvim config.js  \\n```\\n完整的config.js配置如下：\\n\\n> var path = require('path'),  \\n>     config;\\n> \\n> config = {  \\n>     production: {\\n>         url: 'https://www.xxxx.xxx',（换成服务器ip或者申请的域名）\\n>         mail: {},\\n>         database: {\\n>             client: 'mysql',（前面安装的mysql数据库，这里一定要对应）\\n>             connection: {\\n>                 host     : '127.0.0.1',\\n>                 user     : 'ghost', //用户名\\n>                 password : 'password', //ghost的密码，之前设置的\\n>                 database : 'blog', //数据库名\\n>                 charset  : 'utf8'\\n>             },\\n>             debug: false\\n>         },\\n>         server: {\\n>             host: '127.0.0.1',\\n>             port: '2368'\\n>         }\\n>     }\\n> };\\n> \\n> module.exports = config;  \\n\\n除了ghost安装根目录下的这个配置文件，还要检查一下/ghost/core/server/config下面的相应的配置文件，将相应的项更改正确，端口由于使用反向代理，因此不要更改，主要看一下url和database下面相应的设置。\\n\\n### 安装knex-migrator\\n实际上这个时候用生产模式运行ghost会报错，提示没有安装knex-migrator。\\n安装之前需要先编辑ghost安装文件夹下的***MigrtorConfig.js***文件。\\n\\n\\n使用vim编写MigrtorConfig.js文件\\n\\n```\\nvim MigrtorConfig.js\\n```\\n\\n\\n> module.exports = {\\n>     database: {\\n>         client: 'mysql',\\n>         connection: {\\n>             host: '127.0.0.1',\\n>             user: 'ghost',（之前mysql设置时建立的用户名）\\n>             password: 'password',（改成mysql的ghost用户密码）\\n>             charset: 'utf8',\\n>             name: 'blog'（之前mysql设置时建立的数据库）\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version',\\n>  /**\\n>     subfolder: 'upgrades'  [default: versions]\\n>     （这一部分在执行时总出问题，就注释掉了）\\n>  */\\n> }\\n\\n（下面应该是数据库使用sqlite3时的设置，由于本方案使用的mysql，所以可以不用写进去）\\n> module.exports = {\\n>     database: {\\n>         client: 'sqlite3',\\n>         connection: {\\n>             filename: 'path/to/your.db'\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version'\\n> }\\n> \\n\\n使用下面指令安装：\\n```\\nnpm install -g knex-migrator\\n```\\n\\n由于国内网络的原因，这个命令也可能需要执行多次才能安装完，中间会提示校验错误，这个应该是下载没有完成，而网络链接断开了的原因，再执行一次就行，直到最后完成安装。\\n\\n\\n运行一下：\\n```\\nnpm start --production\\n```\\n如果看到下面的提示，证明你已经完成80%了：\\n\\n\\n> Ghost is running in production...  \\n> Your blog is now available on xx.xx.xx.xx  \\n> Ctrl+C to shut down  \\n\\n### 问题及解决方案\\n\\n#### 权限问题\\n在执行npm start --production的时候，遇到npm权限的问题，提示没有node_modules文件夹的写权限，这个时候使用sudo命令进行安装时又提示别的错误，最终采用\\nnpmjs.com网站中的[解决方法2](https://docs.npmjs.com/getting-started/fixing-npm-permissions)。\\n首先检查npm的路径：\\n```\\nnpm config get prefix\\n```\\n发现是/usr\\n然后改变npm的默认路径：\\n1.为全局安装路径建立文件夹：（操作均在www用户下完成）\\n```\\nmkdir ~/.npm-global\\n```\\n2.设置默认路径：\\n```\\nnpm config set prefix '~/.npm-global'\\n```\\n3.加入用户PATH：\\n打开用户家目录下面的profile文件，这里是.bash_profile，加入下面的语句：\\n```\\nexport PATH=~/.npm-global/bin:$PATH\\n```\\n4.更新profile文件\\n```\\nsource ~/.bash_profile\\n```\\n**检验**：全局下载文件包，**不要用sudo**，也可以省去检测\\n``` \\nnpm install -g jshint\\n```\\n也可以使用下面更改环境变量的方式代替2-4步：（如果不想更改profile文件的话）\\n```\\nNPM_CONFIG_PREFIX=~/.npm-global\\n```\\n#### 语法错误问题\\n> Syntax error: Unexpected token\\n\\n出现上面的语句就要检查一下相应的配置文件的语法是否有错误。\\n## 全局安装PM2\\n目前你是开着远程连接到你的服务器，一旦你把窗口关闭了，那么你刚才起的npm start --production可就悲剧了，如何避免呢，这时候我们就需要一个能帮我们在后台稳定运行node服务的工具了，目前比较火热的要数PM2了：\\n\\n```\\nyarn global add pm2 --prefix /usr/local\\n```\\n### 用PM2来启动Ghost的node服务\\n先切到ghost的目录，然后再运行\\n```\\nNODE_ENV=production pm2 start index.js --name \\\"blog\\\"\\n```\\n### 检查运行结果\\n```\\npm2 show blog  \\n```\\n\"}]],\"sections\":[[10,0]]}","page":false,"plaintext":"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\n什么是ghost？\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\n但是这并不影响我们搭建ghost服务器。吼吼吼~\n\n搭建准备\n在阿里云 [https://www.aliyun.com/]上购买了一年的ECS服务器，配置如下:\nCPU 1核；\n内存 2G；\n带宽 1Mbps；\n硬盘 40G。\n系统 CentOS 7.3 64位\n\n云服务器配置\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\n\n云服务器ECS——网络和安全——安全组——配置规则\n\n\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\n这里的设置主要是参考了阿里云的官方帮助文档 [https://help.aliyun.com/knowledge_detail/34403.html]。","published_at":"2017-09-28T13:41:32.000Z","slug":"shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost","status":"published","title":"搭建Ghost服务器","updated_at":"2017-09-29T02:13:44.000Z","updated_by":"1","tags":{"0":{"id":"59ccb425a744810195a3dc01","name":"技术","slug":"ji-zhu","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T08:34:45.000Z","updated_at":"2017-09-28T08:34:45.000Z","created_by":"1","updated_by":"1"},"1":{"id":"59cd12bfa744810195a3dc06","name":"博客","slug":"bo-ke","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T15:18:23.000Z","updated_at":"2017-09-28T15:18:23.000Z","created_by":"1","updated_by":"1"}},"author_id":"1"}}},"query":{"include":"tags"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"http://47.95.197.107","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/*","content-type":"application/json; charset=utf-8","etag":"W/\"49d1-6iryqdxC6nyo6rLahjIXy/fS9Ng\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"80ms"},"msg":"","time":"2017-09-29T02:14:53.116Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"85479f80-a4bc-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/posts/59ccf296a744810195a3dc03/?include=tags","method":"PUT","originalUrl":"/ghost/api/v0.1/posts/59ccf296a744810195a3dc03/?include=tags","params":{"id":"59ccf296a744810195a3dc03"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","content-length":"19005","origin":"http://47.95.197.107","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"1.9","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{"posts":{"0":{"id":"59ccf296a744810195a3dc03","created_at":"2017-09-28T13:01:10.000Z","created_by":"1","featured":false,"feature_image":"/content/images/2017/09/ghost.png","codeinjection_foot":"","codeinjection_head":"","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\\n什么是ghost？\\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\\n但是这并不影响我们搭建ghost服务器。吼吼吼~\\n\\n# 搭建准备\\n在[**阿里云**](https://www.aliyun.com/)上购买了一年的ECS服务器，配置如下:\\nCPU 1核；\\n内存 2G；\\n带宽 1Mbps；\\n硬盘 40G。\\n系统 CentOS 7.3 64位\\n\\n# 云服务器配置\\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\\n> 云服务器ECS——网络和安全——安全组——配置规则\\n![--------](/content/images/2017/09/--------.jpg)\\n![-------](/content/images/2017/09/-------.jpg)\\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\\n这里的设置主要是参考了[**阿里云的官方帮助文档**](https://help.aliyun.com/knowledge_detail/34403.html)。\\n# 安装ghost\\n\\n## 需要用到的东西\\n\\n* 一个完成A记录解析设置的域名（建议做好ICP备案）；（可选）\\n* 使用 [**MySQL**](https://www.mysql.com/) 做数据库服务；\\n* 使用 [**Nginx**](https://nginx.org/) 做网页服务器（Ghost的代理服务）；\\n* 使用 [**NodeJS**](https://nodejs.org/) 做后端服务；\\n* [**Ghost**](https://ghost.org/)一个开源的博客系统；\\n\\n## 基础设置\\n\\n### 查看一下系统信息：\\n\\n```\\ncat /etc/redhat-release  \\n```\\n> CentOS Linux release 7.4.1708 (Core)\\n\\n\\n### 更新一下系统，安装一些基础工具：\\n\\n阿里云的centos已经优化了yum的源，你也可以自行修改\\n```\\nyum update -y && yum upgrage -y && yum clean all\\n```\\ncurl, wget都是方便后边的下载\\nvim作为一个老牌Linux文本编辑工具，你值得拥有\\n```\\nyum install curl wget vim -y\\n```\\n\\n### 更新全系统的vim配置\\n```\\ncurl https://raw.githubusercontent.com/tonyc726/vim-for-server/master/vimrc > /etc/vimrc  \\n```\\n\\n## MySQL安装设置\\n由于CentOS7已经不带Mysql数据库了（默认的数据库是MariaDB，Mysql的一个分支），所以需要先安裝MySQL Repository（具体的版本号，可以参考 https://dev.mysql.com/downloads/repo/yum/）:\\n\\n### 安裝 MySQL Repository\\n```\\nrpm -Uvh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\\n```\\n### 安装MySQL数据库的服务器社区稳定版\\n```\\nyum install mysql-community-server -y\\n```\\n### 启动MySQL服务\\n```\\nsystemctl start mysqld.service\\n```\\n### 设置随系统自启动\\n```\\nsystemctl enable mysqld.service  \\n```\\n### 初始化设置\\n```\\nmysql_secure_installation\\n```\\n由于MySQL5.7默认会初始化Root用户的密码，所以在执行之前需要获取这个初始密码：\\n（本次设置中并没有执行如下操作，应为默认安装后第一次运行时不需密码，在初始化过程中会提示设置密码）\\n```\\ngrep \\\"password\\\" /var/log/mysqld.log  \\n```\\n\\n\\n### 创建Ghost需要的用户及数据库：\\n\\n运行以后输入刚才拿到的密码\\n```\\nmysql -uroot -p \\n```\\n添加新数据库blog，后面Ghost会用到\\n```\\nCREATE DATABASE blog;\\n```\\n添加新用户ghost（password替换为你需要的密码）\\n```\\nCREATE USER ghost IDENTIFIED BY 'password';\\n```\\n授予ghost用户在blog数据库上的所有权限\\n（password就是你刚才创建ghost账户时设置的密码）\\n```\\nGRANT ALL PRIVILEGES ON blog.* TO 'ghost'@'localhost' IDENTIFIED BY 'password';\\n```\\n刷新权限\\n（当执行过GRANT，CREATE USER，REVOKE命令之后，必须要执行刷新权限才能生效）\\n```\\nFLUSH PRIVILEGES;\\n```\\nCtrl+D 退出\\n\\n好了，以上就是MySQL部分\\n\\n## NodeJS安装设置\\n\\n推荐使用以下方式安装NodeJS\\n本系统使用V6稳定版，如需其它版本，你可以自行调整\\n```\\ncurl -sL https://rpm.nodesource.com/setup_6.x | sudo -E bash -  \\n```\\n### 安装NodeJS及其依赖包\\n```\\nyum install gcc-c++ make nodejs -y\\n```\\nNodeJS安装以后，默认已经自带的NPM\\n不过[**npm**](https://github.com/nodejs-tw/nodejs-wiki-book/blob/master/zh-tw/node_npm.rst)之前一直被吐槽，建议***升级最新版或者用yarn代替***\\n### 升级npm至最新版本(^v5.0.4)\\n```\\nnpm install npm@latest -g\\n```\\n### 安装yarn代替（推荐）\\n```\\ncurl --silent --location https://rpm.nodesource.com/setup_6.x | bash -  \\nyum install yarn -y\\n```\\n\\n### 测试一下\\n```\\nnode -v\\n```\\n\\n> v6.11.0\\n```\\nnpm -v\\n```\\n> v5.1.0\\n```\\nyarn -v\\n```\\n> v0.27.5\\n\\n这里有个坑，如果直接使用yum install nodejs -y也是可以安装NodeJS的，不过nodesource维护的更加好，而且可以升级npm。\\n\\n如果你已经看到了最后输出的信息，那么久代表NodeJS已经就绪了。\\n## Nginx安装配置\\n\\n### 直接安装即可\\n```\\nyum install nginx -y\\n```\\n### 立即启动\\n```\\nsystemctl start nginx\\n```\\n### 设置开机自启动\\n```\\nsystemctl enable nginx  \\n```\\n\\n现在，打开你的浏览器，输入你的公网IP，不出意外，你就已经可以看到一个Nginx的欢迎页面了。\\n\\n不过，出于后期的扩展或者安全性考虑，我们需要为系统创建一个名为www的用户，专门用于管理网站.\\n\\n### 反向代理80端口\\n\\n众所周知，网站基本都以 80 端口作为默认端口（除非你不想让别人访问你的网站），也就是说：访问域名或服务器 IP 地址，实际上是在访问该服务器的 80 端口。而 Ghost 博客默认运行在 2368 端口上。\\n\\n为了输入域名或服务器 IP 地址就可以访问到你的 Ghost 博客，需要将访问 80 端口的请求，反向代理到 Ghost 的 2368 端口上。\\n\\n进入 Nginx 配置目录：\\n    ```\\n    cd /etc/nginx/conf.d\\n    ```\\n新建 Ghost 博客的 Nginx 配置文件：\\n```\\nvim ghost.conf\\n```\\n按 i 输入以下内容：\\n\\n> server {  \\n>     listen 80;\\n>     server_name loyalsoldier.me //修改为域名或服务器 IP 地址;\\n>     gzip on;\\n>     gzip_types text/plain application/xml text/css application/javascript application/json application/font-woff application/font-woff2 application/vnd.ms-fontobject application/x-font-ttf font/opentype application/pdf image/png image/bmp image/gif image/jpeg image/webp image/svg+xml;\\n>     gzip_proxied no-cache no-store private expired auth;\\n>     gzip_vary on;\\n>     gzip_min_length 1024;\\n>     location / {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>     }\\n>     location ~* .*\\\\.(jpg|jpeg|bmp|png|gif|ico|js|css|eot|woff|woff2|svg|ttf|otf)$ {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>         add_header Cache-Control max-age=2592000;\\n>         expires    30d;\\n>         etag       on;\\n>     }\\n> }\\n\\n按 ESC 键结束编辑，输入 :wq 保存文件并退出编辑\\n使用 nginx -t 测试 Nginx 配置文件是否语法正确：\\n\\n```\\nsudo nginx -t\\n```\\n若输出的结果有 ok、successful 等字样，表示配置正确\\n\\n如果正确的话，重启Nginx服务\\n```\\nsystemctl restart nginx.service  \\n```\\n\\n\\n## 添加新用户\\n创建一个名为www的用户组\\n```\\nadduser www\\n```\\n\\n### 设置密码(请记录下你的密码，以后需要用到)\\n```\\npasswd www\\n```\\n\\n### 分配Root权限 - 让我们新创建的www用户拥有Root用户的权限\\n```\\ngpasswd -a www wheel\\n```\\n### 将nginx用户添加入www的用户组，方便后期的权限控制\\n```\\nusermod -a -G nginx,www nginx  \\n```\\n\\n## 安装ghost\\n以上就是Ghost需要用到的基础系统了，下面就来安装Ghost，新开一个Terminal窗口，用**www**账户登录：\\n```\\nssh www@xxx.xxx.xxx.xxx  \\n```\\n然后下载Ghost最新的代码。\\n\\n### 下载Ghost最新的稳定版\\n```\\ncurl -L https://ghost.org/zip/ghost-latest.zip -o ghost.zip\\n```\\n### 解压\\n```\\nunzip -uo ghost.zip -d ghost\\n```\\n### 进入Ghost的目录并安装生产环境的依赖\\n```\\ncd ghost && npm install --production\\n```\\nnpm install --production这个命令可能需要执行多次，也是由于国内网络的原因，导致下载速度很慢，每次都下载不完全，需要多次执行，直到成功安装完成。\\n### 修改Ghost的config，修改数据库配置\\n```\\nvim config.js  \\n```\\n完整的config.js配置如下：\\n\\n> var path = require('path'),  \\n>     config;\\n> \\n> config = {  \\n>     production: {\\n>         url: 'https://www.xxxx.xxx',（换成服务器ip或者申请的域名）\\n>         mail: {},\\n>         database: {\\n>             client: 'mysql',（前面安装的mysql数据库，这里一定要对应）\\n>             connection: {\\n>                 host     : '127.0.0.1',\\n>                 user     : 'ghost', //用户名\\n>                 password : 'password', //ghost的密码，之前设置的\\n>                 database : 'blog', //数据库名\\n>                 charset  : 'utf8'\\n>             },\\n>             debug: false\\n>         },\\n>         server: {\\n>             host: '127.0.0.1',\\n>             port: '2368'\\n>         }\\n>     }\\n> };\\n> \\n> module.exports = config;  \\n\\n除了ghost安装根目录下的这个配置文件，还要检查一下/ghost/core/server/config下面的相应的配置文件，将相应的项更改正确，端口由于使用反向代理，因此不要更改，主要看一下url和database下面相应的设置。\\n\\n### 安装knex-migrator\\n实际上这个时候用生产模式运行ghost会报错，提示没有安装knex-migrator。\\n安装之前需要先编辑ghost安装文件夹下的***MigrtorConfig.js***文件。\\n\\n\\n使用vim编写MigrtorConfig.js文件：\\n\\n```\\nvim MigrtorConfig.js\\n```\\n\\n配置文件格式参考[**这里**](https://github.com/TryGhost/knex-migrator)：\\n\\n> module.exports = {\\n>     database: {\\n>         client: 'mysql',\\n>         connection: {\\n>             host: '127.0.0.1',\\n>             user: 'ghost',（之前mysql设置时建立的用户名）\\n>             password: 'password',（改成mysql的ghost用户密码）\\n>             charset: 'utf8',\\n>             name: 'blog'（之前mysql设置时建立的数据库）\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version',\\n>  /**\\n>     subfolder: 'upgrades'  [default: versions]\\n>     （这一部分在执行时总出问题，就注释掉了）\\n>  */\\n> }\\n\\n（下面应该是数据库使用sqlite3时的设置，由于本方案使用的mysql，所以可以不用写进去）\\n> module.exports = {\\n>     database: {\\n>         client: 'sqlite3',\\n>         connection: {\\n>             filename: 'path/to/your.db'\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version'\\n> }\\n> \\n\\n使用下面指令安装：\\n```\\nnpm install -g knex-migrator\\n```\\n\\n由于国内网络的原因，这个命令也可能需要执行多次才能安装完，中间会提示校验错误，这个应该是下载没有完成，而网络链接断开了的原因，再执行一次就行，直到最后完成安装。\\n\\n\\n运行一下：\\n```\\nnpm start --production\\n```\\n如果看到下面的提示，证明你已经完成80%了：\\n\\n\\n> Ghost is running in production...  \\n> Your blog is now available on xx.xx.xx.xx  \\n> Ctrl+C to shut down  \\n\\n### 问题及解决方案\\n\\n#### 权限问题\\n在执行npm start --production的时候，遇到npm权限的问题，提示没有node_modules文件夹的写权限，这个时候使用sudo命令进行安装时又提示别的错误，最终采用\\nnpmjs.com网站中的[解决方法2](https://docs.npmjs.com/getting-started/fixing-npm-permissions)。\\n首先检查npm的路径：\\n```\\nnpm config get prefix\\n```\\n发现是/usr\\n然后改变npm的默认路径：\\n1.为全局安装路径建立文件夹：（操作均在www用户下完成）\\n```\\nmkdir ~/.npm-global\\n```\\n2.设置默认路径：\\n```\\nnpm config set prefix '~/.npm-global'\\n```\\n3.加入用户PATH：\\n打开用户家目录下面的profile文件，这里是.bash_profile，加入下面的语句：\\n```\\nexport PATH=~/.npm-global/bin:$PATH\\n```\\n4.更新profile文件\\n```\\nsource ~/.bash_profile\\n```\\n**检验**：全局下载文件包，**不要用sudo**，也可以省去检测\\n``` \\nnpm install -g jshint\\n```\\n也可以使用下面更改环境变量的方式代替2-4步：（如果不想更改profile文件的话）\\n```\\nNPM_CONFIG_PREFIX=~/.npm-global\\n```\\n#### 语法错误问题\\n> Syntax error: Unexpected token\\n\\n出现上面的语句就要检查一下相应的配置文件的语法是否有错误。\\n## 全局安装PM2\\n目前你是开着远程连接到你的服务器，一旦你把窗口关闭了，那么你刚才起的npm start --production可就悲剧了，如何避免呢，这时候我们就需要一个能帮我们在后台稳定运行node服务的工具了，目前比较火热的要数PM2了：\\n\\n```\\nyarn global add pm2 --prefix /usr/local\\n```\\n### 用PM2来启动Ghost的node服务\\n先切到ghost的目录，然后再运行\\n```\\nNODE_ENV=production pm2 start index.js --name \\\"blog\\\"\\n```\\n### 检查运行结果\\n```\\npm2 show blog  \\n```\\n# 参考资料：\\n[《NPM 套件管理工具》](https://github.com/nodejs-tw/nodejs-wiki-book/blob/master/zh-tw/node_npm.rst)\\n[《Ghost 1.0+ 安装（非ghost-cli方式）》](https://www.ihx.me/ghost1-6insallnocli/)\\n[《knex-migrator-Github》](https://github.com/TryGhost/knex-migrator)\\n\\n\"}]],\"sections\":[[10,0]]}","page":false,"plaintext":"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\n什么是ghost？\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\n但是这并不影响我们搭建ghost服务器。吼吼吼~\n\n搭建准备\n在阿里云 [https://www.aliyun.com/]上购买了一年的ECS服务器，配置如下:\nCPU 1核；\n内存 2G；\n带宽 1Mbps；\n硬盘 40G。\n系统 CentOS 7.3 64位\n\n云服务器配置\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\n\n云服务器ECS——网络和安全——安全组——配置规则\n\n\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\n这里的设置主要是参考了阿里云的官方帮助文档 [https://help.aliyun.com/knowledge_detail/34403.html]。","published_at":"2017-09-28T13:41:32.000Z","slug":"shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost","status":"published","title":"搭建Ghost服务器","updated_at":"2017-09-29T02:14:53.000Z","updated_by":"1","tags":{"0":{"id":"59ccb425a744810195a3dc01","name":"技术","slug":"ji-zhu","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T08:34:45.000Z","updated_at":"2017-09-28T08:34:45.000Z","created_by":"1","updated_by":"1"},"1":{"id":"59cd12bfa744810195a3dc06","name":"博客","slug":"bo-ke","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T15:18:23.000Z","updated_at":"2017-09-28T15:18:23.000Z","created_by":"1","updated_by":"1"}},"author_id":"1"}}},"query":{"include":"tags"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"http://47.95.197.107","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/*","content-type":"application/json; charset=utf-8","etag":"W/\"4bb4-UfzWKSv5uRdQtdoDaODeu4vCnvo\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"57ms"},"msg":"","time":"2017-09-29T02:18:45.556Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"86c62930-a4bc-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/posts/59ccf296a744810195a3dc03/?include=tags","method":"PUT","originalUrl":"/ghost/api/v0.1/posts/59ccf296a744810195a3dc03/?include=tags","params":{"id":"59ccf296a744810195a3dc03"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","content-length":"19005","origin":"http://47.95.197.107","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"1.9","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{"posts":{"0":{"id":"59ccf296a744810195a3dc03","created_at":"2017-09-28T13:01:10.000Z","created_by":"1","featured":false,"feature_image":"/content/images/2017/09/ghost.png","codeinjection_foot":"","codeinjection_head":"","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\\n什么是ghost？\\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\\n但是这并不影响我们搭建ghost服务器。吼吼吼~\\n\\n# 搭建准备\\n在[**阿里云**](https://www.aliyun.com/)上购买了一年的ECS服务器，配置如下:\\nCPU 1核；\\n内存 2G；\\n带宽 1Mbps；\\n硬盘 40G。\\n系统 CentOS 7.3 64位\\n\\n# 云服务器配置\\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\\n> 云服务器ECS——网络和安全——安全组——配置规则\\n![--------](/content/images/2017/09/--------.jpg)\\n![-------](/content/images/2017/09/-------.jpg)\\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\\n这里的设置主要是参考了[**阿里云的官方帮助文档**](https://help.aliyun.com/knowledge_detail/34403.html)。\\n# 安装ghost\\n\\n## 需要用到的东西\\n\\n* 一个完成A记录解析设置的域名（建议做好ICP备案）；（可选）\\n* 使用 [**MySQL**](https://www.mysql.com/) 做数据库服务；\\n* 使用 [**Nginx**](https://nginx.org/) 做网页服务器（Ghost的代理服务）；\\n* 使用 [**NodeJS**](https://nodejs.org/) 做后端服务；\\n* [**Ghost**](https://ghost.org/)一个开源的博客系统；\\n\\n## 基础设置\\n\\n### 查看一下系统信息：\\n\\n```\\ncat /etc/redhat-release  \\n```\\n> CentOS Linux release 7.4.1708 (Core)\\n\\n\\n### 更新一下系统，安装一些基础工具：\\n\\n阿里云的centos已经优化了yum的源，你也可以自行修改\\n```\\nyum update -y && yum upgrage -y && yum clean all\\n```\\ncurl, wget都是方便后边的下载\\nvim作为一个老牌Linux文本编辑工具，你值得拥有\\n```\\nyum install curl wget vim -y\\n```\\n\\n### 更新全系统的vim配置\\n```\\ncurl https://raw.githubusercontent.com/tonyc726/vim-for-server/master/vimrc > /etc/vimrc  \\n```\\n\\n## MySQL安装设置\\n由于CentOS7已经不带Mysql数据库了（默认的数据库是MariaDB，Mysql的一个分支），所以需要先安裝MySQL Repository（具体的版本号，可以参考 https://dev.mysql.com/downloads/repo/yum/）:\\n\\n### 安裝 MySQL Repository\\n```\\nrpm -Uvh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\\n```\\n### 安装MySQL数据库的服务器社区稳定版\\n```\\nyum install mysql-community-server -y\\n```\\n### 启动MySQL服务\\n```\\nsystemctl start mysqld.service\\n```\\n### 设置随系统自启动\\n```\\nsystemctl enable mysqld.service  \\n```\\n### 初始化设置\\n```\\nmysql_secure_installation\\n```\\n由于MySQL5.7默认会初始化Root用户的密码，所以在执行之前需要获取这个初始密码：\\n（本次设置中并没有执行如下操作，应为默认安装后第一次运行时不需密码，在初始化过程中会提示设置密码）\\n```\\ngrep \\\"password\\\" /var/log/mysqld.log  \\n```\\n\\n\\n### 创建Ghost需要的用户及数据库：\\n\\n运行以后输入刚才拿到的密码\\n```\\nmysql -uroot -p \\n```\\n添加新数据库blog，后面Ghost会用到\\n```\\nCREATE DATABASE blog;\\n```\\n添加新用户ghost（password替换为你需要的密码）\\n```\\nCREATE USER ghost IDENTIFIED BY 'password';\\n```\\n授予ghost用户在blog数据库上的所有权限\\n（password就是你刚才创建ghost账户时设置的密码）\\n```\\nGRANT ALL PRIVILEGES ON blog.* TO 'ghost'@'localhost' IDENTIFIED BY 'password';\\n```\\n刷新权限\\n（当执行过GRANT，CREATE USER，REVOKE命令之后，必须要执行刷新权限才能生效）\\n```\\nFLUSH PRIVILEGES;\\n```\\nCtrl+D 退出\\n\\n好了，以上就是MySQL部分\\n\\n## NodeJS安装设置\\n\\n推荐使用以下方式安装NodeJS\\n本系统使用V6稳定版，如需其它版本，你可以自行调整\\n```\\ncurl -sL https://rpm.nodesource.com/setup_6.x | sudo -E bash -  \\n```\\n### 安装NodeJS及其依赖包\\n```\\nyum install gcc-c++ make nodejs -y\\n```\\nNodeJS安装以后，默认已经自带的NPM\\n不过[**npm**](https://github.com/nodejs-tw/nodejs-wiki-book/blob/master/zh-tw/node_npm.rst)之前一直被吐槽，建议***升级最新版或者用yarn代替***\\n### 升级npm至最新版本(^v5.0.4)\\n```\\nnpm install npm@latest -g\\n```\\n### 安装yarn代替（推荐）\\n```\\ncurl --silent --location https://rpm.nodesource.com/setup_6.x | bash -  \\nyum install yarn -y\\n```\\n\\n### 测试一下\\n```\\nnode -v\\n```\\n\\n> v6.11.0\\n```\\nnpm -v\\n```\\n> v5.1.0\\n```\\nyarn -v\\n```\\n> v0.27.5\\n\\n这里有个坑，如果直接使用yum install nodejs -y也是可以安装NodeJS的，不过nodesource维护的更加好，而且可以升级npm。\\n\\n如果你已经看到了最后输出的信息，那么久代表NodeJS已经就绪了。\\n## Nginx安装配置\\n\\n### 直接安装即可\\n```\\nyum install nginx -y\\n```\\n### 立即启动\\n```\\nsystemctl start nginx\\n```\\n### 设置开机自启动\\n```\\nsystemctl enable nginx  \\n```\\n\\n现在，打开你的浏览器，输入你的公网IP，不出意外，你就已经可以看到一个Nginx的欢迎页面了。\\n\\n不过，出于后期的扩展或者安全性考虑，我们需要为系统创建一个名为www的用户，专门用于管理网站.\\n\\n### 反向代理80端口\\n\\n众所周知，网站基本都以 80 端口作为默认端口（除非你不想让别人访问你的网站），也就是说：访问域名或服务器 IP 地址，实际上是在访问该服务器的 80 端口。而 Ghost 博客默认运行在 2368 端口上。\\n\\n为了输入域名或服务器 IP 地址就可以访问到你的 Ghost 博客，需要将访问 80 端口的请求，反向代理到 Ghost 的 2368 端口上。\\n\\n进入 Nginx 配置目录：\\n    ```\\n    cd /etc/nginx/conf.d\\n    ```\\n新建 Ghost 博客的 Nginx 配置文件：\\n```\\nvim ghost.conf\\n```\\n按 i 输入以下内容：\\n\\n> server {  \\n>     listen 80;\\n>     server_name loyalsoldier.me //修改为域名或服务器 IP 地址;\\n>     gzip on;\\n>     gzip_types text/plain application/xml text/css application/javascript application/json application/font-woff application/font-woff2 application/vnd.ms-fontobject application/x-font-ttf font/opentype application/pdf image/png image/bmp image/gif image/jpeg image/webp image/svg+xml;\\n>     gzip_proxied no-cache no-store private expired auth;\\n>     gzip_vary on;\\n>     gzip_min_length 1024;\\n>     location / {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>     }\\n>     location ~* .*\\\\.(jpg|jpeg|bmp|png|gif|ico|js|css|eot|woff|woff2|svg|ttf|otf)$ {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>         add_header Cache-Control max-age=2592000;\\n>         expires    30d;\\n>         etag       on;\\n>     }\\n> }\\n\\n按 ESC 键结束编辑，输入 :wq 保存文件并退出编辑\\n使用 nginx -t 测试 Nginx 配置文件是否语法正确：\\n\\n```\\nsudo nginx -t\\n```\\n若输出的结果有 ok、successful 等字样，表示配置正确\\n\\n如果正确的话，重启Nginx服务\\n```\\nsystemctl restart nginx.service  \\n```\\n\\n\\n## 添加新用户\\n创建一个名为www的用户组\\n```\\nadduser www\\n```\\n\\n### 设置密码(请记录下你的密码，以后需要用到)\\n```\\npasswd www\\n```\\n\\n### 分配Root权限 - 让我们新创建的www用户拥有Root用户的权限\\n```\\ngpasswd -a www wheel\\n```\\n### 将nginx用户添加入www的用户组，方便后期的权限控制\\n```\\nusermod -a -G nginx,www nginx  \\n```\\n\\n## 安装ghost\\n以上就是Ghost需要用到的基础系统了，下面就来安装Ghost，新开一个Terminal窗口，用**www**账户登录：\\n```\\nssh www@xxx.xxx.xxx.xxx  \\n```\\n然后下载Ghost最新的代码。\\n\\n### 下载Ghost最新的稳定版\\n```\\ncurl -L https://ghost.org/zip/ghost-latest.zip -o ghost.zip\\n```\\n### 解压\\n```\\nunzip -uo ghost.zip -d ghost\\n```\\n### 进入Ghost的目录并安装生产环境的依赖\\n```\\ncd ghost && npm install --production\\n```\\nnpm install --production这个命令可能需要执行多次，也是由于国内网络的原因，导致下载速度很慢，每次都下载不完全，需要多次执行，直到成功安装完成。\\n### 修改Ghost的config，修改数据库配置\\n```\\nvim config.js  \\n```\\n完整的config.js配置如下：\\n\\n> var path = require('path'),  \\n>     config;\\n> \\n> config = {  \\n>     production: {\\n>         url: 'https://www.xxxx.xxx',（换成服务器ip或者申请的域名）\\n>         mail: {},\\n>         database: {\\n>             client: 'mysql',（前面安装的mysql数据库，这里一定要对应）\\n>             connection: {\\n>                 host     : '127.0.0.1',\\n>                 user     : 'ghost', //用户名\\n>                 password : 'password', //ghost的密码，之前设置的\\n>                 database : 'blog', //数据库名\\n>                 charset  : 'utf8'\\n>             },\\n>             debug: false\\n>         },\\n>         server: {\\n>             host: '127.0.0.1',\\n>             port: '2368'\\n>         }\\n>     }\\n> };\\n> \\n> module.exports = config;  \\n\\n除了ghost安装根目录下的这个配置文件，还要检查一下/ghost/core/server/config下面的相应的配置文件，将相应的项更改正确，端口由于使用反向代理，因此不要更改，主要看一下url和database下面相应的设置。\\n\\n### 安装knex-migrator\\n实际上这个时候用生产模式运行ghost会报错，提示没有安装knex-migrator。\\n安装之前需要先编辑ghost安装文件夹下的***MigrtorConfig.js***文件。\\n\\n\\n使用vim编写MigrtorConfig.js文件：\\n\\n```\\nvim MigrtorConfig.js\\n```\\n\\n配置文件格式参考[**这里**](https://github.com/TryGhost/knex-migrator)：\\n\\n> module.exports = {\\n>     database: {\\n>         client: 'mysql',\\n>         connection: {\\n>             host: '127.0.0.1',\\n>             user: 'ghost',（之前mysql设置时建立的用户名）\\n>             password: 'password',（改成mysql的ghost用户密码）\\n>             charset: 'utf8',\\n>             name: 'blog'（之前mysql设置时建立的数据库）\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version',\\n>  /**\\n>     subfolder: 'upgrades'  [default: versions]\\n>     （这一部分在执行时总出问题，就注释掉了）\\n>  */\\n> }\\n\\n（下面应该是数据库使用sqlite3时的设置，由于本方案使用的mysql，所以可以不用写进去）\\n> module.exports = {\\n>     database: {\\n>         client: 'sqlite3',\\n>         connection: {\\n>             filename: 'path/to/your.db'\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version'\\n> }\\n> \\n\\n使用下面指令安装：\\n```\\nnpm install -g knex-migrator\\n```\\n\\n由于国内网络的原因，这个命令也可能需要执行多次才能安装完，中间会提示校验错误，这个应该是下载没有完成，而网络链接断开了的原因，再执行一次就行，直到最后完成安装。\\n\\n\\n运行一下：\\n```\\nnpm start --production\\n```\\n如果看到下面的提示，证明你已经完成80%了：\\n\\n\\n> Ghost is running in production...  \\n> Your blog is now available on xx.xx.xx.xx  \\n> Ctrl+C to shut down  \\n\\n### 问题及解决方案\\n\\n#### 权限问题\\n在执行npm start --production的时候，遇到npm权限的问题，提示没有node_modules文件夹的写权限，这个时候使用sudo命令进行安装时又提示别的错误，最终采用\\nnpmjs.com网站中的[解决方法2](https://docs.npmjs.com/getting-started/fixing-npm-permissions)。\\n首先检查npm的路径：\\n```\\nnpm config get prefix\\n```\\n发现是/usr\\n然后改变npm的默认路径：\\n1.为全局安装路径建立文件夹：（操作均在www用户下完成）\\n```\\nmkdir ~/.npm-global\\n```\\n2.设置默认路径：\\n```\\nnpm config set prefix '~/.npm-global'\\n```\\n3.加入用户PATH：\\n打开用户家目录下面的profile文件，这里是.bash_profile，加入下面的语句：\\n```\\nexport PATH=~/.npm-global/bin:$PATH\\n```\\n4.更新profile文件\\n```\\nsource ~/.bash_profile\\n```\\n**检验**：全局下载文件包，**不要用sudo**，也可以省去检测\\n``` \\nnpm install -g jshint\\n```\\n也可以使用下面更改环境变量的方式代替2-4步：（如果不想更改profile文件的话）\\n```\\nNPM_CONFIG_PREFIX=~/.npm-global\\n```\\n#### 语法错误问题\\n> Syntax error: Unexpected token\\n\\n出现上面的语句就要检查一下相应的配置文件的语法是否有错误。\\n## 全局安装PM2\\n目前你是开着远程连接到你的服务器，一旦你把窗口关闭了，那么你刚才起的npm start --production可就悲剧了，如何避免呢，这时候我们就需要一个能帮我们在后台稳定运行node服务的工具了，目前比较火热的要数PM2了：\\n\\n```\\nyarn global add pm2 --prefix /usr/local\\n```\\n### 用PM2来启动Ghost的node服务\\n先切到ghost的目录，然后再运行\\n```\\nNODE_ENV=production pm2 start index.js --name \\\"blog\\\"\\n```\\n### 检查运行结果\\n```\\npm2 show blog  \\n```\\n# 参考资料：\\n[《NPM 套件管理工具》](https://github.com/nodejs-tw/nodejs-wiki-book/blob/master/zh-tw/node_npm.rst)\\n[《Ghost 1.0+ 安装（非ghost-cli方式）》](https://www.ihx.me/ghost1-6insallnocli/)\\n[《knex-migrator-Github》](https://github.com/TryGhost/knex-migrator)\\n\\n\"}]],\"sections\":[[10,0]]}","page":false,"plaintext":"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\n什么是ghost？\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\n但是这并不影响我们搭建ghost服务器。吼吼吼~\n\n搭建准备\n在阿里云 [https://www.aliyun.com/]上购买了一年的ECS服务器，配置如下:\nCPU 1核；\n内存 2G；\n带宽 1Mbps；\n硬盘 40G。\n系统 CentOS 7.3 64位\n\n云服务器配置\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\n\n云服务器ECS——网络和安全——安全组——配置规则\n\n\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\n这里的设置主要是参考了阿里云的官方帮助文档 [https://help.aliyun.com/knowledge_detail/34403.html]。","published_at":"2017-09-28T13:41:32.000Z","slug":"shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost","status":"published","title":"搭建Ghost服务器","updated_at":"2017-09-29T02:18:45.000Z","updated_by":"1","tags":{"0":{"id":"59ccb425a744810195a3dc01","name":"技术","slug":"ji-zhu","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T08:34:45.000Z","updated_at":"2017-09-28T08:34:45.000Z","created_by":"1","updated_by":"1"},"1":{"id":"59cd12bfa744810195a3dc06","name":"博客","slug":"bo-ke","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T15:18:23.000Z","updated_at":"2017-09-28T15:18:23.000Z","created_by":"1","updated_by":"1"}},"author_id":"1"}}},"query":{"include":"tags"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"http://47.95.197.107","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/*","content-type":"application/json; charset=utf-8","etag":"W/\"4bb4-yhuiCJZD6Di/36ijjS2YwDuxrhs\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"47ms"},"msg":"","time":"2017-09-29T02:18:48.052Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"c99d0fd0-a4bc-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/posts/59ccf296a744810195a3dc03/?include=tags","method":"PUT","originalUrl":"/ghost/api/v0.1/posts/59ccf296a744810195a3dc03/?include=tags","params":{"id":"59ccf296a744810195a3dc03"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","content-length":"19173","origin":"http://47.95.197.107","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"1.9","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{"posts":{"0":{"id":"59ccf296a744810195a3dc03","created_at":"2017-09-28T13:01:10.000Z","created_by":"1","featured":false,"feature_image":"/content/images/2017/09/ghost.png","codeinjection_foot":"","codeinjection_head":"","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\\n什么是ghost？\\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\\n但是这并不影响我们搭建ghost服务器。吼吼吼~\\n\\n# 搭建准备\\n在[**阿里云**](https://www.aliyun.com/)上购买了一年的ECS服务器，配置如下:\\nCPU 1核；\\n内存 2G；\\n带宽 1Mbps；\\n硬盘 40G。\\n系统 CentOS 7.3 64位\\n\\n# 云服务器配置\\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\\n> 云服务器ECS——网络和安全——安全组——配置规则\\n![--------](/content/images/2017/09/--------.jpg)\\n![-------](/content/images/2017/09/-------.jpg)\\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\\n这里的设置主要是参考了[**阿里云的官方帮助文档**](https://help.aliyun.com/knowledge_detail/34403.html)。\\n# 安装启动ghost\\n\\n## 需要用到的东西\\n\\n* 一个完成A记录解析设置的域名（建议做好ICP备案）；（可选）\\n* 使用 [**MySQL**](https://www.mysql.com/) 做数据库服务；\\n* 使用 [**Nginx**](https://nginx.org/) 做网页服务器（Ghost的代理服务）；\\n* 使用 [**NodeJS**](https://nodejs.org/) 做后端服务；\\n* [**Ghost**](https://ghost.org/)一个开源的博客系统；\\n\\n## 基础设置\\n\\n### 查看一下系统信息：\\n\\n```\\ncat /etc/redhat-release  \\n```\\n> CentOS Linux release 7.4.1708 (Core)\\n\\n\\n### 更新一下系统，安装一些基础工具：\\n\\n阿里云的centos已经优化了yum的源，你也可以自行修改\\n```\\nyum update -y && yum upgrage -y && yum clean all\\n```\\ncurl, wget都是方便后边的下载\\nvim作为一个老牌Linux文本编辑工具，你值得拥有\\n```\\nyum install curl wget vim -y\\n```\\n\\n### 更新全系统的vim配置\\n```\\ncurl https://raw.githubusercontent.com/tonyc726/vim-for-server/master/vimrc > /etc/vimrc  \\n```\\n\\n## MySQL安装设置\\n由于CentOS7已经不带Mysql数据库了（默认的数据库是MariaDB，Mysql的一个分支），所以需要先安裝MySQL Repository（具体的版本号，可以参考 https://dev.mysql.com/downloads/repo/yum/）:\\n\\n### 安裝 MySQL Repository\\n```\\nrpm -Uvh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\\n```\\n### 安装MySQL数据库的服务器社区稳定版\\n```\\nyum install mysql-community-server -y\\n```\\n### 启动MySQL服务\\n```\\nsystemctl start mysqld.service\\n```\\n### 设置随系统自启动\\n```\\nsystemctl enable mysqld.service  \\n```\\n### 初始化设置\\n```\\nmysql_secure_installation\\n```\\n由于MySQL5.7默认会初始化Root用户的密码，所以在执行之前需要获取这个初始密码：\\n（本次设置中并没有执行如下操作，应为默认安装后第一次运行时不需密码，在初始化过程中会提示设置密码）\\n```\\ngrep \\\"password\\\" /var/log/mysqld.log  \\n```\\n\\n\\n### 创建Ghost需要的用户及数据库：\\n\\n运行以后输入刚才拿到的密码\\n```\\nmysql -uroot -p \\n```\\n添加新数据库blog，后面Ghost会用到\\n```\\nCREATE DATABASE blog;\\n```\\n添加新用户ghost（password替换为你需要的密码）\\n```\\nCREATE USER ghost IDENTIFIED BY 'password';\\n```\\n授予ghost用户在blog数据库上的所有权限\\n（password就是你刚才创建ghost账户时设置的密码）\\n```\\nGRANT ALL PRIVILEGES ON blog.* TO 'ghost'@'localhost' IDENTIFIED BY 'password';\\n```\\n刷新权限\\n（当执行过GRANT，CREATE USER，REVOKE命令之后，必须要执行刷新权限才能生效）\\n```\\nFLUSH PRIVILEGES;\\n```\\nCtrl+D 退出\\n\\n好了，以上就是MySQL部分\\n\\n## NodeJS安装设置\\n\\n推荐使用以下方式安装NodeJS\\n本系统使用V6稳定版，如需其它版本，你可以自行调整\\n```\\ncurl -sL https://rpm.nodesource.com/setup_6.x | sudo -E bash -  \\n```\\n### 安装NodeJS及其依赖包\\n```\\nyum install gcc-c++ make nodejs -y\\n```\\nNodeJS安装以后，默认已经自带的NPM\\n不过[**npm**](https://github.com/nodejs-tw/nodejs-wiki-book/blob/master/zh-tw/node_npm.rst)之前一直被吐槽，建议***升级最新版或者用yarn代替***\\n### 升级npm至最新版本(^v5.0.4)\\n```\\nnpm install npm@latest -g\\n```\\n### 安装yarn代替（推荐）\\n```\\ncurl --silent --location https://rpm.nodesource.com/setup_6.x | bash -  \\nyum install yarn -y\\n```\\n\\n### 测试一下\\n```\\nnode -v\\n```\\n\\n> v6.11.0\\n```\\nnpm -v\\n```\\n> v5.1.0\\n```\\nyarn -v\\n```\\n> v0.27.5\\n\\n这里有个坑，如果直接使用yum install nodejs -y也是可以安装NodeJS的，不过nodesource维护的更加好，而且可以升级npm。\\n\\n如果你已经看到了最后输出的信息，那么久代表NodeJS已经就绪了。\\n## Nginx安装配置\\n\\n### 直接安装即可\\n```\\nyum install nginx -y\\n```\\n### 立即启动\\n```\\nsystemctl start nginx\\n```\\n### 设置开机自启动\\n```\\nsystemctl enable nginx  \\n```\\n\\n现在，打开你的浏览器，输入你的公网IP，不出意外，你就已经可以看到一个Nginx的欢迎页面了。\\n\\n不过，出于后期的扩展或者安全性考虑，我们需要为系统创建一个名为www的用户，专门用于管理网站.\\n\\n### 反向代理80端口\\n\\n众所周知，网站基本都以 80 端口作为默认端口（除非你不想让别人访问你的网站），也就是说：访问域名或服务器 IP 地址，实际上是在访问该服务器的 80 端口。而 Ghost 博客默认运行在 2368 端口上。\\n\\n为了输入域名或服务器 IP 地址就可以访问到你的 Ghost 博客，需要将访问 80 端口的请求，反向代理到 Ghost 的 2368 端口上。\\n\\n进入 Nginx 配置目录：\\n    ```\\n    cd /etc/nginx/conf.d\\n    ```\\n新建 Ghost 博客的 Nginx 配置文件：\\n```\\nvim ghost.conf\\n```\\n按 i 输入以下内容：\\n\\n> server {  \\n>     listen 80;\\n>     server_name loyalsoldier.me //修改为域名或服务器 IP 地址;\\n>     gzip on;\\n>     gzip_types text/plain application/xml text/css application/javascript application/json application/font-woff application/font-woff2 application/vnd.ms-fontobject application/x-font-ttf font/opentype application/pdf image/png image/bmp image/gif image/jpeg image/webp image/svg+xml;\\n>     gzip_proxied no-cache no-store private expired auth;\\n>     gzip_vary on;\\n>     gzip_min_length 1024;\\n>     location / {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>     }\\n>     location ~* .*\\\\.(jpg|jpeg|bmp|png|gif|ico|js|css|eot|woff|woff2|svg|ttf|otf)$ {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>         add_header Cache-Control max-age=2592000;\\n>         expires    30d;\\n>         etag       on;\\n>     }\\n> }\\n\\n按 ESC 键结束编辑，输入 :wq 保存文件并退出编辑\\n使用 nginx -t 测试 Nginx 配置文件是否语法正确：\\n\\n```\\nsudo nginx -t\\n```\\n若输出的结果有 ok、successful 等字样，表示配置正确\\n\\n如果正确的话，重启Nginx服务\\n```\\nsystemctl restart nginx.service  \\n```\\n\\n\\n## 添加新用户\\n创建一个名为www的用户组\\n```\\nadduser www\\n```\\n\\n### 设置密码(请记录下你的密码，以后需要用到)\\n```\\npasswd www\\n```\\n\\n### 分配Root权限 - 让我们新创建的www用户拥有Root用户的权限\\n```\\ngpasswd -a www wheel\\n```\\n### 将nginx用户添加入www的用户组，方便后期的权限控制\\n```\\nusermod -a -G nginx,www nginx  \\n```\\n\\n## 安装ghost\\n以上就是Ghost需要用到的基础系统了，下面就来安装Ghost，新开一个Terminal窗口，用**www**账户登录：\\n```\\nssh www@xxx.xxx.xxx.xxx  \\n```\\n然后下载Ghost最新的代码。\\n\\n### 下载Ghost最新的稳定版\\n```\\ncurl -L https://ghost.org/zip/ghost-latest.zip -o ghost.zip\\n```\\n### 解压\\n```\\nunzip -uo ghost.zip -d ghost\\n```\\n### 进入Ghost的目录并安装生产环境的依赖\\n```\\ncd ghost && npm install --production\\n```\\nnpm install --production这个命令可能需要执行多次，也是由于国内网络的原因，导致下载速度很慢，每次都下载不完全，需要多次执行，直到成功安装完成。\\n### 修改Ghost的config，修改数据库配置\\n```\\nvim config.js  \\n```\\n完整的config.js配置如下：\\n\\n> var path = require('path'),  \\n>     config;\\n> \\n> config = {  \\n>     production: {\\n>         url: 'https://www.xxxx.xxx',（换成服务器ip或者申请的域名）\\n>         mail: {},\\n>         database: {\\n>             client: 'mysql',（前面安装的mysql数据库，这里一定要对应）\\n>             connection: {\\n>                 host     : '127.0.0.1',\\n>                 user     : 'ghost', //用户名\\n>                 password : 'password', //ghost的密码，之前设置的\\n>                 database : 'blog', //数据库名\\n>                 charset  : 'utf8'\\n>             },\\n>             debug: false\\n>         },\\n>         server: {\\n>             host: '127.0.0.1',\\n>             port: '2368'\\n>         }\\n>     }\\n> };\\n> \\n> module.exports = config;  \\n\\n除了ghost安装根目录下的这个配置文件，还要检查一下/ghost/core/server/config下面的相应的配置文件，将相应的项更改正确，端口由于使用反向代理，因此不要更改，主要看一下url和database下面相应的设置。\\n\\n### 安装knex-migrator\\n实际上这个时候用生产模式运行ghost会报错，提示没有安装knex-migrator。\\n安装之前需要先编辑ghost安装文件夹下的***MigrtorConfig.js***文件。\\n\\n\\n使用vim编写MigrtorConfig.js文件：\\n\\n```\\nvim MigrtorConfig.js\\n```\\n\\n配置文件格式参考[**这里**](https://github.com/TryGhost/knex-migrator)：\\n\\n> module.exports = {\\n>     database: {\\n>         client: 'mysql',\\n>         connection: {\\n>             host: '127.0.0.1',\\n>             user: 'ghost',（之前mysql设置时建立的用户名）\\n>             password: 'password',（改成mysql的ghost用户密码）\\n>             charset: 'utf8',\\n>             name: 'blog'（之前mysql设置时建立的数据库）\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version',\\n>  /**\\n>     subfolder: 'upgrades'  [default: versions]\\n>     （这一部分在执行时总出问题，就注释掉了）\\n>  */\\n> }\\n\\n（下面应该是数据库使用sqlite3时的设置，由于本方案使用的mysql，所以可以不用写进去）\\n> module.exports = {\\n>     database: {\\n>         client: 'sqlite3',\\n>         connection: {\\n>             filename: 'path/to/your.db'\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version'\\n> }\\n> \\n\\n使用下面指令安装：\\n```\\nnpm install -g knex-migrator\\n```\\n\\n由于国内网络的原因，这个命令也可能需要执行多次才能安装完，中间会提示校验错误，这个应该是下载没有完成，而网络链接断开了的原因，再执行一次就行，直到最后完成安装。\\n\\n\\n运行一下：\\n```\\nnpm start --production\\n```\\n如果看到下面的提示，证明你已经完成80%了：\\n\\n\\n> Ghost is running in production...  \\n> Your blog is now available on xx.xx.xx.xx  \\n> Ctrl+C to shut down  \\n\\n### 问题及解决方案\\n\\n#### 权限问题\\n在执行npm start --production的时候，遇到npm权限的问题，提示没有node_modules文件夹的写权限，这个时候使用sudo命令进行安装时又提示别的错误，最终采用\\nnpmjs.com网站中的[解决方法2](https://docs.npmjs.com/getting-started/fixing-npm-permissions)。\\n首先检查npm的路径：\\n```\\nnpm config get prefix\\n```\\n发现是/usr\\n然后改变npm的默认路径：\\n1.为全局安装路径建立文件夹：（操作均在www用户下完成）\\n```\\nmkdir ~/.npm-global\\n```\\n2.设置默认路径：\\n```\\nnpm config set prefix '~/.npm-global'\\n```\\n3.加入用户PATH：\\n打开用户家目录下面的profile文件，这里是.bash_profile，加入下面的语句：\\n```\\nexport PATH=~/.npm-global/bin:$PATH\\n```\\n4.更新profile文件\\n```\\nsource ~/.bash_profile\\n```\\n**检验**：全局下载文件包，**不要用sudo**，也可以省去检测\\n``` \\nnpm install -g jshint\\n```\\n也可以使用下面更改环境变量的方式代替2-4步：（如果不想更改profile文件的话）\\n```\\nNPM_CONFIG_PREFIX=~/.npm-global\\n```\\n#### 语法错误问题\\n> Syntax error: Unexpected token\\n\\n出现上面的语句就要检查一下相应的配置文件的语法是否有错误。\\n## 全局安装PM2\\n目前你是开着远程连接到你的服务器，一旦你把窗口关闭了，那么你刚才起的npm start --production可就悲剧了，如何避免呢，这时候我们就需要一个能帮我们在后台稳定运行node服务的工具了，目前比较火热的要数PM2了：\\n\\n```\\nyarn global add pm2 --prefix /usr/local\\n```\\n### 用PM2来启动Ghost的node服务\\n先切到ghost的目录，然后再运行\\n```\\nNODE_ENV=production pm2 start index.js --name \\\"blog\\\"\\n```\\n### 检查运行结果\\n```\\npm2 show blog  \\n```\\n\\n# 配置ghost\\n本次没有做太多自定义配置，具体可以参考[**这里**](https://www.binarization.com/archive/2016/configuring-ghost/)。\\n\\n\\n# 参考资料：\\n[《NPM 套件管理工具》](https://github.com/nodejs-tw/nodejs-wiki-book/blob/master/zh-tw/node_npm.rst)\\n[《Ghost 1.0+ 安装（非ghost-cli方式）》](https://www.ihx.me/ghost1-6insallnocli/)\\n[《knex-migrator-Github》](https://github.com/TryGhost/knex-migrator)\\n\\n\"}]],\"sections\":[[10,0]]}","page":false,"plaintext":"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\n什么是ghost？\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\n但是这并不影响我们搭建ghost服务器。吼吼吼~\n\n搭建准备\n在阿里云 [https://www.aliyun.com/]上购买了一年的ECS服务器，配置如下:\nCPU 1核；\n内存 2G；\n带宽 1Mbps；\n硬盘 40G。\n系统 CentOS 7.3 64位\n\n云服务器配置\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\n\n云服务器ECS——网络和安全——安全组——配置规则\n\n\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\n这里的设置主要是参考了阿里云的官方帮助文档 [https://help.aliyun.com/knowledge_detail/34403.html]。","published_at":"2017-09-28T13:41:32.000Z","slug":"shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost","status":"published","title":"搭建Ghost服务器","updated_at":"2017-09-29T02:18:48.000Z","updated_by":"1","tags":{"0":{"id":"59ccb425a744810195a3dc01","name":"技术","slug":"ji-zhu","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T08:34:45.000Z","updated_at":"2017-09-28T08:34:45.000Z","created_by":"1","updated_by":"1"},"1":{"id":"59cd12bfa744810195a3dc06","name":"博客","slug":"bo-ke","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T15:18:23.000Z","updated_at":"2017-09-28T15:18:23.000Z","created_by":"1","updated_by":"1"}},"author_id":"1"}}},"query":{"include":"tags"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"http://47.95.197.107","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/*","content-type":"application/json; charset=utf-8","etag":"W/\"4c86-Fy1pK7m9c1R2lM1hiZ/FWukHRA4\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"82ms"},"msg":"","time":"2017-09-29T02:20:40.226Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"cb78fbc0-a4bc-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/posts/59ccf296a744810195a3dc03/?include=tags","method":"PUT","originalUrl":"/ghost/api/v0.1/posts/59ccf296a744810195a3dc03/?include=tags","params":{"id":"59ccf296a744810195a3dc03"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","content-length":"19173","origin":"http://47.95.197.107","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"1.9","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{"posts":{"0":{"id":"59ccf296a744810195a3dc03","created_at":"2017-09-28T13:01:10.000Z","created_by":"1","featured":false,"feature_image":"/content/images/2017/09/ghost.png","codeinjection_foot":"","codeinjection_head":"","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\\n什么是ghost？\\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\\n但是这并不影响我们搭建ghost服务器。吼吼吼~\\n\\n# 搭建准备\\n在[**阿里云**](https://www.aliyun.com/)上购买了一年的ECS服务器，配置如下:\\nCPU 1核；\\n内存 2G；\\n带宽 1Mbps；\\n硬盘 40G。\\n系统 CentOS 7.3 64位\\n\\n# 云服务器配置\\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\\n> 云服务器ECS——网络和安全——安全组——配置规则\\n![--------](/content/images/2017/09/--------.jpg)\\n![-------](/content/images/2017/09/-------.jpg)\\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\\n这里的设置主要是参考了[**阿里云的官方帮助文档**](https://help.aliyun.com/knowledge_detail/34403.html)。\\n# 安装启动ghost\\n\\n## 需要用到的东西\\n\\n* 一个完成A记录解析设置的域名（建议做好ICP备案）；（可选）\\n* 使用 [**MySQL**](https://www.mysql.com/) 做数据库服务；\\n* 使用 [**Nginx**](https://nginx.org/) 做网页服务器（Ghost的代理服务）；\\n* 使用 [**NodeJS**](https://nodejs.org/) 做后端服务；\\n* [**Ghost**](https://ghost.org/)一个开源的博客系统；\\n\\n## 基础设置\\n\\n### 查看一下系统信息：\\n\\n```\\ncat /etc/redhat-release  \\n```\\n> CentOS Linux release 7.4.1708 (Core)\\n\\n\\n### 更新一下系统，安装一些基础工具：\\n\\n阿里云的centos已经优化了yum的源，你也可以自行修改\\n```\\nyum update -y && yum upgrage -y && yum clean all\\n```\\ncurl, wget都是方便后边的下载\\nvim作为一个老牌Linux文本编辑工具，你值得拥有\\n```\\nyum install curl wget vim -y\\n```\\n\\n### 更新全系统的vim配置\\n```\\ncurl https://raw.githubusercontent.com/tonyc726/vim-for-server/master/vimrc > /etc/vimrc  \\n```\\n\\n## MySQL安装设置\\n由于CentOS7已经不带Mysql数据库了（默认的数据库是MariaDB，Mysql的一个分支），所以需要先安裝MySQL Repository（具体的版本号，可以参考 https://dev.mysql.com/downloads/repo/yum/）:\\n\\n### 安裝 MySQL Repository\\n```\\nrpm -Uvh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\\n```\\n### 安装MySQL数据库的服务器社区稳定版\\n```\\nyum install mysql-community-server -y\\n```\\n### 启动MySQL服务\\n```\\nsystemctl start mysqld.service\\n```\\n### 设置随系统自启动\\n```\\nsystemctl enable mysqld.service  \\n```\\n### 初始化设置\\n```\\nmysql_secure_installation\\n```\\n由于MySQL5.7默认会初始化Root用户的密码，所以在执行之前需要获取这个初始密码：\\n（本次设置中并没有执行如下操作，应为默认安装后第一次运行时不需密码，在初始化过程中会提示设置密码）\\n```\\ngrep \\\"password\\\" /var/log/mysqld.log  \\n```\\n\\n\\n### 创建Ghost需要的用户及数据库：\\n\\n运行以后输入刚才拿到的密码\\n```\\nmysql -uroot -p \\n```\\n添加新数据库blog，后面Ghost会用到\\n```\\nCREATE DATABASE blog;\\n```\\n添加新用户ghost（password替换为你需要的密码）\\n```\\nCREATE USER ghost IDENTIFIED BY 'password';\\n```\\n授予ghost用户在blog数据库上的所有权限\\n（password就是你刚才创建ghost账户时设置的密码）\\n```\\nGRANT ALL PRIVILEGES ON blog.* TO 'ghost'@'localhost' IDENTIFIED BY 'password';\\n```\\n刷新权限\\n（当执行过GRANT，CREATE USER，REVOKE命令之后，必须要执行刷新权限才能生效）\\n```\\nFLUSH PRIVILEGES;\\n```\\nCtrl+D 退出\\n\\n好了，以上就是MySQL部分\\n\\n## NodeJS安装设置\\n\\n推荐使用以下方式安装NodeJS\\n本系统使用V6稳定版，如需其它版本，你可以自行调整\\n```\\ncurl -sL https://rpm.nodesource.com/setup_6.x | sudo -E bash -  \\n```\\n### 安装NodeJS及其依赖包\\n```\\nyum install gcc-c++ make nodejs -y\\n```\\nNodeJS安装以后，默认已经自带的NPM\\n不过[**npm**](https://github.com/nodejs-tw/nodejs-wiki-book/blob/master/zh-tw/node_npm.rst)之前一直被吐槽，建议***升级最新版或者用yarn代替***\\n### 升级npm至最新版本(^v5.0.4)\\n```\\nnpm install npm@latest -g\\n```\\n### 安装yarn代替（推荐）\\n```\\ncurl --silent --location https://rpm.nodesource.com/setup_6.x | bash -  \\nyum install yarn -y\\n```\\n\\n### 测试一下\\n```\\nnode -v\\n```\\n\\n> v6.11.0\\n```\\nnpm -v\\n```\\n> v5.1.0\\n```\\nyarn -v\\n```\\n> v0.27.5\\n\\n这里有个坑，如果直接使用yum install nodejs -y也是可以安装NodeJS的，不过nodesource维护的更加好，而且可以升级npm。\\n\\n如果你已经看到了最后输出的信息，那么久代表NodeJS已经就绪了。\\n## Nginx安装配置\\n\\n### 直接安装即可\\n```\\nyum install nginx -y\\n```\\n### 立即启动\\n```\\nsystemctl start nginx\\n```\\n### 设置开机自启动\\n```\\nsystemctl enable nginx  \\n```\\n\\n现在，打开你的浏览器，输入你的公网IP，不出意外，你就已经可以看到一个Nginx的欢迎页面了。\\n\\n不过，出于后期的扩展或者安全性考虑，我们需要为系统创建一个名为www的用户，专门用于管理网站.\\n\\n### 反向代理80端口\\n\\n众所周知，网站基本都以 80 端口作为默认端口（除非你不想让别人访问你的网站），也就是说：访问域名或服务器 IP 地址，实际上是在访问该服务器的 80 端口。而 Ghost 博客默认运行在 2368 端口上。\\n\\n为了输入域名或服务器 IP 地址就可以访问到你的 Ghost 博客，需要将访问 80 端口的请求，反向代理到 Ghost 的 2368 端口上。\\n\\n进入 Nginx 配置目录：\\n    ```\\n    cd /etc/nginx/conf.d\\n    ```\\n新建 Ghost 博客的 Nginx 配置文件：\\n```\\nvim ghost.conf\\n```\\n按 i 输入以下内容：\\n\\n> server {  \\n>     listen 80;\\n>     server_name loyalsoldier.me //修改为域名或服务器 IP 地址;\\n>     gzip on;\\n>     gzip_types text/plain application/xml text/css application/javascript application/json application/font-woff application/font-woff2 application/vnd.ms-fontobject application/x-font-ttf font/opentype application/pdf image/png image/bmp image/gif image/jpeg image/webp image/svg+xml;\\n>     gzip_proxied no-cache no-store private expired auth;\\n>     gzip_vary on;\\n>     gzip_min_length 1024;\\n>     location / {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>     }\\n>     location ~* .*\\\\.(jpg|jpeg|bmp|png|gif|ico|js|css|eot|woff|woff2|svg|ttf|otf)$ {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>         add_header Cache-Control max-age=2592000;\\n>         expires    30d;\\n>         etag       on;\\n>     }\\n> }\\n\\n按 ESC 键结束编辑，输入 :wq 保存文件并退出编辑\\n使用 nginx -t 测试 Nginx 配置文件是否语法正确：\\n\\n```\\nsudo nginx -t\\n```\\n若输出的结果有 ok、successful 等字样，表示配置正确\\n\\n如果正确的话，重启Nginx服务\\n```\\nsystemctl restart nginx.service  \\n```\\n\\n\\n## 添加新用户\\n创建一个名为www的用户组\\n```\\nadduser www\\n```\\n\\n### 设置密码(请记录下你的密码，以后需要用到)\\n```\\npasswd www\\n```\\n\\n### 分配Root权限 - 让我们新创建的www用户拥有Root用户的权限\\n```\\ngpasswd -a www wheel\\n```\\n### 将nginx用户添加入www的用户组，方便后期的权限控制\\n```\\nusermod -a -G nginx,www nginx  \\n```\\n\\n## 安装ghost\\n以上就是Ghost需要用到的基础系统了，下面就来安装Ghost，新开一个Terminal窗口，用**www**账户登录：\\n```\\nssh www@xxx.xxx.xxx.xxx  \\n```\\n然后下载Ghost最新的代码。\\n\\n### 下载Ghost最新的稳定版\\n```\\ncurl -L https://ghost.org/zip/ghost-latest.zip -o ghost.zip\\n```\\n### 解压\\n```\\nunzip -uo ghost.zip -d ghost\\n```\\n### 进入Ghost的目录并安装生产环境的依赖\\n```\\ncd ghost && npm install --production\\n```\\nnpm install --production这个命令可能需要执行多次，也是由于国内网络的原因，导致下载速度很慢，每次都下载不完全，需要多次执行，直到成功安装完成。\\n### 修改Ghost的config，修改数据库配置\\n```\\nvim config.js  \\n```\\n完整的config.js配置如下：\\n\\n> var path = require('path'),  \\n>     config;\\n> \\n> config = {  \\n>     production: {\\n>         url: 'https://www.xxxx.xxx',（换成服务器ip或者申请的域名）\\n>         mail: {},\\n>         database: {\\n>             client: 'mysql',（前面安装的mysql数据库，这里一定要对应）\\n>             connection: {\\n>                 host     : '127.0.0.1',\\n>                 user     : 'ghost', //用户名\\n>                 password : 'password', //ghost的密码，之前设置的\\n>                 database : 'blog', //数据库名\\n>                 charset  : 'utf8'\\n>             },\\n>             debug: false\\n>         },\\n>         server: {\\n>             host: '127.0.0.1',\\n>             port: '2368'\\n>         }\\n>     }\\n> };\\n> \\n> module.exports = config;  \\n\\n除了ghost安装根目录下的这个配置文件，还要检查一下/ghost/core/server/config下面的相应的配置文件，将相应的项更改正确，端口由于使用反向代理，因此不要更改，主要看一下url和database下面相应的设置。\\n\\n### 安装knex-migrator\\n实际上这个时候用生产模式运行ghost会报错，提示没有安装knex-migrator。\\n安装之前需要先编辑ghost安装文件夹下的***MigrtorConfig.js***文件。\\n\\n\\n使用vim编写MigrtorConfig.js文件：\\n\\n```\\nvim MigrtorConfig.js\\n```\\n\\n配置文件格式参考[**这里**](https://github.com/TryGhost/knex-migrator)：\\n\\n> module.exports = {\\n>     database: {\\n>         client: 'mysql',\\n>         connection: {\\n>             host: '127.0.0.1',\\n>             user: 'ghost',（之前mysql设置时建立的用户名）\\n>             password: 'password',（改成mysql的ghost用户密码）\\n>             charset: 'utf8',\\n>             name: 'blog'（之前mysql设置时建立的数据库）\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version',\\n>  /**\\n>     subfolder: 'upgrades'  [default: versions]\\n>     （这一部分在执行时总出问题，就注释掉了）\\n>  */\\n> }\\n\\n（下面应该是数据库使用sqlite3时的设置，由于本方案使用的mysql，所以可以不用写进去）\\n> module.exports = {\\n>     database: {\\n>         client: 'sqlite3',\\n>         connection: {\\n>             filename: 'path/to/your.db'\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version'\\n> }\\n> \\n\\n使用下面指令安装：\\n```\\nnpm install -g knex-migrator\\n```\\n\\n由于国内网络的原因，这个命令也可能需要执行多次才能安装完，中间会提示校验错误，这个应该是下载没有完成，而网络链接断开了的原因，再执行一次就行，直到最后完成安装。\\n\\n\\n运行一下：\\n```\\nnpm start --production\\n```\\n如果看到下面的提示，证明你已经完成80%了：\\n\\n\\n> Ghost is running in production...  \\n> Your blog is now available on xx.xx.xx.xx  \\n> Ctrl+C to shut down  \\n\\n### 问题及解决方案\\n\\n#### 权限问题\\n在执行npm start --production的时候，遇到npm权限的问题，提示没有node_modules文件夹的写权限，这个时候使用sudo命令进行安装时又提示别的错误，最终采用\\nnpmjs.com网站中的[解决方法2](https://docs.npmjs.com/getting-started/fixing-npm-permissions)。\\n首先检查npm的路径：\\n```\\nnpm config get prefix\\n```\\n发现是/usr\\n然后改变npm的默认路径：\\n1.为全局安装路径建立文件夹：（操作均在www用户下完成）\\n```\\nmkdir ~/.npm-global\\n```\\n2.设置默认路径：\\n```\\nnpm config set prefix '~/.npm-global'\\n```\\n3.加入用户PATH：\\n打开用户家目录下面的profile文件，这里是.bash_profile，加入下面的语句：\\n```\\nexport PATH=~/.npm-global/bin:$PATH\\n```\\n4.更新profile文件\\n```\\nsource ~/.bash_profile\\n```\\n**检验**：全局下载文件包，**不要用sudo**，也可以省去检测\\n``` \\nnpm install -g jshint\\n```\\n也可以使用下面更改环境变量的方式代替2-4步：（如果不想更改profile文件的话）\\n```\\nNPM_CONFIG_PREFIX=~/.npm-global\\n```\\n#### 语法错误问题\\n> Syntax error: Unexpected token\\n\\n出现上面的语句就要检查一下相应的配置文件的语法是否有错误。\\n## 全局安装PM2\\n目前你是开着远程连接到你的服务器，一旦你把窗口关闭了，那么你刚才起的npm start --production可就悲剧了，如何避免呢，这时候我们就需要一个能帮我们在后台稳定运行node服务的工具了，目前比较火热的要数PM2了：\\n\\n```\\nyarn global add pm2 --prefix /usr/local\\n```\\n### 用PM2来启动Ghost的node服务\\n先切到ghost的目录，然后再运行\\n```\\nNODE_ENV=production pm2 start index.js --name \\\"blog\\\"\\n```\\n### 检查运行结果\\n```\\npm2 show blog  \\n```\\n\\n# 配置ghost\\n本次没有做太多自定义配置，具体可以参考[**这里**](https://www.binarization.com/archive/2016/configuring-ghost/)。\\n\\n\\n# 参考资料：\\n[《NPM 套件管理工具》](https://github.com/nodejs-tw/nodejs-wiki-book/blob/master/zh-tw/node_npm.rst)\\n[《Ghost 1.0+ 安装（非ghost-cli方式）》](https://www.ihx.me/ghost1-6insallnocli/)\\n[《knex-migrator-Github》](https://github.com/TryGhost/knex-migrator)\\n\\n\"}]],\"sections\":[[10,0]]}","page":false,"plaintext":"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\n什么是ghost？\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\n但是这并不影响我们搭建ghost服务器。吼吼吼~\n\n搭建准备\n在阿里云 [https://www.aliyun.com/]上购买了一年的ECS服务器，配置如下:\nCPU 1核；\n内存 2G；\n带宽 1Mbps；\n硬盘 40G。\n系统 CentOS 7.3 64位\n\n云服务器配置\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\n\n云服务器ECS——网络和安全——安全组——配置规则\n\n\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\n这里的设置主要是参考了阿里云的官方帮助文档 [https://help.aliyun.com/knowledge_detail/34403.html]。","published_at":"2017-09-28T13:41:32.000Z","slug":"shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost","status":"published","title":"搭建Ghost服务器","updated_at":"2017-09-29T02:20:40.000Z","updated_by":"1","tags":{"0":{"id":"59ccb425a744810195a3dc01","name":"技术","slug":"ji-zhu","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T08:34:45.000Z","updated_at":"2017-09-28T08:34:45.000Z","created_by":"1","updated_by":"1"},"1":{"id":"59cd12bfa744810195a3dc06","name":"博客","slug":"bo-ke","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T15:18:23.000Z","updated_at":"2017-09-28T15:18:23.000Z","created_by":"1","updated_by":"1"}},"author_id":"1"}}},"query":{"include":"tags"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"http://47.95.197.107","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/*","content-type":"application/json; charset=utf-8","etag":"W/\"4c86-8J6XEqkVOBJWIseczTcqXu1gO/M\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"43ms"},"msg":"","time":"2017-09-29T02:20:43.306Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"43616500-a4bd-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/posts/59ccf296a744810195a3dc03/?include=tags","method":"PUT","originalUrl":"/ghost/api/v0.1/posts/59ccf296a744810195a3dc03/?include=tags","params":{"id":"59ccf296a744810195a3dc03"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","content-length":"19419","origin":"http://47.95.197.107","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"1.9","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{"posts":{"0":{"id":"59ccf296a744810195a3dc03","created_at":"2017-09-28T13:01:10.000Z","created_by":"1","featured":false,"feature_image":"/content/images/2017/09/ghost.png","codeinjection_foot":"","codeinjection_head":"","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\\n什么是ghost？\\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\\n但是这并不影响我们搭建ghost服务器。吼吼吼~\\n\\n# 搭建准备\\n在[**阿里云**](https://www.aliyun.com/)上购买了一年的ECS服务器，配置如下:\\nCPU 1核；\\n内存 2G；\\n带宽 1Mbps；\\n硬盘 40G。\\n系统 CentOS 7.3 64位\\n\\n# 云服务器配置\\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\\n> 云服务器ECS——网络和安全——安全组——配置规则\\n![--------](/content/images/2017/09/--------.jpg)\\n![-------](/content/images/2017/09/-------.jpg)\\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\\n这里的设置主要是参考了[**阿里云的官方帮助文档**](https://help.aliyun.com/knowledge_detail/34403.html)。\\n# 安装启动ghost\\n\\n## 需要用到的东西\\n\\n* 一个完成A记录解析设置的域名（建议做好ICP备案）；（可选）\\n* 使用 [**MySQL**](https://www.mysql.com/) 做数据库服务；\\n* 使用 [**Nginx**](https://nginx.org/) 做网页服务器（Ghost的代理服务）；\\n* 使用 [**NodeJS**](https://nodejs.org/) 做后端服务；\\n* [**Ghost**](https://ghost.org/)一个开源的博客系统；\\n\\n## 基础设置\\n\\n### 查看一下系统信息：\\n\\n```\\ncat /etc/redhat-release  \\n```\\n> CentOS Linux release 7.4.1708 (Core)\\n\\n\\n### 更新一下系统，安装一些基础工具：\\n\\n阿里云的centos已经优化了yum的源，你也可以自行修改\\n```\\nyum update -y && yum upgrage -y && yum clean all\\n```\\n\\ncurl, wget都是方便后边的下载\\nvim作为一个老牌Linux文本编辑工具，你值得拥有\\n还要安装开发工具包\\n```\\nyum groupinstall -y \\\"Development Tools\\\"\\nyum install curl wget vim -y\\n```\\n\\n### 更新全系统的vim配置\\n```\\ncurl https://raw.githubusercontent.com/tonyc726/vim-for-server/master/vimrc > /etc/vimrc  \\n```\\n\\n## MySQL安装设置\\n由于CentOS7已经不带Mysql数据库了（默认的数据库是MariaDB，Mysql的一个分支），所以需要先安裝MySQL Repository（具体的版本号，可以参考 https://dev.mysql.com/downloads/repo/yum/）:\\n\\n### 安裝 MySQL Repository\\n```\\nrpm -Uvh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\\n```\\n### 安装MySQL数据库的服务器社区稳定版\\n```\\nyum install mysql-community-server -y\\n```\\n### 启动MySQL服务\\n```\\nsystemctl start mysqld.service\\n```\\n### 设置随系统自启动\\n```\\nsystemctl enable mysqld.service  \\n```\\n### 初始化设置\\n```\\nmysql_secure_installation\\n```\\n由于MySQL5.7默认会初始化Root用户的密码，所以在执行之前需要获取这个初始密码：\\n（本次设置中并没有执行如下操作，应为默认安装后第一次运行时不需密码，在初始化过程中会提示设置密码）\\n```\\ngrep \\\"password\\\" /var/log/mysqld.log  \\n```\\n\\n\\n### 创建Ghost需要的用户及数据库：\\n\\n运行以后输入刚才拿到的密码\\n```\\nmysql -uroot -p \\n```\\n添加新数据库blog，后面Ghost会用到\\n```\\nCREATE DATABASE blog;\\n```\\n添加新用户ghost（password替换为你需要的密码）\\n```\\nCREATE USER ghost IDENTIFIED BY 'password';\\n```\\n授予ghost用户在blog数据库上的所有权限\\n（password就是你刚才创建ghost账户时设置的密码）\\n```\\nGRANT ALL PRIVILEGES ON blog.* TO 'ghost'@'localhost' IDENTIFIED BY 'password';\\n```\\n刷新权限\\n（当执行过GRANT，CREATE USER，REVOKE命令之后，必须要执行刷新权限才能生效）\\n```\\nFLUSH PRIVILEGES;\\n```\\nCtrl+D 退出\\n\\n好了，以上就是MySQL部分\\n\\n## NodeJS安装设置\\n\\n推荐使用以下方式安装NodeJS\\n本系统使用V6稳定版，如需其它版本，你可以自行调整\\n```\\ncurl -sL https://rpm.nodesource.com/setup_6.x | sudo -E bash -  \\n```\\n### 安装NodeJS及其依赖包\\n```\\nyum install gcc-c++ make nodejs -y\\n```\\nNodeJS安装以后，默认已经自带的NPM\\n不过[**npm**](https://github.com/nodejs-tw/nodejs-wiki-book/blob/master/zh-tw/node_npm.rst)之前一直被吐槽，建议***升级最新版或者用yarn代替***\\n### 升级npm至最新版本(^v5.0.4)\\n```\\nnpm install npm@latest -g\\n```\\n### 安装yarn代替（推荐）\\n```\\ncurl --silent --location https://rpm.nodesource.com/setup_6.x | bash -  \\nyum install yarn -y\\n```\\n\\n### 测试一下\\n```\\nnode -v\\n```\\n\\n> v6.11.0\\n```\\nnpm -v\\n```\\n> v5.1.0\\n```\\nyarn -v\\n```\\n> v0.27.5\\n\\n这里有个坑，如果直接使用yum install nodejs -y也是可以安装NodeJS的，不过nodesource维护的更加好，而且可以升级npm。\\n\\n如果你已经看到了最后输出的信息，那么久代表NodeJS已经就绪了。\\n## Nginx安装配置\\n\\n### 直接安装即可\\n```\\nyum install nginx -y\\n```\\n### 立即启动\\n```\\nsystemctl start nginx\\n```\\n### 设置开机自启动\\n```\\nsystemctl enable nginx  \\n```\\n\\n现在，打开你的浏览器，输入你的公网IP，不出意外，你就已经可以看到一个Nginx的欢迎页面了。\\n\\n不过，出于后期的扩展或者安全性考虑，我们需要为系统创建一个名为www的用户，专门用于管理网站.\\n\\n### 反向代理80端口\\n\\n众所周知，网站基本都以 80 端口作为默认端口（除非你不想让别人访问你的网站），也就是说：访问域名或服务器 IP 地址，实际上是在访问该服务器的 80 端口。而 Ghost 博客默认运行在 2368 端口上。\\n\\n为了输入域名或服务器 IP 地址就可以访问到你的 Ghost 博客，需要将访问 80 端口的请求，反向代理到 Ghost 的 2368 端口上。\\n\\n进入 Nginx 配置目录：\\n    ```\\n    cd /etc/nginx/conf.d\\n    ```\\n新建 Ghost 博客的 Nginx 配置文件：\\n```\\nvim ghost.conf\\n```\\n按 i 输入以下内容：\\n\\n> server {  \\n>     listen 80;\\n>     server_name loyalsoldier.me //修改为域名或服务器 IP 地址;\\n>     gzip on;\\n>     gzip_types text/plain application/xml text/css application/javascript application/json application/font-woff application/font-woff2 application/vnd.ms-fontobject application/x-font-ttf font/opentype application/pdf image/png image/bmp image/gif image/jpeg image/webp image/svg+xml;\\n>     gzip_proxied no-cache no-store private expired auth;\\n>     gzip_vary on;\\n>     gzip_min_length 1024;\\n>     location / {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>     }\\n>     location ~* .*\\\\.(jpg|jpeg|bmp|png|gif|ico|js|css|eot|woff|woff2|svg|ttf|otf)$ {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>         add_header Cache-Control max-age=2592000;\\n>         expires    30d;\\n>         etag       on;\\n>     }\\n> }\\n\\n按 ESC 键结束编辑，输入 :wq 保存文件并退出编辑\\n使用 nginx -t 测试 Nginx 配置文件是否语法正确：\\n\\n```\\nsudo nginx -t\\n```\\n若输出的结果有 ok、successful 等字样，表示配置正确\\n\\n如果正确的话，重启Nginx服务\\n```\\nsystemctl restart nginx.service  \\n```\\n\\n\\n## 添加新用户\\n创建一个名为www的用户组\\n```\\nadduser www\\n```\\n\\n### 设置密码(请记录下你的密码，以后需要用到)\\n```\\npasswd www\\n```\\n\\n### 分配Root权限 - 让我们新创建的www用户拥有Root用户的权限\\n```\\ngpasswd -a www wheel\\n```\\n### 将nginx用户添加入www的用户组，方便后期的权限控制\\n```\\nusermod -a -G nginx,www nginx  \\n```\\n\\n## 安装ghost\\n以上就是Ghost需要用到的基础系统了，下面就来安装Ghost，新开一个Terminal窗口，用**www**账户登录：\\n```\\nssh www@xxx.xxx.xxx.xxx  \\n```\\n然后下载Ghost最新的代码。\\n\\n### 下载Ghost最新的稳定版\\n```\\ncurl -L https://ghost.org/zip/ghost-latest.zip -o ghost.zip\\n```\\n### 解压\\n```\\nunzip -uo ghost.zip -d ghost\\n```\\n### 进入Ghost的目录并安装生产环境的依赖\\n```\\ncd ghost && npm install --production\\n```\\nnpm install --production这个命令可能需要执行多次，也是由于国内网络的原因，导致下载速度很慢，每次都下载不完全，需要多次执行，直到成功安装完成。\\n### 修改Ghost的config，修改数据库配置\\n```\\nvim config.js  \\n```\\n完整的config.js配置如下：\\n\\n> var path = require('path'),  \\n>     config;\\n> \\n> config = {  \\n>     production: {\\n>         url: 'https://www.xxxx.xxx',（换成服务器ip或者申请的域名）\\n>         mail: {},\\n>         database: {\\n>             client: 'mysql',（前面安装的mysql数据库，这里一定要对应）\\n>             connection: {\\n>                 host     : '127.0.0.1',\\n>                 user     : 'ghost', //用户名\\n>                 password : 'password', //ghost的密码，之前设置的\\n>                 database : 'blog', //数据库名\\n>                 charset  : 'utf8'\\n>             },\\n>             debug: false\\n>         },\\n>         server: {\\n>             host: '127.0.0.1',\\n>             port: '2368'\\n>         }\\n>     }\\n> };\\n> \\n> module.exports = config;  \\n\\n除了ghost安装根目录下的这个配置文件，还要检查一下/ghost/core/server/config下面的相应的配置文件，将相应的项更改正确，端口由于使用反向代理，因此不要更改，主要看一下url和database下面相应的设置。\\n\\n### 安装knex-migrator\\n实际上这个时候用生产模式运行ghost会报错，提示没有安装knex-migrator。\\n安装之前需要先编辑ghost安装文件夹下的***MigrtorConfig.js***文件。\\n\\n\\n使用vim编写MigrtorConfig.js文件：\\n\\n```\\nvim MigrtorConfig.js\\n```\\n\\n配置文件格式参考[**这里**](https://github.com/TryGhost/knex-migrator)：\\n\\n> module.exports = {\\n>     database: {\\n>         client: 'mysql',\\n>         connection: {\\n>             host: '127.0.0.1',\\n>             user: 'ghost',（之前mysql设置时建立的用户名）\\n>             password: 'password',（改成mysql的ghost用户密码）\\n>             charset: 'utf8',\\n>             name: 'blog'（之前mysql设置时建立的数据库）\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version',\\n>  /**\\n>     subfolder: 'upgrades'  [default: versions]\\n>     （这一部分在执行时总出问题，就注释掉了）\\n>  */\\n> }\\n\\n（下面应该是数据库使用sqlite3时的设置，由于本方案使用的mysql，所以可以不用写进去）\\n> module.exports = {\\n>     database: {\\n>         client: 'sqlite3',\\n>         connection: {\\n>             filename: 'path/to/your.db'\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version'\\n> }\\n> \\n\\n使用下面指令安装：\\n```\\nnpm install -g knex-migrator\\n```\\n\\n由于国内网络的原因，这个命令也可能需要执行多次才能安装完，中间会提示校验错误，这个应该是下载没有完成，而网络链接断开了的原因，再执行一次就行，直到最后完成安装。\\n\\n\\n运行一下：\\n```\\nnpm start --production\\n```\\n如果看到下面的提示，证明你已经完成80%了：\\n\\n\\n> Ghost is running in production...  \\n> Your blog is now available on xx.xx.xx.xx  \\n> Ctrl+C to shut down  \\n\\n### 问题及解决方案\\n\\n#### 权限问题\\n在执行npm start --production的时候，遇到npm权限的问题，提示没有node_modules文件夹的写权限，这个时候使用sudo命令进行安装时又提示别的错误，最终采用\\nnpmjs.com网站中的[解决方法2](https://docs.npmjs.com/getting-started/fixing-npm-permissions)。\\n首先检查npm的路径：\\n```\\nnpm config get prefix\\n```\\n发现是/usr\\n然后改变npm的默认路径：\\n1.为全局安装路径建立文件夹：（操作均在www用户下完成）\\n```\\nmkdir ~/.npm-global\\n```\\n2.设置默认路径：\\n```\\nnpm config set prefix '~/.npm-global'\\n```\\n3.加入用户PATH：\\n打开用户家目录下面的profile文件，这里是.bash_profile，加入下面的语句：\\n```\\nexport PATH=~/.npm-global/bin:$PATH\\n```\\n4.更新profile文件\\n```\\nsource ~/.bash_profile\\n```\\n**检验**：全局下载文件包，**不要用sudo**，也可以省去检测\\n``` \\nnpm install -g jshint\\n```\\n也可以使用下面更改环境变量的方式代替2-4步：（如果不想更改profile文件的话）\\n```\\nNPM_CONFIG_PREFIX=~/.npm-global\\n```\\n#### 语法错误问题\\n> Syntax error: Unexpected token\\n\\n出现上面的语句就要检查一下相应的配置文件的语法是否有错误。\\n## 全局安装PM2\\n目前你是开着远程连接到你的服务器，一旦你把窗口关闭了，那么你刚才起的npm start --production可就悲剧了，如何避免呢，这时候我们就需要一个能帮我们在后台稳定运行node服务的工具了，目前比较火热的要数PM2了：\\n\\n```\\nyarn global add pm2 --prefix /usr/local\\n```\\n### 用PM2来启动Ghost的node服务\\n先切到ghost的目录，然后再运行\\n```\\nNODE_ENV=production pm2 start index.js --name \\\"blog\\\"\\n```\\n### 检查运行结果\\n```\\npm2 show blog  \\n```\\n\\n# 配置ghost\\n本次没有做太多自定义配置，具体可以参考[**这里**](https://www.binarization.com/archive/2016/configuring-ghost/)。\\n\\n\\n# 参考资料：\\n[《NPM 套件管理工具》](https://github.com/nodejs-tw/nodejs-wiki-book/blob/master/zh-tw/node_npm.rst)\\n[《Ghost 1.0+ 安装（非ghost-cli方式）》](https://www.ihx.me/ghost1-6insallnocli/)\\n[《knex-migrator-Github》](https://github.com/TryGhost/knex-migrator)\\n[《在阿里云 CentOS 7 系统上部署 Ghost 博客（已过时）》](https://loyalsoldier.me/deploy-ghost-on-centos-7/)\\n《如何在CentOS上安装Ghost？》\\n\"}]],\"sections\":[[10,0]]}","page":false,"plaintext":"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\n什么是ghost？\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\n但是这并不影响我们搭建ghost服务器。吼吼吼~\n\n搭建准备\n在阿里云 [https://www.aliyun.com/]上购买了一年的ECS服务器，配置如下:\nCPU 1核；\n内存 2G；\n带宽 1Mbps；\n硬盘 40G。\n系统 CentOS 7.3 64位\n\n云服务器配置\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\n\n云服务器ECS——网络和安全——安全组——配置规则\n\n\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\n这里的设置主要是参考了阿里云的官方帮助文档 [https://help.aliyun.com/knowledge_detail/34403.html]。","published_at":"2017-09-28T13:41:32.000Z","slug":"shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost","status":"published","title":"搭建Ghost服务器","updated_at":"2017-09-29T02:20:43.000Z","updated_by":"1","tags":{"0":{"id":"59ccb425a744810195a3dc01","name":"技术","slug":"ji-zhu","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T08:34:45.000Z","updated_at":"2017-09-28T08:34:45.000Z","created_by":"1","updated_by":"1"},"1":{"id":"59cd12bfa744810195a3dc06","name":"博客","slug":"bo-ke","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T15:18:23.000Z","updated_at":"2017-09-28T15:18:23.000Z","created_by":"1","updated_by":"1"}},"author_id":"1"}}},"query":{"include":"tags"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"http://47.95.197.107","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/*","content-type":"application/json; charset=utf-8","etag":"W/\"4d95-/Dk7HnPuj2OrpuOrCfgo02xCckg\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"64ms"},"msg":"","time":"2017-09-29T02:24:04.500Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"449d4060-a4bd-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/posts/59ccf296a744810195a3dc03/?include=tags","method":"PUT","originalUrl":"/ghost/api/v0.1/posts/59ccf296a744810195a3dc03/?include=tags","params":{"id":"59ccf296a744810195a3dc03"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","content-length":"19419","origin":"http://47.95.197.107","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"1.9","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{"posts":{"0":{"id":"59ccf296a744810195a3dc03","created_at":"2017-09-28T13:01:10.000Z","created_by":"1","featured":false,"feature_image":"/content/images/2017/09/ghost.png","codeinjection_foot":"","codeinjection_head":"","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\\n什么是ghost？\\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\\n但是这并不影响我们搭建ghost服务器。吼吼吼~\\n\\n# 搭建准备\\n在[**阿里云**](https://www.aliyun.com/)上购买了一年的ECS服务器，配置如下:\\nCPU 1核；\\n内存 2G；\\n带宽 1Mbps；\\n硬盘 40G。\\n系统 CentOS 7.3 64位\\n\\n# 云服务器配置\\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\\n> 云服务器ECS——网络和安全——安全组——配置规则\\n![--------](/content/images/2017/09/--------.jpg)\\n![-------](/content/images/2017/09/-------.jpg)\\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\\n这里的设置主要是参考了[**阿里云的官方帮助文档**](https://help.aliyun.com/knowledge_detail/34403.html)。\\n# 安装启动ghost\\n\\n## 需要用到的东西\\n\\n* 一个完成A记录解析设置的域名（建议做好ICP备案）；（可选）\\n* 使用 [**MySQL**](https://www.mysql.com/) 做数据库服务；\\n* 使用 [**Nginx**](https://nginx.org/) 做网页服务器（Ghost的代理服务）；\\n* 使用 [**NodeJS**](https://nodejs.org/) 做后端服务；\\n* [**Ghost**](https://ghost.org/)一个开源的博客系统；\\n\\n## 基础设置\\n\\n### 查看一下系统信息：\\n\\n```\\ncat /etc/redhat-release  \\n```\\n> CentOS Linux release 7.4.1708 (Core)\\n\\n\\n### 更新一下系统，安装一些基础工具：\\n\\n阿里云的centos已经优化了yum的源，你也可以自行修改\\n```\\nyum update -y && yum upgrage -y && yum clean all\\n```\\n\\ncurl, wget都是方便后边的下载\\nvim作为一个老牌Linux文本编辑工具，你值得拥有\\n还要安装开发工具包\\n```\\nyum groupinstall -y \\\"Development Tools\\\"\\nyum install curl wget vim -y\\n```\\n\\n### 更新全系统的vim配置\\n```\\ncurl https://raw.githubusercontent.com/tonyc726/vim-for-server/master/vimrc > /etc/vimrc  \\n```\\n\\n## MySQL安装设置\\n由于CentOS7已经不带Mysql数据库了（默认的数据库是MariaDB，Mysql的一个分支），所以需要先安裝MySQL Repository（具体的版本号，可以参考 https://dev.mysql.com/downloads/repo/yum/）:\\n\\n### 安裝 MySQL Repository\\n```\\nrpm -Uvh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\\n```\\n### 安装MySQL数据库的服务器社区稳定版\\n```\\nyum install mysql-community-server -y\\n```\\n### 启动MySQL服务\\n```\\nsystemctl start mysqld.service\\n```\\n### 设置随系统自启动\\n```\\nsystemctl enable mysqld.service  \\n```\\n### 初始化设置\\n```\\nmysql_secure_installation\\n```\\n由于MySQL5.7默认会初始化Root用户的密码，所以在执行之前需要获取这个初始密码：\\n（本次设置中并没有执行如下操作，应为默认安装后第一次运行时不需密码，在初始化过程中会提示设置密码）\\n```\\ngrep \\\"password\\\" /var/log/mysqld.log  \\n```\\n\\n\\n### 创建Ghost需要的用户及数据库：\\n\\n运行以后输入刚才拿到的密码\\n```\\nmysql -uroot -p \\n```\\n添加新数据库blog，后面Ghost会用到\\n```\\nCREATE DATABASE blog;\\n```\\n添加新用户ghost（password替换为你需要的密码）\\n```\\nCREATE USER ghost IDENTIFIED BY 'password';\\n```\\n授予ghost用户在blog数据库上的所有权限\\n（password就是你刚才创建ghost账户时设置的密码）\\n```\\nGRANT ALL PRIVILEGES ON blog.* TO 'ghost'@'localhost' IDENTIFIED BY 'password';\\n```\\n刷新权限\\n（当执行过GRANT，CREATE USER，REVOKE命令之后，必须要执行刷新权限才能生效）\\n```\\nFLUSH PRIVILEGES;\\n```\\nCtrl+D 退出\\n\\n好了，以上就是MySQL部分\\n\\n## NodeJS安装设置\\n\\n推荐使用以下方式安装NodeJS\\n本系统使用V6稳定版，如需其它版本，你可以自行调整\\n```\\ncurl -sL https://rpm.nodesource.com/setup_6.x | sudo -E bash -  \\n```\\n### 安装NodeJS及其依赖包\\n```\\nyum install gcc-c++ make nodejs -y\\n```\\nNodeJS安装以后，默认已经自带的NPM\\n不过[**npm**](https://github.com/nodejs-tw/nodejs-wiki-book/blob/master/zh-tw/node_npm.rst)之前一直被吐槽，建议***升级最新版或者用yarn代替***\\n### 升级npm至最新版本(^v5.0.4)\\n```\\nnpm install npm@latest -g\\n```\\n### 安装yarn代替（推荐）\\n```\\ncurl --silent --location https://rpm.nodesource.com/setup_6.x | bash -  \\nyum install yarn -y\\n```\\n\\n### 测试一下\\n```\\nnode -v\\n```\\n\\n> v6.11.0\\n```\\nnpm -v\\n```\\n> v5.1.0\\n```\\nyarn -v\\n```\\n> v0.27.5\\n\\n这里有个坑，如果直接使用yum install nodejs -y也是可以安装NodeJS的，不过nodesource维护的更加好，而且可以升级npm。\\n\\n如果你已经看到了最后输出的信息，那么久代表NodeJS已经就绪了。\\n## Nginx安装配置\\n\\n### 直接安装即可\\n```\\nyum install nginx -y\\n```\\n### 立即启动\\n```\\nsystemctl start nginx\\n```\\n### 设置开机自启动\\n```\\nsystemctl enable nginx  \\n```\\n\\n现在，打开你的浏览器，输入你的公网IP，不出意外，你就已经可以看到一个Nginx的欢迎页面了。\\n\\n不过，出于后期的扩展或者安全性考虑，我们需要为系统创建一个名为www的用户，专门用于管理网站.\\n\\n### 反向代理80端口\\n\\n众所周知，网站基本都以 80 端口作为默认端口（除非你不想让别人访问你的网站），也就是说：访问域名或服务器 IP 地址，实际上是在访问该服务器的 80 端口。而 Ghost 博客默认运行在 2368 端口上。\\n\\n为了输入域名或服务器 IP 地址就可以访问到你的 Ghost 博客，需要将访问 80 端口的请求，反向代理到 Ghost 的 2368 端口上。\\n\\n进入 Nginx 配置目录：\\n    ```\\n    cd /etc/nginx/conf.d\\n    ```\\n新建 Ghost 博客的 Nginx 配置文件：\\n```\\nvim ghost.conf\\n```\\n按 i 输入以下内容：\\n\\n> server {  \\n>     listen 80;\\n>     server_name loyalsoldier.me //修改为域名或服务器 IP 地址;\\n>     gzip on;\\n>     gzip_types text/plain application/xml text/css application/javascript application/json application/font-woff application/font-woff2 application/vnd.ms-fontobject application/x-font-ttf font/opentype application/pdf image/png image/bmp image/gif image/jpeg image/webp image/svg+xml;\\n>     gzip_proxied no-cache no-store private expired auth;\\n>     gzip_vary on;\\n>     gzip_min_length 1024;\\n>     location / {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>     }\\n>     location ~* .*\\\\.(jpg|jpeg|bmp|png|gif|ico|js|css|eot|woff|woff2|svg|ttf|otf)$ {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>         add_header Cache-Control max-age=2592000;\\n>         expires    30d;\\n>         etag       on;\\n>     }\\n> }\\n\\n按 ESC 键结束编辑，输入 :wq 保存文件并退出编辑\\n使用 nginx -t 测试 Nginx 配置文件是否语法正确：\\n\\n```\\nsudo nginx -t\\n```\\n若输出的结果有 ok、successful 等字样，表示配置正确\\n\\n如果正确的话，重启Nginx服务\\n```\\nsystemctl restart nginx.service  \\n```\\n\\n\\n## 添加新用户\\n创建一个名为www的用户组\\n```\\nadduser www\\n```\\n\\n### 设置密码(请记录下你的密码，以后需要用到)\\n```\\npasswd www\\n```\\n\\n### 分配Root权限 - 让我们新创建的www用户拥有Root用户的权限\\n```\\ngpasswd -a www wheel\\n```\\n### 将nginx用户添加入www的用户组，方便后期的权限控制\\n```\\nusermod -a -G nginx,www nginx  \\n```\\n\\n## 安装ghost\\n以上就是Ghost需要用到的基础系统了，下面就来安装Ghost，新开一个Terminal窗口，用**www**账户登录：\\n```\\nssh www@xxx.xxx.xxx.xxx  \\n```\\n然后下载Ghost最新的代码。\\n\\n### 下载Ghost最新的稳定版\\n```\\ncurl -L https://ghost.org/zip/ghost-latest.zip -o ghost.zip\\n```\\n### 解压\\n```\\nunzip -uo ghost.zip -d ghost\\n```\\n### 进入Ghost的目录并安装生产环境的依赖\\n```\\ncd ghost && npm install --production\\n```\\nnpm install --production这个命令可能需要执行多次，也是由于国内网络的原因，导致下载速度很慢，每次都下载不完全，需要多次执行，直到成功安装完成。\\n### 修改Ghost的config，修改数据库配置\\n```\\nvim config.js  \\n```\\n完整的config.js配置如下：\\n\\n> var path = require('path'),  \\n>     config;\\n> \\n> config = {  \\n>     production: {\\n>         url: 'https://www.xxxx.xxx',（换成服务器ip或者申请的域名）\\n>         mail: {},\\n>         database: {\\n>             client: 'mysql',（前面安装的mysql数据库，这里一定要对应）\\n>             connection: {\\n>                 host     : '127.0.0.1',\\n>                 user     : 'ghost', //用户名\\n>                 password : 'password', //ghost的密码，之前设置的\\n>                 database : 'blog', //数据库名\\n>                 charset  : 'utf8'\\n>             },\\n>             debug: false\\n>         },\\n>         server: {\\n>             host: '127.0.0.1',\\n>             port: '2368'\\n>         }\\n>     }\\n> };\\n> \\n> module.exports = config;  \\n\\n除了ghost安装根目录下的这个配置文件，还要检查一下/ghost/core/server/config下面的相应的配置文件，将相应的项更改正确，端口由于使用反向代理，因此不要更改，主要看一下url和database下面相应的设置。\\n\\n### 安装knex-migrator\\n实际上这个时候用生产模式运行ghost会报错，提示没有安装knex-migrator。\\n安装之前需要先编辑ghost安装文件夹下的***MigrtorConfig.js***文件。\\n\\n\\n使用vim编写MigrtorConfig.js文件：\\n\\n```\\nvim MigrtorConfig.js\\n```\\n\\n配置文件格式参考[**这里**](https://github.com/TryGhost/knex-migrator)：\\n\\n> module.exports = {\\n>     database: {\\n>         client: 'mysql',\\n>         connection: {\\n>             host: '127.0.0.1',\\n>             user: 'ghost',（之前mysql设置时建立的用户名）\\n>             password: 'password',（改成mysql的ghost用户密码）\\n>             charset: 'utf8',\\n>             name: 'blog'（之前mysql设置时建立的数据库）\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version',\\n>  /**\\n>     subfolder: 'upgrades'  [default: versions]\\n>     （这一部分在执行时总出问题，就注释掉了）\\n>  */\\n> }\\n\\n（下面应该是数据库使用sqlite3时的设置，由于本方案使用的mysql，所以可以不用写进去）\\n> module.exports = {\\n>     database: {\\n>         client: 'sqlite3',\\n>         connection: {\\n>             filename: 'path/to/your.db'\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version'\\n> }\\n> \\n\\n使用下面指令安装：\\n```\\nnpm install -g knex-migrator\\n```\\n\\n由于国内网络的原因，这个命令也可能需要执行多次才能安装完，中间会提示校验错误，这个应该是下载没有完成，而网络链接断开了的原因，再执行一次就行，直到最后完成安装。\\n\\n\\n运行一下：\\n```\\nnpm start --production\\n```\\n如果看到下面的提示，证明你已经完成80%了：\\n\\n\\n> Ghost is running in production...  \\n> Your blog is now available on xx.xx.xx.xx  \\n> Ctrl+C to shut down  \\n\\n### 问题及解决方案\\n\\n#### 权限问题\\n在执行npm start --production的时候，遇到npm权限的问题，提示没有node_modules文件夹的写权限，这个时候使用sudo命令进行安装时又提示别的错误，最终采用\\nnpmjs.com网站中的[解决方法2](https://docs.npmjs.com/getting-started/fixing-npm-permissions)。\\n首先检查npm的路径：\\n```\\nnpm config get prefix\\n```\\n发现是/usr\\n然后改变npm的默认路径：\\n1.为全局安装路径建立文件夹：（操作均在www用户下完成）\\n```\\nmkdir ~/.npm-global\\n```\\n2.设置默认路径：\\n```\\nnpm config set prefix '~/.npm-global'\\n```\\n3.加入用户PATH：\\n打开用户家目录下面的profile文件，这里是.bash_profile，加入下面的语句：\\n```\\nexport PATH=~/.npm-global/bin:$PATH\\n```\\n4.更新profile文件\\n```\\nsource ~/.bash_profile\\n```\\n**检验**：全局下载文件包，**不要用sudo**，也可以省去检测\\n``` \\nnpm install -g jshint\\n```\\n也可以使用下面更改环境变量的方式代替2-4步：（如果不想更改profile文件的话）\\n```\\nNPM_CONFIG_PREFIX=~/.npm-global\\n```\\n#### 语法错误问题\\n> Syntax error: Unexpected token\\n\\n出现上面的语句就要检查一下相应的配置文件的语法是否有错误。\\n## 全局安装PM2\\n目前你是开着远程连接到你的服务器，一旦你把窗口关闭了，那么你刚才起的npm start --production可就悲剧了，如何避免呢，这时候我们就需要一个能帮我们在后台稳定运行node服务的工具了，目前比较火热的要数PM2了：\\n\\n```\\nyarn global add pm2 --prefix /usr/local\\n```\\n### 用PM2来启动Ghost的node服务\\n先切到ghost的目录，然后再运行\\n```\\nNODE_ENV=production pm2 start index.js --name \\\"blog\\\"\\n```\\n### 检查运行结果\\n```\\npm2 show blog  \\n```\\n\\n# 配置ghost\\n本次没有做太多自定义配置，具体可以参考[**这里**](https://www.binarization.com/archive/2016/configuring-ghost/)。\\n\\n\\n# 参考资料：\\n[《NPM 套件管理工具》](https://github.com/nodejs-tw/nodejs-wiki-book/blob/master/zh-tw/node_npm.rst)\\n[《Ghost 1.0+ 安装（非ghost-cli方式）》](https://www.ihx.me/ghost1-6insallnocli/)\\n[《knex-migrator-Github》](https://github.com/TryGhost/knex-migrator)\\n[《在阿里云 CentOS 7 系统上部署 Ghost 博客（已过时）》](https://loyalsoldier.me/deploy-ghost-on-centos-7/)\\n《如何在CentOS上安装Ghost？》\\n\"}]],\"sections\":[[10,0]]}","page":false,"plaintext":"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\n什么是ghost？\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\n但是这并不影响我们搭建ghost服务器。吼吼吼~\n\n搭建准备\n在阿里云 [https://www.aliyun.com/]上购买了一年的ECS服务器，配置如下:\nCPU 1核；\n内存 2G；\n带宽 1Mbps；\n硬盘 40G。\n系统 CentOS 7.3 64位\n\n云服务器配置\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\n\n云服务器ECS——网络和安全——安全组——配置规则\n\n\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\n这里的设置主要是参考了阿里云的官方帮助文档 [https://help.aliyun.com/knowledge_detail/34403.html]。","published_at":"2017-09-28T13:41:32.000Z","slug":"shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost","status":"published","title":"搭建Ghost服务器","updated_at":"2017-09-29T02:24:04.000Z","updated_by":"1","tags":{"0":{"id":"59ccb425a744810195a3dc01","name":"技术","slug":"ji-zhu","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T08:34:45.000Z","updated_at":"2017-09-28T08:34:45.000Z","created_by":"1","updated_by":"1"},"1":{"id":"59cd12bfa744810195a3dc06","name":"博客","slug":"bo-ke","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T15:18:23.000Z","updated_at":"2017-09-28T15:18:23.000Z","created_by":"1","updated_by":"1"}},"author_id":"1"}}},"query":{"include":"tags"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"http://47.95.197.107","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/*","content-type":"application/json; charset=utf-8","etag":"W/\"4d95-KNCnc25KZ4926j9M6ZCDWX+qygQ\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"51ms"},"msg":"","time":"2017-09-29T02:24:06.557Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"5b086320-a4bd-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/posts/59ccf296a744810195a3dc03/?include=tags","method":"PUT","originalUrl":"/ghost/api/v0.1/posts/59ccf296a744810195a3dc03/?include=tags","params":{"id":"59ccf296a744810195a3dc03"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","content-length":"19492","origin":"http://47.95.197.107","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"1.9","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{"posts":{"0":{"id":"59ccf296a744810195a3dc03","created_at":"2017-09-28T13:01:10.000Z","created_by":"1","featured":false,"feature_image":"/content/images/2017/09/ghost.png","codeinjection_foot":"","codeinjection_head":"","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\\n什么是ghost？\\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\\n但是这并不影响我们搭建ghost服务器。吼吼吼~\\n\\n# 搭建准备\\n在[**阿里云**](https://www.aliyun.com/)上购买了一年的ECS服务器，配置如下:\\nCPU 1核；\\n内存 2G；\\n带宽 1Mbps；\\n硬盘 40G。\\n系统 CentOS 7.3 64位\\n\\n# 云服务器配置\\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\\n> 云服务器ECS——网络和安全——安全组——配置规则\\n![--------](/content/images/2017/09/--------.jpg)\\n![-------](/content/images/2017/09/-------.jpg)\\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\\n这里的设置主要是参考了[**阿里云的官方帮助文档**](https://help.aliyun.com/knowledge_detail/34403.html)。\\n# 安装启动ghost\\n\\n## 需要用到的东西\\n\\n* 一个完成A记录解析设置的域名（建议做好ICP备案）；（可选）\\n* 使用 [**MySQL**](https://www.mysql.com/) 做数据库服务；\\n* 使用 [**Nginx**](https://nginx.org/) 做网页服务器（Ghost的代理服务）；\\n* 使用 [**NodeJS**](https://nodejs.org/) 做后端服务；\\n* [**Ghost**](https://ghost.org/)一个开源的博客系统；\\n\\n## 基础设置\\n\\n### 查看一下系统信息：\\n\\n```\\ncat /etc/redhat-release  \\n```\\n> CentOS Linux release 7.4.1708 (Core)\\n\\n\\n### 更新一下系统，安装一些基础工具：\\n\\n阿里云的centos已经优化了yum的源，你也可以自行修改\\n```\\nyum update -y && yum upgrage -y && yum clean all\\n```\\n\\ncurl, wget都是方便后边的下载\\nvim作为一个老牌Linux文本编辑工具，你值得拥有\\n还要安装开发工具包\\n```\\nyum groupinstall -y \\\"Development Tools\\\"\\nyum install curl wget vim -y\\n```\\n\\n### 更新全系统的vim配置\\n```\\ncurl https://raw.githubusercontent.com/tonyc726/vim-for-server/master/vimrc > /etc/vimrc  \\n```\\n\\n## MySQL安装设置\\n由于CentOS7已经不带Mysql数据库了（默认的数据库是MariaDB，Mysql的一个分支），所以需要先安裝MySQL Repository（具体的版本号，可以参考 https://dev.mysql.com/downloads/repo/yum/）:\\n\\n### 安裝 MySQL Repository\\n```\\nrpm -Uvh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\\n```\\n### 安装MySQL数据库的服务器社区稳定版\\n```\\nyum install mysql-community-server -y\\n```\\n### 启动MySQL服务\\n```\\nsystemctl start mysqld.service\\n```\\n### 设置随系统自启动\\n```\\nsystemctl enable mysqld.service  \\n```\\n### 初始化设置\\n```\\nmysql_secure_installation\\n```\\n由于MySQL5.7默认会初始化Root用户的密码，所以在执行之前需要获取这个初始密码：\\n（本次设置中并没有执行如下操作，应为默认安装后第一次运行时不需密码，在初始化过程中会提示设置密码）\\n```\\ngrep \\\"password\\\" /var/log/mysqld.log  \\n```\\n\\n\\n### 创建Ghost需要的用户及数据库：\\n\\n运行以后输入刚才拿到的密码\\n```\\nmysql -uroot -p \\n```\\n添加新数据库blog，后面Ghost会用到\\n```\\nCREATE DATABASE blog;\\n```\\n添加新用户ghost（password替换为你需要的密码）\\n```\\nCREATE USER ghost IDENTIFIED BY 'password';\\n```\\n授予ghost用户在blog数据库上的所有权限\\n（password就是你刚才创建ghost账户时设置的密码）\\n```\\nGRANT ALL PRIVILEGES ON blog.* TO 'ghost'@'localhost' IDENTIFIED BY 'password';\\n```\\n刷新权限\\n（当执行过GRANT，CREATE USER，REVOKE命令之后，必须要执行刷新权限才能生效）\\n```\\nFLUSH PRIVILEGES;\\n```\\nCtrl+D 退出\\n\\n好了，以上就是MySQL部分\\n\\n## NodeJS安装设置\\n\\n推荐使用以下方式安装NodeJS\\n本系统使用V6稳定版，如需其它版本，你可以自行调整\\n```\\ncurl -sL https://rpm.nodesource.com/setup_6.x | sudo -E bash -  \\n```\\n### 安装NodeJS及其依赖包\\n```\\nyum install gcc-c++ make nodejs -y\\n```\\nNodeJS安装以后，默认已经自带的NPM\\n不过[**npm**](https://github.com/nodejs-tw/nodejs-wiki-book/blob/master/zh-tw/node_npm.rst)之前一直被吐槽，建议***升级最新版或者用yarn代替***\\n### 升级npm至最新版本(^v5.0.4)\\n```\\nnpm install npm@latest -g\\n```\\n### 安装yarn代替（推荐）\\n```\\ncurl --silent --location https://rpm.nodesource.com/setup_6.x | bash -  \\nyum install yarn -y\\n```\\n\\n### 测试一下\\n```\\nnode -v\\n```\\n\\n> v6.11.0\\n```\\nnpm -v\\n```\\n> v5.1.0\\n```\\nyarn -v\\n```\\n> v0.27.5\\n\\n这里有个坑，如果直接使用yum install nodejs -y也是可以安装NodeJS的，不过nodesource维护的更加好，而且可以升级npm。\\n\\n如果你已经看到了最后输出的信息，那么久代表NodeJS已经就绪了。\\n## Nginx安装配置\\n\\n### 直接安装即可\\n```\\nyum install nginx -y\\n```\\n### 立即启动\\n```\\nsystemctl start nginx\\n```\\n### 设置开机自启动\\n```\\nsystemctl enable nginx  \\n```\\n\\n现在，打开你的浏览器，输入你的公网IP，不出意外，你就已经可以看到一个Nginx的欢迎页面了。\\n\\n不过，出于后期的扩展或者安全性考虑，我们需要为系统创建一个名为www的用户，专门用于管理网站.\\n\\n### 反向代理80端口\\n\\n众所周知，网站基本都以 80 端口作为默认端口（除非你不想让别人访问你的网站），也就是说：访问域名或服务器 IP 地址，实际上是在访问该服务器的 80 端口。而 Ghost 博客默认运行在 2368 端口上。\\n\\n为了输入域名或服务器 IP 地址就可以访问到你的 Ghost 博客，需要将访问 80 端口的请求，反向代理到 Ghost 的 2368 端口上。\\n\\n进入 Nginx 配置目录：\\n    ```\\n    cd /etc/nginx/conf.d\\n    ```\\n新建 Ghost 博客的 Nginx 配置文件：\\n```\\nvim ghost.conf\\n```\\n按 i 输入以下内容：\\n\\n> server {  \\n>     listen 80;\\n>     server_name loyalsoldier.me //修改为域名或服务器 IP 地址;\\n>     gzip on;\\n>     gzip_types text/plain application/xml text/css application/javascript application/json application/font-woff application/font-woff2 application/vnd.ms-fontobject application/x-font-ttf font/opentype application/pdf image/png image/bmp image/gif image/jpeg image/webp image/svg+xml;\\n>     gzip_proxied no-cache no-store private expired auth;\\n>     gzip_vary on;\\n>     gzip_min_length 1024;\\n>     location / {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>     }\\n>     location ~* .*\\\\.(jpg|jpeg|bmp|png|gif|ico|js|css|eot|woff|woff2|svg|ttf|otf)$ {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>         add_header Cache-Control max-age=2592000;\\n>         expires    30d;\\n>         etag       on;\\n>     }\\n> }\\n\\n按 ESC 键结束编辑，输入 :wq 保存文件并退出编辑\\n使用 nginx -t 测试 Nginx 配置文件是否语法正确：\\n\\n```\\nsudo nginx -t\\n```\\n若输出的结果有 ok、successful 等字样，表示配置正确\\n\\n如果正确的话，重启Nginx服务\\n```\\nsystemctl restart nginx.service  \\n```\\n\\n\\n## 添加新用户\\n创建一个名为www的用户组\\n```\\nadduser www\\n```\\n\\n### 设置密码(请记录下你的密码，以后需要用到)\\n```\\npasswd www\\n```\\n\\n### 分配Root权限 - 让我们新创建的www用户拥有Root用户的权限\\n```\\ngpasswd -a www wheel\\n```\\n### 将nginx用户添加入www的用户组，方便后期的权限控制\\n```\\nusermod -a -G nginx,www nginx  \\n```\\n\\n## 安装ghost\\n以上就是Ghost需要用到的基础系统了，下面就来安装Ghost，新开一个Terminal窗口，用**www**账户登录：\\n```\\nssh www@xxx.xxx.xxx.xxx  \\n```\\n然后下载Ghost最新的代码。\\n\\n### 下载Ghost最新的稳定版\\n```\\ncurl -L https://ghost.org/zip/ghost-latest.zip -o ghost.zip\\n```\\n### 解压\\n```\\nunzip -uo ghost.zip -d ghost\\n```\\n### 进入Ghost的目录并安装生产环境的依赖\\n```\\ncd ghost && npm install --production\\n```\\nnpm install --production这个命令可能需要执行多次，也是由于国内网络的原因，导致下载速度很慢，每次都下载不完全，需要多次执行，直到成功安装完成。\\n### 修改Ghost的config，修改数据库配置\\n```\\nvim config.js  \\n```\\n完整的config.js配置如下：\\n\\n> var path = require('path'),  \\n>     config;\\n> \\n> config = {  \\n>     production: {\\n>         url: 'https://www.xxxx.xxx',（换成服务器ip或者申请的域名）\\n>         mail: {},\\n>         database: {\\n>             client: 'mysql',（前面安装的mysql数据库，这里一定要对应）\\n>             connection: {\\n>                 host     : '127.0.0.1',\\n>                 user     : 'ghost', //用户名\\n>                 password : 'password', //ghost的密码，之前设置的\\n>                 database : 'blog', //数据库名\\n>                 charset  : 'utf8'\\n>             },\\n>             debug: false\\n>         },\\n>         server: {\\n>             host: '127.0.0.1',\\n>             port: '2368'\\n>         }\\n>     }\\n> };\\n> \\n> module.exports = config;  \\n\\n除了ghost安装根目录下的这个配置文件，还要检查一下/ghost/core/server/config下面的相应的配置文件，将相应的项更改正确，端口由于使用反向代理，因此不要更改，主要看一下url和database下面相应的设置。\\n\\n### 安装knex-migrator\\n实际上这个时候用生产模式运行ghost会报错，提示没有安装knex-migrator。\\n安装之前需要先编辑ghost安装文件夹下的***MigrtorConfig.js***文件。\\n\\n\\n使用vim编写MigrtorConfig.js文件：\\n\\n```\\nvim MigrtorConfig.js\\n```\\n\\n配置文件格式参考[**这里**](https://github.com/TryGhost/knex-migrator)：\\n\\n> module.exports = {\\n>     database: {\\n>         client: 'mysql',\\n>         connection: {\\n>             host: '127.0.0.1',\\n>             user: 'ghost',（之前mysql设置时建立的用户名）\\n>             password: 'password',（改成mysql的ghost用户密码）\\n>             charset: 'utf8',\\n>             name: 'blog'（之前mysql设置时建立的数据库）\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version',\\n>  /**\\n>     subfolder: 'upgrades'  [default: versions]\\n>     （这一部分在执行时总出问题，就注释掉了）\\n>  */\\n> }\\n\\n（下面应该是数据库使用sqlite3时的设置，由于本方案使用的mysql，所以可以不用写进去）\\n> module.exports = {\\n>     database: {\\n>         client: 'sqlite3',\\n>         connection: {\\n>             filename: 'path/to/your.db'\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version'\\n> }\\n> \\n\\n使用下面指令安装：\\n```\\nnpm install -g knex-migrator\\n```\\n\\n由于国内网络的原因，这个命令也可能需要执行多次才能安装完，中间会提示校验错误，这个应该是下载没有完成，而网络链接断开了的原因，再执行一次就行，直到最后完成安装。\\n\\n\\n运行一下：\\n```\\nnpm start --production\\n```\\n如果看到下面的提示，证明你已经完成80%了：\\n\\n\\n> Ghost is running in production...  \\n> Your blog is now available on xx.xx.xx.xx  \\n> Ctrl+C to shut down  \\n\\n### 问题及解决方案\\n\\n#### 权限问题\\n在执行npm start --production的时候，遇到npm权限的问题，提示没有node_modules文件夹的写权限，这个时候使用sudo命令进行安装时又提示别的错误，最终采用\\nnpmjs.com网站中的[解决方法2](https://docs.npmjs.com/getting-started/fixing-npm-permissions)。\\n首先检查npm的路径：\\n```\\nnpm config get prefix\\n```\\n发现是/usr\\n然后改变npm的默认路径：\\n1.为全局安装路径建立文件夹：（操作均在www用户下完成）\\n```\\nmkdir ~/.npm-global\\n```\\n2.设置默认路径：\\n```\\nnpm config set prefix '~/.npm-global'\\n```\\n3.加入用户PATH：\\n打开用户家目录下面的profile文件，这里是.bash_profile，加入下面的语句：\\n```\\nexport PATH=~/.npm-global/bin:$PATH\\n```\\n4.更新profile文件\\n```\\nsource ~/.bash_profile\\n```\\n**检验**：全局下载文件包，**不要用sudo**，也可以省去检测\\n``` \\nnpm install -g jshint\\n```\\n也可以使用下面更改环境变量的方式代替2-4步：（如果不想更改profile文件的话）\\n```\\nNPM_CONFIG_PREFIX=~/.npm-global\\n```\\n#### 语法错误问题\\n> Syntax error: Unexpected token\\n\\n出现上面的语句就要检查一下相应的配置文件的语法是否有错误。\\n## 全局安装PM2\\n目前你是开着远程连接到你的服务器，一旦你把窗口关闭了，那么你刚才起的npm start --production可就悲剧了，如何避免呢，这时候我们就需要一个能帮我们在后台稳定运行node服务的工具了，目前比较火热的要数PM2了：\\n\\n```\\nyarn global add pm2 --prefix /usr/local\\n```\\n### 用PM2来启动Ghost的node服务\\n先切到ghost的目录，然后再运行\\n```\\nNODE_ENV=production pm2 start index.js --name \\\"blog\\\"\\n```\\n### 检查运行结果\\n```\\npm2 show blog  \\n```\\n\\n# 配置ghost\\n本次没有做太多自定义配置，具体可以参考[**这里**](https://www.binarization.com/archive/2016/configuring-ghost/)。\\n\\n\\n# 参考资料：\\n[《NPM 套件管理工具》](https://github.com/nodejs-tw/nodejs-wiki-book/blob/master/zh-tw/node_npm.rst)\\n[《Ghost 1.0+ 安装（非ghost-cli方式）》](https://www.ihx.me/ghost1-6insallnocli/)\\n[《knex-migrator-Github》](https://github.com/TryGhost/knex-migrator)\\n[《在阿里云 CentOS 7 系统上部署 Ghost 博客（已过时）》](https://loyalsoldier.me/deploy-ghost-on-centos-7/)\\n[《如何在CentOS上安装Ghost？》](https://www.binarization.com/archive/2016/installing-ghost-centos/)\\n\\n\"}]],\"sections\":[[10,0]]}","page":false,"plaintext":"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\n什么是ghost？\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\n但是这并不影响我们搭建ghost服务器。吼吼吼~\n\n搭建准备\n在阿里云 [https://www.aliyun.com/]上购买了一年的ECS服务器，配置如下:\nCPU 1核；\n内存 2G；\n带宽 1Mbps；\n硬盘 40G。\n系统 CentOS 7.3 64位\n\n云服务器配置\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\n\n云服务器ECS——网络和安全——安全组——配置规则\n\n\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\n这里的设置主要是参考了阿里云的官方帮助文档 [https://help.aliyun.com/knowledge_detail/34403.html]。","published_at":"2017-09-28T13:41:32.000Z","slug":"shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost","status":"published","title":"搭建Ghost服务器","updated_at":"2017-09-29T02:24:06.000Z","updated_by":"1","tags":{"0":{"id":"59ccb425a744810195a3dc01","name":"技术","slug":"ji-zhu","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T08:34:45.000Z","updated_at":"2017-09-28T08:34:45.000Z","created_by":"1","updated_by":"1"},"1":{"id":"59cd12bfa744810195a3dc06","name":"博客","slug":"bo-ke","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T15:18:23.000Z","updated_at":"2017-09-28T15:18:23.000Z","created_by":"1","updated_by":"1"}},"author_id":"1"}}},"query":{"include":"tags"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"http://47.95.197.107","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/*","content-type":"application/json; charset=utf-8","etag":"W/\"4de8-AcY9dj6osnrzP0RO/vjwf6LB+HU\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"74ms"},"msg":"","time":"2017-09-29T02:24:44.191Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"a78190f0-a4bd-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/posts/59ccf296a744810195a3dc03/?include=tags","method":"PUT","originalUrl":"/ghost/api/v0.1/posts/59ccf296a744810195a3dc03/?include=tags","params":{"id":"59ccf296a744810195a3dc03"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","content-length":"19803","origin":"http://47.95.197.107","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"1.9","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{"posts":{"0":{"id":"59ccf296a744810195a3dc03","created_at":"2017-09-28T13:01:10.000Z","created_by":"1","featured":false,"feature_image":"/content/images/2017/09/ghost.png","codeinjection_foot":"","codeinjection_head":"","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\\n什么是ghost？\\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\\n但是这并不影响我们搭建ghost服务器。吼吼吼~\\n\\n# 搭建准备\\n在[**阿里云**](https://www.aliyun.com/)上购买了一年的ECS服务器，配置如下:\\nCPU 1核；\\n内存 2G；\\n带宽 1Mbps；\\n硬盘 40G。\\n系统 CentOS 7.3 64位\\n\\n# 云服务器配置\\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\\n> 云服务器ECS——网络和安全——安全组——配置规则\\n![--------](/content/images/2017/09/--------.jpg)\\n![-------](/content/images/2017/09/-------.jpg)\\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\\n这里的设置主要是参考了[**阿里云的官方帮助文档**](https://help.aliyun.com/knowledge_detail/34403.html)。\\n# 安装启动ghost\\n\\n## 需要用到的东西\\n\\n* 一个完成A记录解析设置的域名（建议做好ICP备案）；（可选）\\n* 使用 [**MySQL**](https://www.mysql.com/) 做数据库服务；\\n* 使用 [**Nginx**](https://nginx.org/) 做网页服务器（Ghost的代理服务）；\\n* 使用 [**NodeJS**](https://nodejs.org/) 做后端服务；\\n* [**Ghost**](https://ghost.org/)一个开源的博客系统；\\n\\n## 基础设置\\n\\n### 查看一下系统信息：\\n\\n```\\ncat /etc/redhat-release  \\n```\\n> CentOS Linux release 7.4.1708 (Core)\\n\\n\\n### 更新一下系统，安装一些基础工具：\\n\\n阿里云的centos已经优化了yum的源，你也可以自行修改\\n```\\nyum update -y && yum upgrage -y && yum clean all\\n```\\n\\ncurl, wget都是方便后边的下载\\nvim作为一个老牌Linux文本编辑工具，你值得拥有\\n还要安装开发工具包\\n```\\nyum groupinstall -y \\\"Development Tools\\\"\\nyum install curl wget vim -y\\n```\\n\\n### 更新全系统的vim配置\\n```\\ncurl https://raw.githubusercontent.com/tonyc726/vim-for-server/master/vimrc > /etc/vimrc  \\n```\\n\\n## MySQL安装设置\\n由于CentOS7已经不带Mysql数据库了（默认的数据库是MariaDB，Mysql的一个分支），所以需要先安裝MySQL Repository（具体的版本号，可以参考 https://dev.mysql.com/downloads/repo/yum/）:\\n\\n### 安裝 MySQL Repository\\n```\\nrpm -Uvh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\\n```\\n### 安装MySQL数据库的服务器社区稳定版\\n```\\nyum install mysql-community-server -y\\n```\\n### 启动MySQL服务\\n```\\nsystemctl start mysqld.service\\n```\\n### 设置随系统自启动\\n```\\nsystemctl enable mysqld.service  \\n```\\n### 初始化设置\\n```\\nmysql_secure_installation\\n```\\n由于MySQL5.7默认会初始化Root用户的密码，所以在执行之前需要获取这个初始密码：\\n（本次设置中并没有执行如下操作，应为默认安装后第一次运行时不需密码，在初始化过程中会提示设置密码）\\n```\\ngrep \\\"password\\\" /var/log/mysqld.log  \\n```\\n\\n\\n### 创建Ghost需要的用户及数据库：\\n\\n运行以后输入刚才拿到的密码\\n```\\nmysql -uroot -p \\n```\\n添加新数据库blog，后面Ghost会用到\\n```\\nCREATE DATABASE blog;\\n```\\n添加新用户ghost（password替换为你需要的密码）\\n```\\nCREATE USER ghost IDENTIFIED BY 'password';\\n```\\n授予ghost用户在blog数据库上的所有权限\\n（password就是你刚才创建ghost账户时设置的密码）\\n```\\nGRANT ALL PRIVILEGES ON blog.* TO 'ghost'@'localhost' IDENTIFIED BY 'password';\\n```\\n刷新权限\\n（当执行过GRANT，CREATE USER，REVOKE命令之后，必须要执行刷新权限才能生效）\\n```\\nFLUSH PRIVILEGES;\\n```\\nCtrl+D 退出\\n\\n好了，以上就是MySQL部分\\n\\n## NodeJS安装设置\\n\\n推荐使用以下方式安装NodeJS\\n本系统使用V6稳定版，如需其它版本，你可以自行调整\\n```\\ncurl -sL https://rpm.nodesource.com/setup_6.x | sudo -E bash -  \\n```\\n### 安装NodeJS及其依赖包\\n```\\nyum install gcc-c++ make nodejs -y\\n```\\nNodeJS安装以后，默认已经自带的NPM\\n不过[**npm**](https://github.com/nodejs-tw/nodejs-wiki-book/blob/master/zh-tw/node_npm.rst)之前一直被吐槽，建议***升级最新版或者用yarn代替***\\n### 升级npm至最新版本(^v5.0.4)\\n```\\nnpm install npm@latest -g\\n```\\n### 安装yarn代替（推荐）\\n```\\ncurl --silent --location https://rpm.nodesource.com/setup_6.x | bash -  \\nyum install yarn -y\\n```\\n\\n### 测试一下\\n```\\nnode -v\\n```\\n\\n> v6.11.0\\n```\\nnpm -v\\n```\\n> v5.1.0\\n```\\nyarn -v\\n```\\n> v0.27.5\\n\\n这里有个坑，如果直接使用yum install nodejs -y也是可以安装NodeJS的，不过nodesource维护的更加好，而且可以升级npm。\\n\\n如果你已经看到了最后输出的信息，那么久代表NodeJS已经就绪了。\\n## Nginx安装配置\\n\\n### 直接安装即可\\n```\\nyum install nginx -y\\n```\\n### 立即启动\\n```\\nsystemctl start nginx\\n```\\n### 设置开机自启动\\n```\\nsystemctl enable nginx  \\n```\\n\\n现在，打开你的浏览器，输入你的公网IP，不出意外，你就已经可以看到一个Nginx的欢迎页面了。\\n\\n不过，出于后期的扩展或者安全性考虑，我们需要为系统创建一个名为www的用户，专门用于管理网站.\\n\\n### 反向代理80端口\\n\\n众所周知，网站基本都以 80 端口作为默认端口（除非你不想让别人访问你的网站），也就是说：访问域名或服务器 IP 地址，实际上是在访问该服务器的 80 端口。而 Ghost 博客默认运行在 2368 端口上。\\n\\n为了输入域名或服务器 IP 地址就可以访问到你的 Ghost 博客，需要将访问 80 端口的请求，反向代理到 Ghost 的 2368 端口上。\\n\\n进入 Nginx 配置目录：\\n    ```\\n    cd /etc/nginx/conf.d\\n    ```\\n新建 Ghost 博客的 Nginx 配置文件：\\n```\\nvim ghost.conf\\n```\\n按 i 输入以下内容：\\n\\n> server {  \\n>     listen 80;\\n>     server_name loyalsoldier.me //修改为域名或服务器 IP 地址;\\n>     gzip on;\\n>     gzip_types text/plain application/xml text/css application/javascript application/json application/font-woff application/font-woff2 application/vnd.ms-fontobject application/x-font-ttf font/opentype application/pdf image/png image/bmp image/gif image/jpeg image/webp image/svg+xml;\\n>     gzip_proxied no-cache no-store private expired auth;\\n>     gzip_vary on;\\n>     gzip_min_length 1024;\\n>     location / {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>     }\\n>     location ~* .*\\\\.(jpg|jpeg|bmp|png|gif|ico|js|css|eot|woff|woff2|svg|ttf|otf)$ {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>         add_header Cache-Control max-age=2592000;\\n>         expires    30d;\\n>         etag       on;\\n>     }\\n> }\\n\\n按 ESC 键结束编辑，输入 :wq 保存文件并退出编辑\\n使用 nginx -t 测试 Nginx 配置文件是否语法正确：\\n\\n```\\nsudo nginx -t\\n```\\n若输出的结果有 ok、successful 等字样，表示配置正确\\n\\n如果正确的话，重启Nginx服务\\n```\\nsystemctl restart nginx.service  \\n```\\n\\n\\n## 添加新用户\\n创建一个名为www的用户组\\n```\\nadduser www\\n```\\n\\n### 设置密码(请记录下你的密码，以后需要用到)\\n```\\npasswd www\\n```\\n\\n### 分配Root权限 - 让我们新创建的www用户拥有Root用户的权限\\n```\\ngpasswd -a www wheel\\n```\\n### 将nginx用户添加入www的用户组，方便后期的权限控制\\n```\\nusermod -a -G nginx,www nginx  \\n```\\n\\n## 安装ghost\\n以上就是Ghost需要用到的基础系统了，下面就来安装Ghost，新开一个Terminal窗口，用**www**账户登录：\\n```\\nssh www@xxx.xxx.xxx.xxx  \\n```\\n然后下载Ghost最新的代码。\\n\\n### 下载Ghost最新的稳定版\\n```\\ncurl -L https://ghost.org/zip/ghost-latest.zip -o ghost.zip\\n```\\n### 解压\\n```\\nunzip -uo ghost.zip -d ghost\\n```\\n### 进入Ghost的目录并安装生产环境的依赖\\n```\\ncd ghost && npm install --production\\n```\\nnpm install --production这个命令可能需要执行多次，也是由于国内网络的原因，导致下载速度很慢，每次都下载不完全，需要多次执行，直到成功安装完成。\\n### 修改Ghost的config，修改数据库配置\\n```\\nvim config.js  \\n```\\n完整的config.js配置如下：\\n\\n> var path = require('path'),  \\n>     config;\\n> \\n> config = {  \\n>     production: {\\n>         url: 'https://www.xxxx.xxx',（换成服务器ip或者申请的域名）\\n>         mail: {},\\n>         database: {\\n>             client: 'mysql',（前面安装的mysql数据库，这里一定要对应）\\n>             connection: {\\n>                 host     : '127.0.0.1',\\n>                 user     : 'ghost', //用户名\\n>                 password : 'password', //ghost的密码，之前设置的\\n>                 database : 'blog', //数据库名\\n>                 charset  : 'utf8'\\n>             },\\n>             debug: false\\n>         },\\n>         server: {\\n>             host: '127.0.0.1',\\n>             port: '2368'\\n>         }\\n>     }\\n> };\\n> \\n> module.exports = config;  \\n\\n除了ghost安装根目录下的这个配置文件，还要检查一下/ghost/core/server/config下面的相应的配置文件，将相应的项更改正确，端口由于使用反向代理，因此不要更改，主要看一下url和database下面相应的设置。\\n\\n### 安装knex-migrator\\n实际上这个时候用生产模式运行ghost会报错，提示没有安装knex-migrator。\\n安装之前需要先编辑ghost安装文件夹下的***MigrtorConfig.js***文件。\\n\\n\\n使用vim编写MigrtorConfig.js文件：\\n\\n```\\nvim MigrtorConfig.js\\n```\\n\\n配置文件格式参考[**这里**](https://github.com/TryGhost/knex-migrator)：\\n\\n> module.exports = {\\n>     database: {\\n>         client: 'mysql',\\n>         connection: {\\n>             host: '127.0.0.1',\\n>             user: 'ghost',（之前mysql设置时建立的用户名）\\n>             password: 'password',（改成mysql的ghost用户密码）\\n>             charset: 'utf8',\\n>             name: 'blog'（之前mysql设置时建立的数据库）\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version',\\n>  /**\\n>     subfolder: 'upgrades'  [default: versions]\\n>     （这一部分在执行时总出问题，就注释掉了）\\n>  */\\n> }\\n\\n（下面应该是数据库使用sqlite3时的设置，由于本方案使用的mysql，所以可以不用写进去）\\n> module.exports = {\\n>     database: {\\n>         client: 'sqlite3',\\n>         connection: {\\n>             filename: 'path/to/your.db'\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version'\\n> }\\n> \\n\\n使用下面指令安装：\\n```\\nnpm install -g knex-migrator\\n```\\n\\n由于国内网络的原因，这个命令也可能需要执行多次才能安装完，中间会提示校验错误，这个应该是下载没有完成，而网络链接断开了的原因，再执行一次就行，直到最后完成安装。\\n\\n\\n运行一下：\\n```\\nnpm start --production\\n```\\n如果看到下面的提示，证明你已经完成80%了：\\n\\n\\n> Ghost is running in production...  \\n> Your blog is now available on xx.xx.xx.xx  \\n> Ctrl+C to shut down  \\n\\n### 问题及解决方案\\n\\n#### 权限问题\\n在执行npm start --production的时候，遇到npm权限的问题，提示没有node_modules文件夹的写权限，这个时候使用sudo命令进行安装时又提示别的错误，最终采用\\nnpmjs.com网站中的[解决方法2](https://docs.npmjs.com/getting-started/fixing-npm-permissions)。\\n首先检查npm的路径：\\n```\\nnpm config get prefix\\n```\\n发现是/usr\\n然后改变npm的默认路径：\\n1.为全局安装路径建立文件夹：（操作均在www用户下完成）\\n```\\nmkdir ~/.npm-global\\n```\\n2.设置默认路径：\\n```\\nnpm config set prefix '~/.npm-global'\\n```\\n3.加入用户PATH：\\n打开用户家目录下面的profile文件，这里是.bash_profile，加入下面的语句：\\n```\\nexport PATH=~/.npm-global/bin:$PATH\\n```\\n4.更新profile文件\\n```\\nsource ~/.bash_profile\\n```\\n**检验**：全局下载文件包，**不要用sudo**，也可以省去检测\\n``` \\nnpm install -g jshint\\n```\\n也可以使用下面更改环境变量的方式代替2-4步：（如果不想更改profile文件的话）\\n```\\nNPM_CONFIG_PREFIX=~/.npm-global\\n```\\n#### 语法错误问题\\n> Syntax error: Unexpected token\\n\\n出现上面的语句就要检查一下相应的配置文件的语法是否有错误。\\n## 全局安装PM2\\n目前你是开着远程连接到你的服务器，一旦你把窗口关闭了，那么你刚才起的npm start --production可就悲剧了，如何避免呢，这时候我们就需要一个能帮我们在后台稳定运行node服务的工具了，目前比较火热的要数PM2了：\\n\\n```\\nyarn global add pm2 --prefix /usr/local\\n```\\n### 用PM2来启动Ghost的node服务\\n先切到ghost的目录，然后再运行\\n```\\nNODE_ENV=production pm2 start index.js --name \\\"blog\\\"\\n```\\n### 检查运行结果\\n```\\npm2 show blog  \\n```\\n\\n# 配置ghost\\n本次没有做太多自定义配置，具体可以参考[**这里**](https://www.binarization.com/archive/2016/configuring-ghost/)。\\n\\n\\n# 参考资料：\\n[《NPM 套件管理工具》](https://github.com/nodejs-tw/nodejs-wiki-book/blob/master/zh-tw/node_npm.rst)\\n[《Ghost 1.0+ 安装（非ghost-cli方式）》](https://www.ihx.me/ghost1-6insallnocli/)\\n[《knex-migrator-Github》](https://github.com/TryGhost/knex-migrator)\\n[《在阿里云 CentOS 7 系统上部署 Ghost 博客（已过时）》](https://loyalsoldier.me/deploy-ghost-on-centos-7/)\\n[《如何在CentOS上安装Ghost？》](https://www.binarization.com/archive/2016/installing-ghost-centos/)\\n[《ghost——Using Ghost as an NPM module》](https://docs.ghost.org/v1/docs/using-ghost-as-an-npm-module)\\n[<ghost——Install & Setup (production)》](https://docs.ghost.org/v1/docs/install)\\n[《CentOS Ghost安装教程（PM2+Nginx）》](https://codesky.me/archives/centos-ghost-install-introduce.wind)\\n\"}]],\"sections\":[[10,0]]}","page":false,"plaintext":"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\n什么是ghost？\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\n但是这并不影响我们搭建ghost服务器。吼吼吼~\n\n搭建准备\n在阿里云 [https://www.aliyun.com/]上购买了一年的ECS服务器，配置如下:\nCPU 1核；\n内存 2G；\n带宽 1Mbps；\n硬盘 40G。\n系统 CentOS 7.3 64位\n\n云服务器配置\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\n\n云服务器ECS——网络和安全——安全组——配置规则\n\n\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\n这里的设置主要是参考了阿里云的官方帮助文档 [https://help.aliyun.com/knowledge_detail/34403.html]。","published_at":"2017-09-28T13:41:32.000Z","slug":"shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost","status":"published","title":"搭建Ghost服务器","updated_at":"2017-09-29T02:24:44.000Z","updated_by":"1","tags":{"0":{"id":"59ccb425a744810195a3dc01","name":"技术","slug":"ji-zhu","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T08:34:45.000Z","updated_at":"2017-09-28T08:34:45.000Z","created_by":"1","updated_by":"1"},"1":{"id":"59cd12bfa744810195a3dc06","name":"博客","slug":"bo-ke","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T15:18:23.000Z","updated_at":"2017-09-28T15:18:23.000Z","created_by":"1","updated_by":"1"}},"author_id":"1"}}},"query":{"include":"tags"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"http://47.95.197.107","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/*","content-type":"application/json; charset=utf-8","etag":"W/\"4f59-Olo2oVqSlbDxNMM2acoVVPNUFPI\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"79ms"},"msg":"","time":"2017-09-29T02:26:52.497Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"07b4a430-a4be-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/posts/59ccf296a744810195a3dc03/?include=tags","method":"PUT","originalUrl":"/ghost/api/v0.1/posts/59ccf296a744810195a3dc03/?include=tags","params":{"id":"59ccf296a744810195a3dc03"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","content-length":"20085","origin":"http://47.95.197.107","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"1.9","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{"posts":{"0":{"id":"59ccf296a744810195a3dc03","created_at":"2017-09-28T13:01:10.000Z","created_by":"1","featured":false,"feature_image":"/content/images/2017/09/ghost.png","codeinjection_foot":"","codeinjection_head":"","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\\n什么是ghost？\\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\\n但是这并不影响我们搭建ghost服务器。吼吼吼~\\n\\n# 搭建准备\\n在[**阿里云**](https://www.aliyun.com/)上购买了一年的ECS服务器，配置如下:\\nCPU 1核；\\n内存 2G；\\n带宽 1Mbps；\\n硬盘 40G。\\n系统 CentOS 7.3 64位\\n\\n# 云服务器配置\\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\\n> 云服务器ECS——网络和安全——安全组——配置规则\\n![--------](/content/images/2017/09/--------.jpg)\\n![-------](/content/images/2017/09/-------.jpg)\\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\\n这里的设置主要是参考了[**阿里云的官方帮助文档**](https://help.aliyun.com/knowledge_detail/34403.html)。\\n# 安装启动ghost\\n\\n## 需要用到的东西\\n\\n* 一个完成A记录解析设置的域名（建议做好ICP备案）；（可选）\\n* 使用 [**MySQL**](https://www.mysql.com/) 做数据库服务；\\n* 使用 [**Nginx**](https://nginx.org/) 做网页服务器（Ghost的代理服务）；\\n* 使用 [**NodeJS**](https://nodejs.org/) 做后端服务；\\n* [**Ghost**](https://ghost.org/)一个开源的博客系统；\\n\\n## 基础设置\\n\\n### 查看一下系统信息：\\n\\n```\\ncat /etc/redhat-release  \\n```\\n> CentOS Linux release 7.4.1708 (Core)\\n\\n\\n### 更新一下系统，安装一些基础工具：\\n\\n阿里云的centos已经优化了yum的源，你也可以自行修改\\n```\\nyum update -y && yum upgrage -y && yum clean all\\n```\\n\\ncurl, wget都是方便后边的下载\\nvim作为一个老牌Linux文本编辑工具，你值得拥有\\n还要安装开发工具包\\n```\\nyum groupinstall -y \\\"Development Tools\\\"\\nyum install curl wget vim -y\\n```\\n\\n### 更新全系统的vim配置\\n```\\ncurl https://raw.githubusercontent.com/tonyc726/vim-for-server/master/vimrc > /etc/vimrc  \\n```\\n\\n## MySQL安装设置\\n由于CentOS7已经不带Mysql数据库了（默认的数据库是MariaDB，Mysql的一个分支），所以需要先安裝MySQL Repository（具体的版本号，可以参考 https://dev.mysql.com/downloads/repo/yum/）:\\n\\n### 安裝 MySQL Repository\\n```\\nrpm -Uvh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\\n```\\n### 安装MySQL数据库的服务器社区稳定版\\n```\\nyum install mysql-community-server -y\\n```\\n### 启动MySQL服务\\n```\\nsystemctl start mysqld.service\\n```\\n### 设置随系统自启动\\n```\\nsystemctl enable mysqld.service  \\n```\\n### 初始化设置\\n```\\nmysql_secure_installation\\n```\\n由于MySQL5.7默认会初始化Root用户的密码，所以在执行之前需要获取这个初始密码：\\n（本次设置中并没有执行如下操作，应为默认安装后第一次运行时不需密码，在初始化过程中会提示设置密码）\\n```\\ngrep \\\"password\\\" /var/log/mysqld.log  \\n```\\n\\n\\n### 创建Ghost需要的用户及数据库：\\n\\n运行以后输入刚才拿到的密码\\n```\\nmysql -uroot -p \\n```\\n添加新数据库blog，后面Ghost会用到\\n```\\nCREATE DATABASE blog;\\n```\\n添加新用户ghost（password替换为你需要的密码）\\n```\\nCREATE USER ghost IDENTIFIED BY 'password';\\n```\\n授予ghost用户在blog数据库上的所有权限\\n（password就是你刚才创建ghost账户时设置的密码）\\n```\\nGRANT ALL PRIVILEGES ON blog.* TO 'ghost'@'localhost' IDENTIFIED BY 'password';\\n```\\n刷新权限\\n（当执行过GRANT，CREATE USER，REVOKE命令之后，必须要执行刷新权限才能生效）\\n```\\nFLUSH PRIVILEGES;\\n```\\nCtrl+D 退出\\n\\n好了，以上就是MySQL部分\\n\\n## NodeJS安装设置\\n\\n推荐使用以下方式安装NodeJS\\n本系统使用V6稳定版，如需其它版本，你可以自行调整\\n```\\ncurl -sL https://rpm.nodesource.com/setup_6.x | sudo -E bash -  \\n```\\n### 安装NodeJS及其依赖包\\n```\\nyum install gcc-c++ make nodejs -y\\n```\\nNodeJS安装以后，默认已经自带的NPM\\n不过[**npm**](https://github.com/nodejs-tw/nodejs-wiki-book/blob/master/zh-tw/node_npm.rst)之前一直被吐槽，建议***升级最新版或者用yarn代替***\\n### 升级npm至最新版本(^v5.0.4)\\n```\\nnpm install npm@latest -g\\n```\\n### 安装yarn代替（推荐）\\n```\\ncurl --silent --location https://rpm.nodesource.com/setup_6.x | bash -  \\nyum install yarn -y\\n```\\n使用时发现无法查找到yarn安装包，查找后采用下面方法安装：\\n```\\nwget https://dl.yarnpkg.com/rpm/yarn.repo -O /etc/yum.repos.d/yarn.repo\\nyum install yarn\\n```\\n### 测试一下\\n```\\nnode -v\\n```\\n\\n> v6.11.0\\n```\\nnpm -v\\n```\\n> v5.1.0\\n```\\nyarn -v\\n```\\n> v0.27.5\\n\\n这里有个坑，如果直接使用yum install nodejs -y也是可以安装NodeJS的，不过nodesource维护的更加好，而且可以升级npm。\\n\\n如果你已经看到了最后输出的信息，那么久代表NodeJS已经就绪了。\\n## Nginx安装配置\\n\\n### 直接安装即可\\n```\\nyum install nginx -y\\n```\\n### 立即启动\\n```\\nsystemctl start nginx\\n```\\n### 设置开机自启动\\n```\\nsystemctl enable nginx  \\n```\\n\\n现在，打开你的浏览器，输入你的公网IP，不出意外，你就已经可以看到一个Nginx的欢迎页面了。\\n\\n不过，出于后期的扩展或者安全性考虑，我们需要为系统创建一个名为www的用户，专门用于管理网站.\\n\\n### 反向代理80端口\\n\\n众所周知，网站基本都以 80 端口作为默认端口（除非你不想让别人访问你的网站），也就是说：访问域名或服务器 IP 地址，实际上是在访问该服务器的 80 端口。而 Ghost 博客默认运行在 2368 端口上。\\n\\n为了输入域名或服务器 IP 地址就可以访问到你的 Ghost 博客，需要将访问 80 端口的请求，反向代理到 Ghost 的 2368 端口上。\\n\\n进入 Nginx 配置目录：\\n    ```\\n    cd /etc/nginx/conf.d\\n    ```\\n新建 Ghost 博客的 Nginx 配置文件：\\n```\\nvim ghost.conf\\n```\\n按 i 输入以下内容：\\n\\n> server {  \\n>     listen 80;\\n>     server_name loyalsoldier.me //修改为域名或服务器 IP 地址;\\n>     gzip on;\\n>     gzip_types text/plain application/xml text/css application/javascript application/json application/font-woff application/font-woff2 application/vnd.ms-fontobject application/x-font-ttf font/opentype application/pdf image/png image/bmp image/gif image/jpeg image/webp image/svg+xml;\\n>     gzip_proxied no-cache no-store private expired auth;\\n>     gzip_vary on;\\n>     gzip_min_length 1024;\\n>     location / {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>     }\\n>     location ~* .*\\\\.(jpg|jpeg|bmp|png|gif|ico|js|css|eot|woff|woff2|svg|ttf|otf)$ {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>         add_header Cache-Control max-age=2592000;\\n>         expires    30d;\\n>         etag       on;\\n>     }\\n> }\\n\\n按 ESC 键结束编辑，输入 :wq 保存文件并退出编辑\\n使用 nginx -t 测试 Nginx 配置文件是否语法正确：\\n\\n```\\nsudo nginx -t\\n```\\n若输出的结果有 ok、successful 等字样，表示配置正确\\n\\n如果正确的话，重启Nginx服务\\n```\\nsystemctl restart nginx.service  \\n```\\n\\n\\n## 添加新用户\\n创建一个名为www的用户组\\n```\\nadduser www\\n```\\n\\n### 设置密码(请记录下你的密码，以后需要用到)\\n```\\npasswd www\\n```\\n\\n### 分配Root权限 - 让我们新创建的www用户拥有Root用户的权限\\n```\\ngpasswd -a www wheel\\n```\\n### 将nginx用户添加入www的用户组，方便后期的权限控制\\n```\\nusermod -a -G nginx,www nginx  \\n```\\n\\n## 安装ghost\\n以上就是Ghost需要用到的基础系统了，下面就来安装Ghost，新开一个Terminal窗口，用**www**账户登录：\\n```\\nssh www@xxx.xxx.xxx.xxx  \\n```\\n然后下载Ghost最新的代码。\\n\\n### 下载Ghost最新的稳定版\\n```\\ncurl -L https://ghost.org/zip/ghost-latest.zip -o ghost.zip\\n```\\n### 解压\\n```\\nunzip -uo ghost.zip -d ghost\\n```\\n### 进入Ghost的目录并安装生产环境的依赖\\n```\\ncd ghost && npm install --production\\n```\\nnpm install --production这个命令可能需要执行多次，也是由于国内网络的原因，导致下载速度很慢，每次都下载不完全，需要多次执行，直到成功安装完成。\\n### 修改Ghost的config，修改数据库配置\\n```\\nvim config.js  \\n```\\n完整的config.js配置如下：\\n\\n> var path = require('path'),  \\n>     config;\\n> \\n> config = {  \\n>     production: {\\n>         url: 'https://www.xxxx.xxx',（换成服务器ip或者申请的域名）\\n>         mail: {},\\n>         database: {\\n>             client: 'mysql',（前面安装的mysql数据库，这里一定要对应）\\n>             connection: {\\n>                 host     : '127.0.0.1',\\n>                 user     : 'ghost', //用户名\\n>                 password : 'password', //ghost的密码，之前设置的\\n>                 database : 'blog', //数据库名\\n>                 charset  : 'utf8'\\n>             },\\n>             debug: false\\n>         },\\n>         server: {\\n>             host: '127.0.0.1',\\n>             port: '2368'\\n>         }\\n>     }\\n> };\\n> \\n> module.exports = config;  \\n\\n除了ghost安装根目录下的这个配置文件，还要检查一下/ghost/core/server/config下面的相应的配置文件，将相应的项更改正确，端口由于使用反向代理，因此不要更改，主要看一下url和database下面相应的设置。\\n\\n### 安装knex-migrator\\n实际上这个时候用生产模式运行ghost会报错，提示没有安装knex-migrator。\\n安装之前需要先编辑ghost安装文件夹下的***MigrtorConfig.js***文件。\\n\\n\\n使用vim编写MigrtorConfig.js文件：\\n\\n```\\nvim MigrtorConfig.js\\n```\\n\\n配置文件格式参考[**这里**](https://github.com/TryGhost/knex-migrator)：\\n\\n> module.exports = {\\n>     database: {\\n>         client: 'mysql',\\n>         connection: {\\n>             host: '127.0.0.1',\\n>             user: 'ghost',（之前mysql设置时建立的用户名）\\n>             password: 'password',（改成mysql的ghost用户密码）\\n>             charset: 'utf8',\\n>             name: 'blog'（之前mysql设置时建立的数据库）\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version',\\n>  /**\\n>     subfolder: 'upgrades'  [default: versions]\\n>     （这一部分在执行时总出问题，就注释掉了）\\n>  */\\n> }\\n\\n（下面应该是数据库使用sqlite3时的设置，由于本方案使用的mysql，所以可以不用写进去）\\n> module.exports = {\\n>     database: {\\n>         client: 'sqlite3',\\n>         connection: {\\n>             filename: 'path/to/your.db'\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version'\\n> }\\n> \\n\\n使用下面指令安装：\\n```\\nnpm install -g knex-migrator\\n```\\n\\n由于国内网络的原因，这个命令也可能需要执行多次才能安装完，中间会提示校验错误，这个应该是下载没有完成，而网络链接断开了的原因，再执行一次就行，直到最后完成安装。\\n\\n\\n运行一下：\\n```\\nnpm start --production\\n```\\n如果看到下面的提示，证明你已经完成80%了：\\n\\n\\n> Ghost is running in production...  \\n> Your blog is now available on xx.xx.xx.xx  \\n> Ctrl+C to shut down  \\n\\n### 问题及解决方案\\n\\n#### 权限问题\\n在执行npm start --production的时候，遇到npm权限的问题，提示没有node_modules文件夹的写权限，这个时候使用sudo命令进行安装时又提示别的错误，最终采用\\nnpmjs.com网站中的[解决方法2](https://docs.npmjs.com/getting-started/fixing-npm-permissions)。\\n首先检查npm的路径：\\n```\\nnpm config get prefix\\n```\\n发现是/usr\\n然后改变npm的默认路径：\\n1.为全局安装路径建立文件夹：（操作均在www用户下完成）\\n```\\nmkdir ~/.npm-global\\n```\\n2.设置默认路径：\\n```\\nnpm config set prefix '~/.npm-global'\\n```\\n3.加入用户PATH：\\n打开用户家目录下面的profile文件，这里是.bash_profile，加入下面的语句：\\n```\\nexport PATH=~/.npm-global/bin:$PATH\\n```\\n4.更新profile文件\\n```\\nsource ~/.bash_profile\\n```\\n**检验**：全局下载文件包，**不要用sudo**，也可以省去检测\\n``` \\nnpm install -g jshint\\n```\\n也可以使用下面更改环境变量的方式代替2-4步：（如果不想更改profile文件的话）\\n```\\nNPM_CONFIG_PREFIX=~/.npm-global\\n```\\n#### 语法错误问题\\n> Syntax error: Unexpected token\\n\\n出现上面的语句就要检查一下相应的配置文件的语法是否有错误。\\n## 全局安装PM2\\n目前你是开着远程连接到你的服务器，一旦你把窗口关闭了，那么你刚才起的npm start --production可就悲剧了，如何避免呢，这时候我们就需要一个能帮我们在后台稳定运行node服务的工具了，目前比较火热的要数PM2了：\\n\\n```\\nyarn global add pm2 --prefix /usr/local\\n```\\n### 用PM2来启动Ghost的node服务\\n先切到ghost的目录，然后再运行\\n```\\nNODE_ENV=production pm2 start index.js --name \\\"blog\\\"\\n```\\n### 检查运行结果\\n```\\npm2 show blog  \\n```\\n\\n# 配置ghost\\n本次没有做太多自定义配置，具体可以参考[**这里**](https://www.binarization.com/archive/2016/configuring-ghost/)。\\n\\n\\n# 参考资料：\\n[《基于阿里云ECS的Centos7搭建Ghost》](https://www.itony.net/aliyun-centos7-ghost/)\\n[《NPM 套件管理工具》](https://github.com/nodejs-tw/nodejs-wiki-book/blob/master/zh-tw/node_npm.rst)\\n[《Ghost 1.0+ 安装（非ghost-cli方式）》](https://www.ihx.me/ghost1-6insallnocli/)\\n[《knex-migrator-Github》](https://github.com/TryGhost/knex-migrator)\\n[《在阿里云 CentOS 7 系统上部署 Ghost 博客（已过时）》](https://loyalsoldier.me/deploy-ghost-on-centos-7/)\\n[《如何在CentOS上安装Ghost？》](https://www.binarization.com/archive/2016/installing-ghost-centos/)\\n[《ghost——Using Ghost as an NPM module》](https://docs.ghost.org/v1/docs/using-ghost-as-an-npm-module)\\n[<ghost——Install & Setup (production)》](https://docs.ghost.org/v1/docs/install)\\n[《CentOS Ghost安装教程（PM2+Nginx）》](https://codesky.me/archives/centos-ghost-install-introduce.wind)\\n\"}]],\"sections\":[[10,0]]}","page":false,"plaintext":"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\n什么是ghost？\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\n但是这并不影响我们搭建ghost服务器。吼吼吼~\n\n搭建准备\n在阿里云 [https://www.aliyun.com/]上购买了一年的ECS服务器，配置如下:\nCPU 1核；\n内存 2G；\n带宽 1Mbps；\n硬盘 40G。\n系统 CentOS 7.3 64位\n\n云服务器配置\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\n\n云服务器ECS——网络和安全——安全组——配置规则\n\n\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\n这里的设置主要是参考了阿里云的官方帮助文档 [https://help.aliyun.com/knowledge_detail/34403.html]。","published_at":"2017-09-28T13:41:32.000Z","slug":"shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost","status":"published","title":"搭建Ghost服务器","updated_at":"2017-09-29T02:26:52.000Z","updated_by":"1","tags":{"0":{"id":"59ccb425a744810195a3dc01","name":"技术","slug":"ji-zhu","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T08:34:45.000Z","updated_at":"2017-09-28T08:34:45.000Z","created_by":"1","updated_by":"1"},"1":{"id":"59cd12bfa744810195a3dc06","name":"博客","slug":"bo-ke","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T15:18:23.000Z","updated_at":"2017-09-28T15:18:23.000Z","created_by":"1","updated_by":"1"}},"author_id":"1"}}},"query":{"include":"tags"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"http://47.95.197.107","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/*","content-type":"application/json; charset=utf-8","etag":"W/\"5098-t2meDRYC77vUlFSDDhtADyBGIaI\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"93ms"},"msg":"","time":"2017-09-29T02:29:33.907Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"09285870-a4be-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/posts/59ccf296a744810195a3dc03/?include=tags","method":"PUT","originalUrl":"/ghost/api/v0.1/posts/59ccf296a744810195a3dc03/?include=tags","params":{"id":"59ccf296a744810195a3dc03"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","content-length":"20085","origin":"http://47.95.197.107","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"1.9","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{"posts":{"0":{"id":"59ccf296a744810195a3dc03","created_at":"2017-09-28T13:01:10.000Z","created_by":"1","featured":false,"feature_image":"/content/images/2017/09/ghost.png","codeinjection_foot":"","codeinjection_head":"","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\\n什么是ghost？\\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\\n但是这并不影响我们搭建ghost服务器。吼吼吼~\\n\\n# 搭建准备\\n在[**阿里云**](https://www.aliyun.com/)上购买了一年的ECS服务器，配置如下:\\nCPU 1核；\\n内存 2G；\\n带宽 1Mbps；\\n硬盘 40G。\\n系统 CentOS 7.3 64位\\n\\n# 云服务器配置\\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\\n> 云服务器ECS——网络和安全——安全组——配置规则\\n![--------](/content/images/2017/09/--------.jpg)\\n![-------](/content/images/2017/09/-------.jpg)\\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\\n这里的设置主要是参考了[**阿里云的官方帮助文档**](https://help.aliyun.com/knowledge_detail/34403.html)。\\n# 安装启动ghost\\n\\n## 需要用到的东西\\n\\n* 一个完成A记录解析设置的域名（建议做好ICP备案）；（可选）\\n* 使用 [**MySQL**](https://www.mysql.com/) 做数据库服务；\\n* 使用 [**Nginx**](https://nginx.org/) 做网页服务器（Ghost的代理服务）；\\n* 使用 [**NodeJS**](https://nodejs.org/) 做后端服务；\\n* [**Ghost**](https://ghost.org/)一个开源的博客系统；\\n\\n## 基础设置\\n\\n### 查看一下系统信息：\\n\\n```\\ncat /etc/redhat-release  \\n```\\n> CentOS Linux release 7.4.1708 (Core)\\n\\n\\n### 更新一下系统，安装一些基础工具：\\n\\n阿里云的centos已经优化了yum的源，你也可以自行修改\\n```\\nyum update -y && yum upgrage -y && yum clean all\\n```\\n\\ncurl, wget都是方便后边的下载\\nvim作为一个老牌Linux文本编辑工具，你值得拥有\\n还要安装开发工具包\\n```\\nyum groupinstall -y \\\"Development Tools\\\"\\nyum install curl wget vim -y\\n```\\n\\n### 更新全系统的vim配置\\n```\\ncurl https://raw.githubusercontent.com/tonyc726/vim-for-server/master/vimrc > /etc/vimrc  \\n```\\n\\n## MySQL安装设置\\n由于CentOS7已经不带Mysql数据库了（默认的数据库是MariaDB，Mysql的一个分支），所以需要先安裝MySQL Repository（具体的版本号，可以参考 https://dev.mysql.com/downloads/repo/yum/）:\\n\\n### 安裝 MySQL Repository\\n```\\nrpm -Uvh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\\n```\\n### 安装MySQL数据库的服务器社区稳定版\\n```\\nyum install mysql-community-server -y\\n```\\n### 启动MySQL服务\\n```\\nsystemctl start mysqld.service\\n```\\n### 设置随系统自启动\\n```\\nsystemctl enable mysqld.service  \\n```\\n### 初始化设置\\n```\\nmysql_secure_installation\\n```\\n由于MySQL5.7默认会初始化Root用户的密码，所以在执行之前需要获取这个初始密码：\\n（本次设置中并没有执行如下操作，应为默认安装后第一次运行时不需密码，在初始化过程中会提示设置密码）\\n```\\ngrep \\\"password\\\" /var/log/mysqld.log  \\n```\\n\\n\\n### 创建Ghost需要的用户及数据库：\\n\\n运行以后输入刚才拿到的密码\\n```\\nmysql -uroot -p \\n```\\n添加新数据库blog，后面Ghost会用到\\n```\\nCREATE DATABASE blog;\\n```\\n添加新用户ghost（password替换为你需要的密码）\\n```\\nCREATE USER ghost IDENTIFIED BY 'password';\\n```\\n授予ghost用户在blog数据库上的所有权限\\n（password就是你刚才创建ghost账户时设置的密码）\\n```\\nGRANT ALL PRIVILEGES ON blog.* TO 'ghost'@'localhost' IDENTIFIED BY 'password';\\n```\\n刷新权限\\n（当执行过GRANT，CREATE USER，REVOKE命令之后，必须要执行刷新权限才能生效）\\n```\\nFLUSH PRIVILEGES;\\n```\\nCtrl+D 退出\\n\\n好了，以上就是MySQL部分\\n\\n## NodeJS安装设置\\n\\n推荐使用以下方式安装NodeJS\\n本系统使用V6稳定版，如需其它版本，你可以自行调整\\n```\\ncurl -sL https://rpm.nodesource.com/setup_6.x | sudo -E bash -  \\n```\\n### 安装NodeJS及其依赖包\\n```\\nyum install gcc-c++ make nodejs -y\\n```\\nNodeJS安装以后，默认已经自带的NPM\\n不过[**npm**](https://github.com/nodejs-tw/nodejs-wiki-book/blob/master/zh-tw/node_npm.rst)之前一直被吐槽，建议***升级最新版或者用yarn代替***\\n### 升级npm至最新版本(^v5.0.4)\\n```\\nnpm install npm@latest -g\\n```\\n### 安装yarn代替（推荐）\\n```\\ncurl --silent --location https://rpm.nodesource.com/setup_6.x | bash -  \\nyum install yarn -y\\n```\\n使用时发现无法查找到yarn安装包，查找后采用下面方法安装：\\n```\\nwget https://dl.yarnpkg.com/rpm/yarn.repo -O /etc/yum.repos.d/yarn.repo\\nyum install yarn\\n```\\n### 测试一下\\n```\\nnode -v\\n```\\n\\n> v6.11.0\\n```\\nnpm -v\\n```\\n> v5.1.0\\n```\\nyarn -v\\n```\\n> v0.27.5\\n\\n这里有个坑，如果直接使用yum install nodejs -y也是可以安装NodeJS的，不过nodesource维护的更加好，而且可以升级npm。\\n\\n如果你已经看到了最后输出的信息，那么久代表NodeJS已经就绪了。\\n## Nginx安装配置\\n\\n### 直接安装即可\\n```\\nyum install nginx -y\\n```\\n### 立即启动\\n```\\nsystemctl start nginx\\n```\\n### 设置开机自启动\\n```\\nsystemctl enable nginx  \\n```\\n\\n现在，打开你的浏览器，输入你的公网IP，不出意外，你就已经可以看到一个Nginx的欢迎页面了。\\n\\n不过，出于后期的扩展或者安全性考虑，我们需要为系统创建一个名为www的用户，专门用于管理网站.\\n\\n### 反向代理80端口\\n\\n众所周知，网站基本都以 80 端口作为默认端口（除非你不想让别人访问你的网站），也就是说：访问域名或服务器 IP 地址，实际上是在访问该服务器的 80 端口。而 Ghost 博客默认运行在 2368 端口上。\\n\\n为了输入域名或服务器 IP 地址就可以访问到你的 Ghost 博客，需要将访问 80 端口的请求，反向代理到 Ghost 的 2368 端口上。\\n\\n进入 Nginx 配置目录：\\n    ```\\n    cd /etc/nginx/conf.d\\n    ```\\n新建 Ghost 博客的 Nginx 配置文件：\\n```\\nvim ghost.conf\\n```\\n按 i 输入以下内容：\\n\\n> server {  \\n>     listen 80;\\n>     server_name loyalsoldier.me //修改为域名或服务器 IP 地址;\\n>     gzip on;\\n>     gzip_types text/plain application/xml text/css application/javascript application/json application/font-woff application/font-woff2 application/vnd.ms-fontobject application/x-font-ttf font/opentype application/pdf image/png image/bmp image/gif image/jpeg image/webp image/svg+xml;\\n>     gzip_proxied no-cache no-store private expired auth;\\n>     gzip_vary on;\\n>     gzip_min_length 1024;\\n>     location / {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>     }\\n>     location ~* .*\\\\.(jpg|jpeg|bmp|png|gif|ico|js|css|eot|woff|woff2|svg|ttf|otf)$ {\\n>         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\\n>         proxy_set_header   X-Real-IP $remote_addr;\\n>         proxy_set_header   Host      $http_host;\\n>         proxy_set_header   X-Forwarded-Proto $scheme;\\n>         proxy_pass         http://127.0.0.1:2368;\\n>         add_header Cache-Control max-age=2592000;\\n>         expires    30d;\\n>         etag       on;\\n>     }\\n> }\\n\\n按 ESC 键结束编辑，输入 :wq 保存文件并退出编辑\\n使用 nginx -t 测试 Nginx 配置文件是否语法正确：\\n\\n```\\nsudo nginx -t\\n```\\n若输出的结果有 ok、successful 等字样，表示配置正确\\n\\n如果正确的话，重启Nginx服务\\n```\\nsystemctl restart nginx.service  \\n```\\n\\n\\n## 添加新用户\\n创建一个名为www的用户组\\n```\\nadduser www\\n```\\n\\n### 设置密码(请记录下你的密码，以后需要用到)\\n```\\npasswd www\\n```\\n\\n### 分配Root权限 - 让我们新创建的www用户拥有Root用户的权限\\n```\\ngpasswd -a www wheel\\n```\\n### 将nginx用户添加入www的用户组，方便后期的权限控制\\n```\\nusermod -a -G nginx,www nginx  \\n```\\n\\n## 安装ghost\\n以上就是Ghost需要用到的基础系统了，下面就来安装Ghost，新开一个Terminal窗口，用**www**账户登录：\\n```\\nssh www@xxx.xxx.xxx.xxx  \\n```\\n然后下载Ghost最新的代码。\\n\\n### 下载Ghost最新的稳定版\\n```\\ncurl -L https://ghost.org/zip/ghost-latest.zip -o ghost.zip\\n```\\n### 解压\\n```\\nunzip -uo ghost.zip -d ghost\\n```\\n### 进入Ghost的目录并安装生产环境的依赖\\n```\\ncd ghost && npm install --production\\n```\\nnpm install --production这个命令可能需要执行多次，也是由于国内网络的原因，导致下载速度很慢，每次都下载不完全，需要多次执行，直到成功安装完成。\\n### 修改Ghost的config，修改数据库配置\\n```\\nvim config.js  \\n```\\n完整的config.js配置如下：\\n\\n> var path = require('path'),  \\n>     config;\\n> \\n> config = {  \\n>     production: {\\n>         url: 'https://www.xxxx.xxx',（换成服务器ip或者申请的域名）\\n>         mail: {},\\n>         database: {\\n>             client: 'mysql',（前面安装的mysql数据库，这里一定要对应）\\n>             connection: {\\n>                 host     : '127.0.0.1',\\n>                 user     : 'ghost', //用户名\\n>                 password : 'password', //ghost的密码，之前设置的\\n>                 database : 'blog', //数据库名\\n>                 charset  : 'utf8'\\n>             },\\n>             debug: false\\n>         },\\n>         server: {\\n>             host: '127.0.0.1',\\n>             port: '2368'\\n>         }\\n>     }\\n> };\\n> \\n> module.exports = config;  \\n\\n除了ghost安装根目录下的这个配置文件，还要检查一下/ghost/core/server/config下面的相应的配置文件，将相应的项更改正确，端口由于使用反向代理，因此不要更改，主要看一下url和database下面相应的设置。\\n\\n### 安装knex-migrator\\n实际上这个时候用生产模式运行ghost会报错，提示没有安装knex-migrator。\\n安装之前需要先编辑ghost安装文件夹下的***MigrtorConfig.js***文件。\\n\\n\\n使用vim编写MigrtorConfig.js文件：\\n\\n```\\nvim MigrtorConfig.js\\n```\\n\\n配置文件格式参考[**这里**](https://github.com/TryGhost/knex-migrator)：\\n\\n> module.exports = {\\n>     database: {\\n>         client: 'mysql',\\n>         connection: {\\n>             host: '127.0.0.1',\\n>             user: 'ghost',（之前mysql设置时建立的用户名）\\n>             password: 'password',（改成mysql的ghost用户密码）\\n>             charset: 'utf8',\\n>             name: 'blog'（之前mysql设置时建立的数据库）\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version',\\n>  /**\\n>     subfolder: 'upgrades'  [default: versions]\\n>     （这一部分在执行时总出问题，就注释掉了）\\n>  */\\n> }\\n\\n（下面应该是数据库使用sqlite3时的设置，由于本方案使用的mysql，所以可以不用写进去）\\n> module.exports = {\\n>     database: {\\n>         client: 'sqlite3',\\n>         connection: {\\n>             filename: 'path/to/your.db'\\n>         }\\n>     },\\n>     migrationPath: process.cwd() + '/core/server/data/migrations',\\n>     currentVersion: 'your-current-database-version'\\n> }\\n> \\n\\n使用下面指令安装：\\n```\\nnpm install -g knex-migrator\\n```\\n\\n由于国内网络的原因，这个命令也可能需要执行多次才能安装完，中间会提示校验错误，这个应该是下载没有完成，而网络链接断开了的原因，再执行一次就行，直到最后完成安装。\\n\\n\\n运行一下：\\n```\\nnpm start --production\\n```\\n如果看到下面的提示，证明你已经完成80%了：\\n\\n\\n> Ghost is running in production...  \\n> Your blog is now available on xx.xx.xx.xx  \\n> Ctrl+C to shut down  \\n\\n### 问题及解决方案\\n\\n#### 权限问题\\n在执行npm start --production的时候，遇到npm权限的问题，提示没有node_modules文件夹的写权限，这个时候使用sudo命令进行安装时又提示别的错误，最终采用\\nnpmjs.com网站中的[解决方法2](https://docs.npmjs.com/getting-started/fixing-npm-permissions)。\\n首先检查npm的路径：\\n```\\nnpm config get prefix\\n```\\n发现是/usr\\n然后改变npm的默认路径：\\n1.为全局安装路径建立文件夹：（操作均在www用户下完成）\\n```\\nmkdir ~/.npm-global\\n```\\n2.设置默认路径：\\n```\\nnpm config set prefix '~/.npm-global'\\n```\\n3.加入用户PATH：\\n打开用户家目录下面的profile文件，这里是.bash_profile，加入下面的语句：\\n```\\nexport PATH=~/.npm-global/bin:$PATH\\n```\\n4.更新profile文件\\n```\\nsource ~/.bash_profile\\n```\\n**检验**：全局下载文件包，**不要用sudo**，也可以省去检测\\n``` \\nnpm install -g jshint\\n```\\n也可以使用下面更改环境变量的方式代替2-4步：（如果不想更改profile文件的话）\\n```\\nNPM_CONFIG_PREFIX=~/.npm-global\\n```\\n#### 语法错误问题\\n> Syntax error: Unexpected token\\n\\n出现上面的语句就要检查一下相应的配置文件的语法是否有错误。\\n## 全局安装PM2\\n目前你是开着远程连接到你的服务器，一旦你把窗口关闭了，那么你刚才起的npm start --production可就悲剧了，如何避免呢，这时候我们就需要一个能帮我们在后台稳定运行node服务的工具了，目前比较火热的要数PM2了：\\n\\n```\\nyarn global add pm2 --prefix /usr/local\\n```\\n### 用PM2来启动Ghost的node服务\\n先切到ghost的目录，然后再运行\\n```\\nNODE_ENV=production pm2 start index.js --name \\\"blog\\\"\\n```\\n### 检查运行结果\\n```\\npm2 show blog  \\n```\\n\\n# 配置ghost\\n本次没有做太多自定义配置，具体可以参考[**这里**](https://www.binarization.com/archive/2016/configuring-ghost/)。\\n\\n\\n# 参考资料：\\n[《基于阿里云ECS的Centos7搭建Ghost》](https://www.itony.net/aliyun-centos7-ghost/)\\n[《NPM 套件管理工具》](https://github.com/nodejs-tw/nodejs-wiki-book/blob/master/zh-tw/node_npm.rst)\\n[《Ghost 1.0+ 安装（非ghost-cli方式）》](https://www.ihx.me/ghost1-6insallnocli/)\\n[《knex-migrator-Github》](https://github.com/TryGhost/knex-migrator)\\n[《在阿里云 CentOS 7 系统上部署 Ghost 博客（已过时）》](https://loyalsoldier.me/deploy-ghost-on-centos-7/)\\n[《如何在CentOS上安装Ghost？》](https://www.binarization.com/archive/2016/installing-ghost-centos/)\\n[《ghost——Using Ghost as an NPM module》](https://docs.ghost.org/v1/docs/using-ghost-as-an-npm-module)\\n[<ghost——Install & Setup (production)》](https://docs.ghost.org/v1/docs/install)\\n[《CentOS Ghost安装教程（PM2+Nginx）》](https://codesky.me/archives/centos-ghost-install-introduce.wind)\\n\"}]],\"sections\":[[10,0]]}","page":false,"plaintext":"很早就想找一个可以很舒心的记录点自己东西的地方，各大网站的博客也都尝试过，用起来感觉还是停留上世纪一样的体验阶段，原来试过一段时间的蚂蚁笔记（Leanote），虽然挺好，但是也要收费了，而且免费版的使用起来也不是很方便，关键是界面不是那么漂亮，使用客户端写东西，感觉也不是那么清爽。\n认识ghost是在尝试搭建shadowsocks服务器的时候偶然看到的，搜索了一下，感觉博客形式比较好看，关键还可以自己打架博客服务器，因此想要在自己购买的云服务器上搭建shadowsocks服务的同时搭建一个自己的博客空间，由于自己并不是计算机专业学生，因此鼓捣了大概一个周时间，终于能把ghost跑起来。\n什么是ghost？\nGhost是一个基于Node.js的博客程序，那么问题来了，什么又是Node.js呢？然而我并不清楚……\n但是这并不影响我们搭建ghost服务器。吼吼吼~\n\n搭建准备\n在阿里云 [https://www.aliyun.com/]上购买了一年的ECS服务器，配置如下:\nCPU 1核；\n内存 2G；\n带宽 1Mbps；\n硬盘 40G。\n系统 CentOS 7.3 64位\n\n云服务器配置\n搭建好了服务器之后发现不能像vultr的云服务器一样直接使用Xshell连接上，最先想到的时候防火墙没有开放22端口，使用阿里云网站上提供的管理终端（console）连接上服务器之后，暂时关闭了firewalld服务，发现仍然连接不上。\n之后尝试在本地windows系统的cmd中ping云服务器的ip，发现也ping不通，经过查找之后，发现是阿里云管理中有相应的安全管控，需要以下位置设置开通相应的端口：\n\n云服务器ECS——网络和安全——安全组——配置规则\n\n\n这样就可以使用Xshell等ssh链接工具连接到云服务器了。\n这里的设置主要是参考了阿里云的官方帮助文档 [https://help.aliyun.com/knowledge_detail/34403.html]。","published_at":"2017-09-28T13:41:32.000Z","slug":"shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost","status":"published","title":"搭建Ghost服务器","updated_at":"2017-09-29T02:29:33.000Z","updated_by":"1","tags":{"0":{"id":"59ccb425a744810195a3dc01","name":"技术","slug":"ji-zhu","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T08:34:45.000Z","updated_at":"2017-09-28T08:34:45.000Z","created_by":"1","updated_by":"1"},"1":{"id":"59cd12bfa744810195a3dc06","name":"博客","slug":"bo-ke","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T15:18:23.000Z","updated_at":"2017-09-28T15:18:23.000Z","created_by":"1","updated_by":"1"}},"author_id":"1"}}},"query":{"include":"tags"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"http://47.95.197.107","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/*","content-type":"application/json; charset=utf-8","etag":"W/\"5098-dusltcm+3iv8hJ5iBHgHFUXWzK8\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"46ms"},"msg":"","time":"2017-09-29T02:29:36.296Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"2c5997a0-a4be-11e7-ad29-7b3837c864ae","userId":null},"url":"/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","method":"GET","originalUrl":"/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","params":{"0":"/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"text/html, application/xhtml+xml, image/jxr, */*","referer":"http://47.95.197.107/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-none-match":"W/\"883f-DJpk9hqb8/az7YnnqCtw6+LlBhc\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"8f2b-f7uBGbsRP6yE6MQTdQVeDDeHH2s\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"86ms"},"msg":"","time":"2017-09-29T02:30:35.377Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"2c6900f0-a4be-11e7-ad29-7b3837c864ae","userId":null},"url":"/assets/built/screen.css?v=b5301c75d8","method":"GET","originalUrl":"/assets/built/screen.css?v=b5301c75d8","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"text/css, */*","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 07:32:48 GMT","if-none-match":"W/\"759e-15ec766fb30\""},"body":{},"query":{"v":"b5301c75d8"}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 07:32:48 GMT","etag":"W/\"759e-15ec766fb30\""},"statusCode":304,"responseTime":"3ms"},"msg":"","time":"2017-09-29T02:30:35.395Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"2c6b4ae0-a4be-11e7-ad29-7b3837c864ae","userId":null},"url":"/public/ghost-sdk.min.js?v=b5301c75d8","method":"GET","originalUrl":"/public/ghost-sdk.min.js?v=b5301c75d8","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"application/javascript, */*;q=0.8","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-none-match":"\"30c3227170bdaa36ca322470e2b77a33\""},"body":{},"query":{"v":"b5301c75d8"}},"res":{"_headers":{"x-powered-by":"Express","content-type":"application/javascript","content-length":765,"etag":"\"30c3227170bdaa36ca322470e2b77a33\"","cache-control":"public, max-age=3600","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"1ms"},"msg":"","time":"2017-09-29T02:30:35.408Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"2c6de2f0-a4be-11e7-ad29-7b3837c864ae","userId":null},"url":"/2017/09/--------.jpg","method":"GET","originalUrl":"/content/images/2017/09/--------.jpg","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"image/png, image/svg+xml, image/jxr, image/*;q=0.8, */*;q=0.5","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 13:33:23 GMT","if-none-match":"W/\"e957-15ec8b11b2b\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 13:33:23 GMT","etag":"W/\"e957-15ec8b11b2b\""},"statusCode":304,"responseTime":"1ms"},"msg":"","time":"2017-09-29T02:30:35.425Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"2c6e3110-a4be-11e7-ad29-7b3837c864ae","userId":null},"url":"/2017/09/-------.jpg","method":"GET","originalUrl":"/content/images/2017/09/-------.jpg","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"image/png, image/svg+xml, image/jxr, image/*;q=0.8, */*;q=0.5","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 13:34:45 GMT","if-none-match":"W/\"d3bc-15ec8b2597a\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 13:34:45 GMT","etag":"W/\"d3bc-15ec8b2597a\""},"statusCode":304,"responseTime":"1ms"},"msg":"","time":"2017-09-29T02:30:35.427Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"2c7201a0-a4be-11e7-ad29-7b3837c864ae","userId":null},"url":"/2017/09/ghost.png","method":"GET","originalUrl":"/content/images/2017/09/ghost.png","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"image/png, image/svg+xml, image/jxr, image/*;q=0.8, */*;q=0.5","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 15:17:51 GMT","if-none-match":"W/\"37a86-15ec910bf89\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 15:17:51 GMT","etag":"W/\"37a86-15ec910bf89\""},"statusCode":304,"responseTime":"1ms"},"msg":"","time":"2017-09-29T02:30:35.452Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"2c724fc0-a4be-11e7-ad29-7b3837c864ae","userId":null},"url":"/2017/09/---.jpg","method":"GET","originalUrl":"/content/images/2017/09/---.jpg","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"image/png, image/svg+xml, image/jxr, image/*;q=0.8, */*;q=0.5","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 08:33:32 GMT","if-none-match":"W/\"545b-15ec79e95e4\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 08:33:32 GMT","etag":"W/\"545b-15ec79e95e4\""},"statusCode":304,"responseTime":"0ms"},"msg":"","time":"2017-09-29T02:30:35.453Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"2cbb1890-a4be-11e7-ad29-7b3837c864ae","userId":null},"url":"/assets/js/jquery.fitvids.js?v=b5301c75d8","method":"GET","originalUrl":"/assets/js/jquery.fitvids.js?v=b5301c75d8","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"application/javascript, */*;q=0.8","referer":"http://47.95.197.107/shi-yong-a-li-yun-fu-wu-qi-da-jian-ghost/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate","if-modified-since":"Thu, 28 Sep 2017 07:32:48 GMT","if-none-match":"W/\"d76-15ec766fb30\""},"body":{},"query":{"v":"b5301c75d8"}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 07:32:48 GMT","etag":"W/\"d76-15ec766fb30\""},"statusCode":304,"responseTime":"1ms"},"msg":"","time":"2017-09-29T02:30:35.931Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"33162400-a4be-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/posts/?limit=30&page=1&status=all&staticPages=all&formats=mobiledoc%2Cplaintext&include=tags","method":"GET","originalUrl":"/ghost/api/v0.1/posts/?limit=30&page=1&status=all&staticPages=all&formats=mobiledoc%2Cplaintext&include=tags","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","x-requested-with":"XMLHttpRequest","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","x-ghost-version":"1.9","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{},"query":{"limit":"30","page":"1","status":"all","staticPages":"all","formats":"mobiledoc,plaintext","include":"tags"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"9f73-mREcsFvDbc/z6nAbn0GI21tIHjI\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"25ms"},"msg":"","time":"2017-09-29T02:30:46.618Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"33337000-a4be-11e7-ad29-7b3837c864ae","userId":null},"url":"/","method":"GET","originalUrl":"/","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","accept":"*/*","accept-encoding":"gzip, deflate","accept-language":"zh-CN","if-none-match":"W/\"20b1-qt7RHaZA7PxPQZjB5hbMY4mYxZU\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","etag":"W/\"20b1-qt7RHaZA7PxPQZjB5hbMY4mYxZU\""},"statusCode":304,"responseTime":"24ms"},"msg":"","time":"2017-09-29T02:30:46.809Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"345d7110-a4be-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/posts/59ccb3a1a744810195a3dbfe/?status=all&staticPages=all&formats=mobiledoc%2Cplaintext&include=tags","method":"GET","originalUrl":"/ghost/api/v0.1/posts/59ccb3a1a744810195a3dbfe/?status=all&staticPages=all&formats=mobiledoc%2Cplaintext&include=tags","params":{"id":"59ccb3a1a744810195a3dbfe"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","x-requested-with":"XMLHttpRequest","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","x-ghost-version":"1.9","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{},"query":{"status":"all","staticPages":"all","formats":"mobiledoc,plaintext","include":"tags"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"4eda-EU7bMnAGvale15LVnLFlGvpAW8k\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"24ms"},"msg":"","time":"2017-09-29T02:30:48.762Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"3464c410-a4be-11e7-ad29-7b3837c864ae","userId":null},"url":"/","method":"GET","originalUrl":"/","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","accept":"*/*","accept-encoding":"gzip, deflate","accept-language":"zh-CN","if-none-match":"W/\"20b1-qt7RHaZA7PxPQZjB5hbMY4mYxZU\""},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","etag":"W/\"20b1-qt7RHaZA7PxPQZjB5hbMY4mYxZU\""},"statusCode":304,"responseTime":"28ms"},"msg":"","time":"2017-09-29T02:30:48.814Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"34686d90-a4be-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/users/?limit=all&include=roles","method":"GET","originalUrl":"/ghost/api/v0.1/users/?limit=all&include=roles","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","x-requested-with":"XMLHttpRequest","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","x-ghost-version":"1.9","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{},"query":{"limit":"all","include":"roles"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","content-length":"887","etag":"W/\"377-wZ7lPvDvUvNsqzBsAazt8RbWO9w\"","vary":"Accept-Encoding"},"statusCode":200,"responseTime":"33ms"},"msg":"","time":"2017-09-29T02:30:48.843Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"346a4250-a4be-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/tags/?limit=all","method":"GET","originalUrl":"/ghost/api/v0.1/tags/?limit=all","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","x-requested-with":"XMLHttpRequest","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","x-ghost-version":"1.9","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{},"query":{"limit":"all"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","content-type":"application/json; charset=utf-8","etag":"W/\"520-YgcdWaNwvap4C2937J2+86Q0fY8\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"28ms"},"msg":"","time":"2017-09-29T02:30:48.850Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"3ae754b0-a4be-11e7-ad29-7b3837c864ae","userId":null},"url":"/da-jian-shadowsocksfu-wu-qi/","method":"GET","originalUrl":"/da-jian-shadowsocksfu-wu-qi/","params":{"0":"/da-jian-shadowsocksfu-wu-qi/"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"text/html, application/xhtml+xml, image/jxr, */*","referer":"http://47.95.197.107/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"public, max-age=0","content-type":"text/html; charset=utf-8","etag":"W/\"689f-Nw3iGGkXcQcK7xcYa9dBxUTEwps\"","vary":"Accept-Encoding","content-encoding":"gzip"},"statusCode":200,"responseTime":"59ms"},"msg":"","time":"2017-09-29T02:30:59.767Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"3af27840-a4be-11e7-ad29-7b3837c864ae","userId":null},"url":"/2017/09/vultr.jpg","method":"GET","originalUrl":"/content/images/2017/09/vultr.jpg","params":{},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","accept":"image/png, image/svg+xml, image/jxr, image/*;q=0.8, */*;q=0.5","referer":"http://47.95.197.107/da-jian-shadowsocksfu-wu-qi/","accept-language":"zh-CN","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393","accept-encoding":"gzip, deflate"},"body":{},"query":{}},"res":{"_headers":{"x-powered-by":"Express","accept-ranges":"bytes","cache-control":"public, max-age=31536000","last-modified":"Thu, 28 Sep 2017 08:49:09 GMT","etag":"W/\"c7bc-15ec7ace335\"","content-type":"image/jpeg","content-length":51132},"statusCode":200,"responseTime":"3ms"},"msg":"","time":"2017-09-29T02:30:59.784Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"5007f610-a4be-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/posts/59ccb3a1a744810195a3dbfe/?include=tags","method":"PUT","originalUrl":"/ghost/api/v0.1/posts/59ccb3a1a744810195a3dbfe/?include=tags","params":{"id":"59ccb3a1a744810195a3dbfe"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","content-length":"19706","origin":"http://47.95.197.107","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"1.9","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{"posts":{"0":{"id":"59ccb3a1a744810195a3dbfe","created_at":"2017-09-28T08:32:33.000Z","created_by":"1","featured":false,"feature_image":"/content/images/2017/09/---.jpg","codeinjection_foot":"","codeinjection_head":"","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"总是使用买的shadowsocks服务器，价格较贵，且不甚稳定，因此决定自己搭建服务器，过程中遇到许多问题，为了以后维护的方便，在此将过程中遇到的问题与解决方法以及参考资料等进行简单的记录。\\n# 操作步骤\\n1.购买云服务器\\n2.连接云服务器\\n3.安装shadowsocks\\n4.优化shadowsocks性能\\n5.配置shadowsocks文件\\n6.启动并永久运行shadowsocks\\n7.配置windows和android客户端\\n# 分步介绍\\n## 购买服务器\\n推荐使用美国 VPS 提供商[**Vultr**](http://https://www.vultr.com/)。价格实惠，最低只需每个月 5 美元，支持 PayPal 支付（国内银行储蓄卡可充值）。\\n点击推广链接注册可以享受一定优惠：[**Vultr优惠**](http://https://www.vultr.com/?ref=7219583)\\n服务器配置推荐：内存 ≥512M，\\n             硬盘 20G，\\n             CPU 1核，\\n             流量 500G（单人用）。\\n服务器位置尽量选距离自己比较近的：美国西海岸的城市或者日本和新加坡等国家的机房。\\n![vultr](/content/images/2017/09/vultr.jpg)\\n## 连接云服务器\\n使用ssh方式连接购买并安装好的云服务器，使用的软件不限，Xshell、putty等等ssh连接工具均可。Linux系统下，一般会自带ssh工具，打开终端运行ssh root@xx.xx.xx.xx，然后输入密码即可，\\\"xx.xx.xx.xx\\\"部分换成云服务器的地址。\\n初始密码在登陆云服务器网站后寻找，首次登陆云服务器后，使用passwd指令更改用户密码。\\n## 安装shadowsocks\\nshadowsocks有几种不同版本，shadowsocks Python、shadowsocks libev、shadowsocks go还有shadowsocksR。\\n选择其中一个版本进行安装，安装方法参考[**xyzardQ的博客**]，写的比较全面。(https://xyzardq.github.io/2017/03/07/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%80%E9%94%AE%E6%90%AD%E5%BB%BAshadowsocks%E5%8F%8A%E4%BC%98%E5%8C%96/)。\\n第一次搭建，使用了python版本，但是运行过程中发现速度比较不稳定，因此放弃这一版本，然后按照[**秋水逸冰的博客**](https://teddysun.com/357.html)搭建了libev版本的shadowsocks。\\n之后由于考虑到实验室共用一个服务器，因此将同一个端口、用户名以及密码共享给了多台电脑，但是使用过程中服务器崩溃，即便是在设置多个端口和相应密码之后，仍然存在这个问题。\\n下面是配置多用户模式时，修改配置文件的参照：\\n```\\t\\n[root@localhost ~]# cat  /etc/shadowsocks.json\\n{\\n    \\\"server\\\":\\\"145.78.20.216\\\",\\n    \\\"port_password\\\":{\\n        \\\"9000\\\":\\\"MyPass1\\\",\\n        \\\"9001\\\":\\\"MyPass2\\\",\\n        \\\"9002\\\":\\\"MyPass3\\\"\\n    },\\n    \\\"local_address\\\":\\\"127.0.0.1\\\",\\n    \\\"local_port\\\":1080,\\n    \\\"timeout\\\":300,\\n    \\\"method\\\":\\\"rc4-md5\\\"\\n}\\n```\\n因此查阅资料后，得出结论是此版本只是个人版本，对于多个用户使用支持不好，因此放弃此版本。\\n最终本次搭建选择按照[**司开星的博客**](https://sikaixing.com/2016/03/06/ss_manyuser/)中介绍的方法进行多用户版本的搭建。\\n### 下载多用户版本manyuser\\nshadowsocks manyuser是一个shadowsocks多用户修改版。官方地址为：https://github.com/mengskysama/shadowsocks/tree/manyuser\\n\\n下载：\\n    ```\\n    git clone -b manyuser https://github.com/mengskysama/shadowsocks.git\\n    ```\\n会在当前目录下载manyuser。\\n解压出来为/shadowsocks/shadowsocks（cd shadowsocks/shadowsocks）\\n\\n### 安装使用Mysql\\nmanyuser使用Mysql存储数据。故需要先安装mysql，centos7中默认为mariaDB（myspl修改版）\\n\\n    yum install mariadb-server mariadb\\n\\n\\n* 启动及关闭：\\n    ```\\n    systemctl start mariadb\\n    systemctl enable mariadb\\n    ```\\n* 修改密码：\\n    ```\\n    /usr/bin/mysql_secure_installation\\n    ```\\n* 登录：\\n    ```\\n    mysql -u root -p\\n    ```\\n* 根据manyuser官方指南需要创建一个shadowsocks数据库：\\n    ```\\n    create database shadowsocks\\n    ```\\n* 选择数据库\\n    ```\\n    use shadowsocks\\n    ```\\n* 导入下载的manyuser的/shadowsocks/shadowsocks/下的shadowsocks.sql脚本：\\n    ```\\n    source /shadowsocks/shadowsocks/shadowsocks.sql\\n    ```\\n    脚本会自动在数据库中建立一个user表。\\n    \\n* 查看脚本写入的内容：\\n    ```\\n    show tables\\n    ```\\n* 查看表内容：\\n    ```\\n    select * from user\\n    ```\\n    其中：\\n    \\n> passwd: server pass\\n> port: server port\\n> t: last keepalive time\\n> u: upload transfer\\n> d: download transer\\n> transfer_enable: if u + d > transfer_enable this server will be stop (db_transfer.py del_server_out_of_bound_safe)\\n\\n\\n* 添加内容：\\n    ```\\n    insert into user() values()\\n    ```\\n* 修改内容\\n    ```\\n    update 表名称 set 列名称=新值 where 更新条件;\\n    ```\\n* 新建一个数据库用户以方便shadowsocks程序管理数据库：\\n    ```\\n    create user ssuser@localhost identified by 'passwd'\\n    ```\\n* 授权：\\n    ```\\n    grant all on shadowsocks.* to 'ssuser'@'localhost'\\n    ```\\n    \\n* 详细的配置方式查阅文章最下方提供的参考资料\\n\\n### 安装其他依赖\\n\\n    yum install m2crypto\\n    pip install cymysql\\n    \\n\\n\\n\\n## 优化shadowsocks性能\\n\\n参考[**xyzardQ的博客**]中的链接，由于设置较繁琐，故自己搭建的服务器并没有使用加速配置。(https://xyzardq.github.io/2017/03/07/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%80%E9%94%AE%E6%90%AD%E5%BB%BAshadowsocks%E5%8F%8A%E4%BC%98%E5%8C%96/)\\n    \\n## 配置shadowsocks文件\\n\\n\\n### config文件配置\\n    \\n    vi Config.py\\n    \\n    #Config Example\\n    MYSQL_HOST = 'localhost'\\n    MYSQL_PORT = 3306\\n    MYSQL_USER = 'ssuser'\\n    MYSQL_PASS = 'passwd'（密码改成上面数据库用户的密码）\\n    MYSQL_DB = 'shadowsocks'\\n    MANAGE_PASS = 'ss233333333'\\n    #if you want manage in other server you should set this value to global ip\\n    MANAGE_BIND_IP = '127.0.0.1'\\n    #make sure this port is idle\\n    MANAGE_PORT = 23333\\n\\n### 防火墙配置\\n\\n不要忘记在系统防火墙中开启需要使用的端口（使用的端口都要开放）：\\n\\n    firewall-cmd --zone=public --add-port=50000/tcp --permanent\\n    firewall-cmd --reload\\n\\n### 启动\\n\\n    python server.py\\n\\n如果没有报错就说明启动正常了。\\n后台运行且注销也不停止：\\n\\n    nohup python server.py > /dev/null 2>&1 &\\n\\n运行时遇到错误，使用一下简单形式代替\\n\\n    nohup python server.py &\\n\\n开机启动：（无法正常执行）\\n开机启动mariadb:\\n\\n    systemctl enable mariadb\\n\\n开机启动many-user:\\n\\n    cd /shadowsocks/shadowsocks/ \\n    #server.py配置文件在这个目录中，调用要先进入这个目录\\n    python server.py --fast-open\\n    \\n\\n\\n## 配置windows和android客户端\\n\\n\\n### 配置windows客户端\\n\\n\\n\\n本地配置的服务器IP填VPS的IP，端口和密码填VPS上服务开启后显示的端口和密码（也就是数据库表中的port和passwd），加密方式选*rc4-md5*。即可正常使用。\\n\\n从[**这里**](https://github.com/shadowsocks/shadowsocks-windows/releases)下载shadowsocks for windows客户端的最新版本。\\n\\n\\n\\n### 配置 Shadowsocks Android 客户端（Android）\\n\\n\\n\\n在各大应用商店搜索“Shadowsocks”或者“影梭”，安装后启动 App。按照 sslocal.json 配置文件相应项目填写配置后，启动软件即可实现 Android 手机翻墙。\\n\\nOS X 用户与 Windows 用户的设置大同小异；iOS 用户可以到 App Store 搜索 Shadowsocks。\\n\\nShadowsocks 官网下载页面:\\n\\nhttps://shadowsocks.org/en/download/clients.html\\n\\n\\n# 参考资料：\\n\\n## shadowsocks安装和配置相关资料\\n\\n[《CentOS下shadowsocks-libev一键安装脚本》](https://teddysun.com/357.html)\\n[《Vultr手动搭建shadowsocks, ipsec/StrongSwan及优化（附ipsec/ikev1服务器无响应的解决）》](http://blog.csdn.net/yanzi1225627/article/details/50960669)\\n[《Centos7中使用shadowsocks建立多用户并控制流量全记录》](https://sikaixing.com/2016/03/06/ss_manyuser/)\\n[《服务器一键搭建shadowsocks及优化》](https://xyzardq.github.io/2017/03/07/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%80%E9%94%AE%E6%90%AD%E5%BB%BAshadowsocks%E5%8F%8A%E4%BC%98%E5%8C%96/)\\n[《使用 Shadowsocks 自建翻墙服务器，实现全平台 100% 翻墙无障碍》](https://www.loyalsoldier.me/fuck-the-gfw-with-my-own-shadowsocks-server/)\\n[《在CentOS 6.6上安装ShadowSocks服务端》](http://qing0991.blog.51cto.com/1640542/1649922)\\n\\n\\n## Mysql相关参考\\n[《RHEL 及 CentOS 7 安裝 Apache, MariaDB, PHP(LAMP)》](https://www.phpini.com/linux/redhat-centos-7-setup-apache-mariadb-php)\\n[《21分钟 MySQL 入门教程》](http://www.cnblogs.com/mr-wid/archive/2013/05/09/3068229.html)\\n[《mysql导入sql脚本》](http://www.cnblogs.com/Dot-Boy/archive/2008/08/04/1260185.html)\\n[《mysql 创建用户与授权、修改密码》](http://www.111cn.net/database/mysql/46288.htm)\"}]],\"sections\":[[10,0]]}","page":false,"plaintext":"总是使用买的shadowsocks服务器，价格较贵，且不甚稳定，因此决定自己搭建服务器，过程中遇到许多问题，为了以后维护的方便，在此将过程中遇到的问题与解决方法以及参考资料等进行简单的记录。\n\n操作步骤\n1.购买云服务器\n2.连接云服务器\n3.安装shadowsocks\n4.优化shadowsocks性能\n5.配置shadowsocks文件\n6.启动并永久运行shadowsocks\n7.配置windows和android客户端\n\n分步介绍\n购买服务器\n推荐使用美国 VPS 提供商Vultr [http://https://www.vultr.com/]。价格实惠，最低只需每个月 5 美元，支持 PayPal\n支付（国内银行储蓄卡可充值）。\n点击推广链接注册可以享受一定优惠：Vultr优惠 [http://https://www.vultr.com/?ref=7219583]\n服务器配置推荐：内存 ≥512M，\n硬盘 20G，\nCPU 1核，\n流量 500G（单人用）。\n服务器位置尽量选距离自己比较近的：美国西海岸的城市或者日本和新加坡等国家的机房。\n\n\n连接云服务器\n使用ssh方式连接购买并安装好的云服务器，使用的软件不限，Xshell、putty等等ssh连接工具均可。Linux系统下，一般会自带ssh工具，打开终端运行ssh\nroot@xx.xx.xx.xx，然后输入密码即可，\"xx.xx.xx.xx\"部分换成云服务器的地址。\n初始密码在登陆云服务器网站后寻找，首次登陆云服务器后，使用passwd指令更改用户密码。\n\n安装shadowsocks\nshadowsocks有几种不同版本，shadowsocks Python、shadowsocks libev、shadowsocks\ngo还有shadowsocksR。\n选择其中一个版本进行安装，安装方法参考[xyzardQ的博客]，写的比较全面。(\nhttps://xyzardq.github.io/2017/03/07/服务器一键搭建shadowsocks及优化/\n[https://xyzardq.github.io/2017/03/07/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%80%E9%94%AE%E6%90%AD%E5%BB%BAshadowsocks%E5%8F%8A%E4%BC%98%E5%8C%96/]\n)。\n第一次搭建，使用了python版本，但是运行过程中发现速度比较不稳定，因此放弃这一版本，然后按照秋水逸冰的博客\n[https://teddysun.com/357.html]搭建了libev版本的shadowsocks。\n之后由于考虑到实验室共用一个服务器，因此将同一个端口、用户名以及密码共享给了多台电脑，但是使用过程中服务器崩溃，即便是在设置多个端口和相应密码之后，仍然存在这个问题。\n下面是配置多用户模式时，修改配置文件的参照：\n\n[root@localhost ~]# cat  /etc/shadowsocks.json\n{\n    \"server\":\"145.78.20.216\",\n    \"port_password\":{\n        \"9000\":\"MyPass1\",\n        \"9001\":\"MyPass2\",\n        \"9002\":\"MyPass3\"\n    },\n    \"local_address\":\"127.0.0.1\",\n    \"local_port\":1080,\n    \"timeout\":300,\n    \"method\":\"rc4-md5\"\n}\n\n\n因此查阅资料后，得出结论是此版本只是个人版本，对于多个用户使用支持不好，因此放弃此版本。\n最终本次搭建选择按照司开星的博客 [https://sikaixing.com/2016/03/06/ss_manyuser/]\n中介绍的方法进行多用户版本的搭建。\n\n下载多用户版本manyuser\nshadowsocks manyuser是一个shadowsocks多用户修改版。官方地址为：\nhttps://github.com/mengskysama/shadowsocks/tree/manyuser\n\n下载：\ngit clone -b manyuser https://github.com/mengskysama/shadowsocks.git\n会在当前目录下载manyuser。\n解压出来为/shadowsocks/shadowsocks（cd shadowsocks/shadowsocks）\n\n安装使用Mysql\nmanyuser使用Mysql存储数据。故需要先安装mysql，centos7中默认为mariaDB（myspl修改版）\n\nyum install mariadb-server mariadb\n\n\n * 启动及关闭：\n   \n   systemctl start mariadb\n   systemctl enable mariadb\n   \n   \n   \n * 修改密码：\n   \n   /usr/bin/mysql_secure_installation\n   \n   \n   \n * 登录：\n   \n   mysql -u root -p\n   \n   \n   \n * 根据manyuser官方指南需要创建一个shadowsocks数据库：\n   \n   create database shadowsocks\n   \n   \n   \n * 选择数据库\n   \n   use shadowsocks\n   \n   \n   \n * 导入下载的manyuser的/shadowsocks/shadowsocks/下的shadowsocks.sql脚本：\n   \n   source /shadowsocks/shadowsocks/shadowsocks.sql\n   \n   \n   脚本会自动在数据库中建立一个user表。\n   \n   \n * 查看脚本写入的内容：\n   \n   show tables\n   \n   \n   \n * 查看表内容：\n   \n   select * from user\n   \n   \n   其中：\n   \n   \n\npasswd: server pass\nport: server port\nt: last keepalive time\nu: upload transfer\nd: download transer\ntransfer_enable: if u + d > transfer_enable this server will be stop\n(db_transfer.py del_server_out_of_bound_safe)\n\n * 添加内容：\n   \n   insert into user() values()\n   \n   \n   \n * 修改内容\n   \n   update 表名称 set 列名称=新值 where 更新条件;\n   \n   \n   \n * 新建一个数据库用户以方便shadowsocks程序管理数据库：\n   \n   create user ssuser@localhost identified by 'passwd'\n   \n   \n   \n * 授权：\n   \n   grant all on shadowsocks.* to 'ssuser'@'localhost'\n   \n   \n   \n * 详细的配置方式查阅文章最下方提供的参考资料\n   \n   \n\n安装其他依赖\nyum install m2crypto\npip install cymysql\n\n\n优化shadowsocks性能\n参考[xyzardQ的博客]中的链接，由于设置较繁琐，故自己搭建的服务器并没有使用加速配置。(\nhttps://xyzardq.github.io/2017/03/07/服务器一键搭建shadowsocks及优化/\n[https://xyzardq.github.io/2017/03/07/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%80%E9%94%AE%E6%90%AD%E5%BB%BAshadowsocks%E5%8F%8A%E4%BC%98%E5%8C%96/]\n)\n\n配置shadowsocks文件\nconfig文件配置\nvi Config.py\n\n#Config Example\nMYSQL_HOST = 'localhost'\nMYSQL_PORT = 3306\nMYSQL_USER = 'ssuser'\nMYSQL_PASS = 'passwd'（密码改成上面数据库用户的密码）\nMYSQL_DB = 'shadowsocks'\nMANAGE_PASS = 'ss233333333'\n#if you want manage in other server you should set this value to global ip\nMANAGE_BIND_IP = '127.0.0.1'\n#make sure this port is idle\nMANAGE_PORT = 23333\n\n\n防火墙配置\n不要忘记在系统防火墙中开启需要使用的端口（使用的端口都要开放）：\n\nfirewall-cmd --zone=public --add-port=50000/tcp --permanent\nfirewall-cmd --reload\n\n\n启动\npython server.py\n\n\n如果没有报错就说明启动正常了。\n后台运行且注销也不停止：\n\nnohup python server.py > /dev/null 2>&1 &\n\n\n运行时遇到错误，使用一下简单形式代替\n\nnohup python server.py &\n\n\n开机启动：（无法正常执行）\n开机启动mariadb:\n\nsystemctl enable mariadb\n\n\n开机启动many-user:\n\ncd /shadowsocks/shadowsocks/ \n#server.py配置文件在这个目录中，调用要先进入这个目录\npython server.py --fast-open\n\n\n配置windows和android客户端\n配置windows客户端\n本地配置的服务器IP填VPS的IP，端口和密码填VPS上服务开启后显示的端口和密码（也就是数据库表中的port和passwd），加密方式选rc4-md5\n。即可正常使用。\n\n从这里 [https://github.com/shadowsocks/shadowsocks-windows/releases]下载shadowsocks\nfor windows客户端的最新版本。\n\n配置 Shadowsocks Android 客户端（Android）\n在各大应用商店搜索“Shadowsocks”或者“影梭”，安装后启动 App。按照 sslocal.json 配置文件相应项目填写配置后，启动软件即可实现\nAndroid 手机翻墙。\n\nOS X 用户与 Windows 用户的设置大同小异；iOS 用户可以到 App Store 搜索 Shadowsocks。\n\nShadowsocks 官网下载页面:\n\nhttps://shadowsocks.org/en/download/clients.html\n\n参考资料：\nshadowsocks安装和配置相关资料\n《CentOS下shadowsocks-libev一键安装脚本》 [https://teddysun.com/357.html]\n《Vultr手动搭建shadowsocks, ipsec/StrongSwan及优化（附ipsec/ikev1服务器无响应的解决）》\n[http://blog.csdn.net/yanzi1225627/article/details/50960669]\n《Centos7中使用shadowsocks建立多用户并控制流量全记录》\n[https://sikaixing.com/2016/03/06/ss_manyuser/]\n《服务器一键搭建shadowsocks及优化》\n[https://xyzardq.github.io/2017/03/07/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%80%E9%94%AE%E6%90%AD%E5%BB%BAshadowsocks%E5%8F%8A%E4%BC%98%E5%8C%96/]\n《使用 Shadowsocks 自建翻墙服务器，实现全平台 100% 翻墙无障碍》\n[https://www.loyalsoldier.me/fuck-the-gfw-with-my-own-shadowsocks-server/]\n《在CentOS 6.6上安装ShadowSocks服务端》 [http://qing0991.blog.51cto.com/1640542/1649922]\n\nMysql相关参考\n《RHEL 及 CentOS 7 安裝 Apache, MariaDB, PHP(LAMP)》\n[https://www.phpini.com/linux/redhat-centos-7-setup-apache-mariadb-php]\n《21分钟 MySQL 入门教程》\n[http://www.cnblogs.com/mr-wid/archive/2013/05/09/3068229.html]\n《mysql导入sql脚本》 [http://www.cnblogs.com/Dot-Boy/archive/2008/08/04/1260185.html]\n《mysql 创建用户与授权、修改密码》 [http://www.111cn.net/database/mysql/46288.htm]","published_at":"2017-09-28T12:43:02.000Z","slug":"da-jian-shadowsocksfu-wu-qi","status":"published","title":"搭建Shadowsocks服务器","updated_at":"2017-09-28T13:13:57.000Z","updated_by":"1","tags":{"0":{"id":"59ccb425a744810195a3dbff","name":"网络","slug":"wang-luo","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T08:34:45.000Z","updated_at":"2017-09-28T08:34:45.000Z","created_by":"1","updated_by":"1"},"1":{"id":"59ccb425a744810195a3dc01","name":"技术","slug":"ji-zhu","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T08:34:45.000Z","updated_at":"2017-09-28T08:34:45.000Z","created_by":"1","updated_by":"1"}},"author_id":"1"}}},"query":{"include":"tags"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"http://47.95.197.107","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/*","content-type":"application/json; charset=utf-8","etag":"W/\"3133-sDMkR+UT6tGmqlKiwj/b6q+aOAs\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"74ms"},"msg":"","time":"2017-09-29T02:31:35.231Z","v":0}
{"name":"Log","hostname":"RP","pid":405,"level":30,"req":{"meta":{"requestId":"51751aa0-a4be-11e7-ad29-7b3837c864ae","userId":"1"},"url":"/posts/59ccb3a1a744810195a3dbfe/?include=tags","method":"PUT","originalUrl":"/ghost/api/v0.1/posts/59ccb3a1a744810195a3dbfe/?include=tags","params":{"id":"59ccb3a1a744810195a3dbfe"},"headers":{"x-forwarded-for":"219.239.227.234","x-real-ip":"219.239.227.234","host":"47.95.197.107","x-forwarded-proto":"http","connection":"close","content-length":"19706","origin":"http://47.95.197.107","app-pragma":"no-cache","content-type":"application/json; charset=UTF-8","accept":"application/json, text/javascript, */*; q=0.01","x-requested-with":"XMLHttpRequest","x-ghost-version":"1.9","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ghost-desktop/1.4.0 Chrome/58.0.3029.110 Electron/1.7.6 Safari/537.36","referer":"http://47.95.197.107/ghost/","accept-encoding":"gzip, deflate","accept-language":"zh-CN"},"body":{"posts":{"0":{"id":"59ccb3a1a744810195a3dbfe","created_at":"2017-09-28T08:32:33.000Z","created_by":"1","featured":false,"feature_image":"/content/images/2017/09/---.jpg","codeinjection_foot":"","codeinjection_head":"","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"总是使用买的shadowsocks服务器，价格较贵，且不甚稳定，因此决定自己搭建服务器，过程中遇到许多问题，为了以后维护的方便，在此将过程中遇到的问题与解决方法以及参考资料等进行简单的记录。\\n# 操作步骤\\n1.购买云服务器\\n2.连接云服务器\\n3.安装shadowsocks\\n4.优化shadowsocks性能\\n5.配置shadowsocks文件\\n6.启动并永久运行shadowsocks\\n7.配置windows和android客户端\\n# 分步介绍\\n## 购买服务器\\n推荐使用美国 VPS 提供商[**Vultr**](http://https://www.vultr.com/)。价格实惠，最低只需每个月 5 美元，支持 PayPal 支付（国内银行储蓄卡可充值）。\\n点击推广链接注册可以享受一定优惠：[**Vultr优惠**](http://https://www.vultr.com/?ref=7219583)\\n服务器配置推荐：内存 ≥512M，\\n             硬盘 20G，\\n             CPU 1核，\\n             流量 500G（单人用）。\\n服务器位置尽量选距离自己比较近的：美国西海岸的城市或者日本和新加坡等国家的机房。\\n![vultr](/content/images/2017/09/vultr.jpg)\\n## 连接云服务器\\n使用ssh方式连接购买并安装好的云服务器，使用的软件不限，Xshell、putty等等ssh连接工具均可。Linux系统下，一般会自带ssh工具，打开终端运行ssh root@xx.xx.xx.xx，然后输入密码即可，\\\"xx.xx.xx.xx\\\"部分换成云服务器的地址。\\n初始密码在登陆云服务器网站后寻找，首次登陆云服务器后，使用passwd指令更改用户密码。\\n## 安装shadowsocks\\nshadowsocks有几种不同版本，shadowsocks Python、shadowsocks libev、shadowsocks go还有shadowsocksR。\\n选择其中一个版本进行安装，安装方法参考[**xyzardQ的博客**]，写的比较全面。(https://xyzardq.github.io/2017/03/07/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%80%E9%94%AE%E6%90%AD%E5%BB%BAshadowsocks%E5%8F%8A%E4%BC%98%E5%8C%96/)。\\n第一次搭建，使用了python版本，但是运行过程中发现速度比较不稳定，因此放弃这一版本，然后按照[**秋水逸冰的博客**](https://teddysun.com/357.html)搭建了libev版本的shadowsocks。\\n之后由于考虑到实验室共用一个服务器，因此将同一个端口、用户名以及密码共享给了多台电脑，但是使用过程中服务器崩溃，即便是在设置多个端口和相应密码之后，仍然存在这个问题。\\n下面是配置多用户模式时，修改配置文件的参照：\\n```\\t\\n[root@localhost ~]# cat  /etc/shadowsocks.json\\n{\\n    \\\"server\\\":\\\"145.78.20.216\\\",\\n    \\\"port_password\\\":{\\n        \\\"9000\\\":\\\"MyPass1\\\",\\n        \\\"9001\\\":\\\"MyPass2\\\",\\n        \\\"9002\\\":\\\"MyPass3\\\"\\n    },\\n    \\\"local_address\\\":\\\"127.0.0.1\\\",\\n    \\\"local_port\\\":1080,\\n    \\\"timeout\\\":300,\\n    \\\"method\\\":\\\"rc4-md5\\\"\\n}\\n```\\n因此查阅资料后，得出结论是此版本只是个人版本，对于多个用户使用支持不好，因此放弃此版本。\\n最终本次搭建选择按照[**司开星的博客**](https://sikaixing.com/2016/03/06/ss_manyuser/)中介绍的方法进行多用户版本的搭建。\\n### 下载多用户版本manyuser\\nshadowsocks manyuser是一个shadowsocks多用户修改版。官方地址为：https://github.com/mengskysama/shadowsocks/tree/manyuser\\n\\n下载：\\n    ```\\n    git clone -b manyuser https://github.com/mengskysama/shadowsocks.git\\n    ```\\n会在当前目录下载manyuser。\\n解压出来为/shadowsocks/shadowsocks（cd shadowsocks/shadowsocks）\\n\\n### 安装使用Mysql\\nmanyuser使用Mysql存储数据。故需要先安装mysql，centos7中默认为mariaDB（myspl修改版）\\n\\n    yum install mariadb-server mariadb\\n\\n\\n* 启动及关闭：\\n    ```\\n    systemctl start mariadb\\n    systemctl enable mariadb\\n    ```\\n* 修改密码：\\n    ```\\n    /usr/bin/mysql_secure_installation\\n    ```\\n* 登录：\\n    ```\\n    mysql -u root -p\\n    ```\\n* 根据manyuser官方指南需要创建一个shadowsocks数据库：\\n    ```\\n    create database shadowsocks\\n    ```\\n* 选择数据库\\n    ```\\n    use shadowsocks\\n    ```\\n* 导入下载的manyuser的/shadowsocks/shadowsocks/下的shadowsocks.sql脚本：\\n    ```\\n    source /shadowsocks/shadowsocks/shadowsocks.sql\\n    ```\\n    脚本会自动在数据库中建立一个user表。\\n    \\n* 查看脚本写入的内容：\\n    ```\\n    show tables\\n    ```\\n* 查看表内容：\\n    ```\\n    select * from user\\n    ```\\n    其中：\\n    \\n> passwd: server pass\\n> port: server port\\n> t: last keepalive time\\n> u: upload transfer\\n> d: download transer\\n> transfer_enable: if u + d > transfer_enable this server will be stop (db_transfer.py del_server_out_of_bound_safe)\\n\\n\\n* 添加内容：\\n    ```\\n    insert into user() values()\\n    ```\\n* 修改内容\\n    ```\\n    update 表名称 set 列名称=新值 where 更新条件;\\n    ```\\n* 新建一个数据库用户以方便shadowsocks程序管理数据库：\\n    ```\\n    create user ssuser@localhost identified by 'passwd'\\n    ```\\n* 授权：\\n    ```\\n    grant all on shadowsocks.* to 'ssuser'@'localhost'\\n    ```\\n    \\n* 详细的配置方式查阅文章最下方提供的参考资料\\n\\n### 安装其他依赖\\n\\n    yum install m2crypto\\n    pip install cymysql\\n    \\n\\n\\n\\n## 优化shadowsocks性能\\n\\n参考[**xyzardQ的博客**]中的链接，由于设置较繁琐，故自己搭建的服务器并没有使用加速配置。(https://xyzardq.github.io/2017/03/07/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%80%E9%94%AE%E6%90%AD%E5%BB%BAshadowsocks%E5%8F%8A%E4%BC%98%E5%8C%96/)\\n    \\n## 配置shadowsocks文件\\n\\n\\n### config文件配置\\n    \\n    vi Config.py\\n    \\n    #Config Example\\n    MYSQL_HOST = 'localhost'\\n    MYSQL_PORT = 3306\\n    MYSQL_USER = 'ssuser'\\n    MYSQL_PASS = 'passwd'（密码改成上面数据库用户的密码）\\n    MYSQL_DB = 'shadowsocks'\\n    MANAGE_PASS = 'ss233333333'\\n    #if you want manage in other server you should set this value to global ip\\n    MANAGE_BIND_IP = '127.0.0.1'\\n    #make sure this port is idle\\n    MANAGE_PORT = 23333\\n\\n### 防火墙配置\\n\\n不要忘记在系统防火墙中开启需要使用的端口（使用的端口都要开放）：\\n\\n    firewall-cmd --zone=public --add-port=50000/tcp --permanent\\n    firewall-cmd --reload\\n\\n### 启动\\n\\n    python server.py\\n\\n如果没有报错就说明启动正常了。\\n后台运行且注销也不停止：\\n\\n    nohup python server.py > /dev/null 2>&1 &\\n\\n运行时遇到错误，使用一下简单形式代替\\n\\n    nohup python server.py &\\n\\n开机启动：（无法正常执行）\\n开机启动mariadb:\\n\\n    systemctl enable mariadb\\n\\n开机启动many-user:\\n\\n    cd /shadowsocks/shadowsocks/ \\n    #server.py配置文件在这个目录中，调用要先进入这个目录\\n    python server.py --fast-open\\n    \\n\\n\\n## 配置windows和android客户端\\n\\n\\n### 配置windows客户端\\n\\n\\n\\n本地配置的服务器IP填VPS的IP，端口和密码填VPS上服务开启后显示的端口和密码（也就是数据库表中的port和passwd），加密方式选*rc4-md5*。即可正常使用。\\n\\n从[**这里**](https://github.com/shadowsocks/shadowsocks-windows/releases)下载shadowsocks for windows客户端的最新版本。\\n\\n\\n\\n### 配置 Shadowsocks Android 客户端（Android）\\n\\n\\n\\n在各大应用商店搜索“Shadowsocks”或者“影梭”，安装后启动 App。按照 sslocal.json 配置文件相应项目填写配置后，启动软件即可实现 Android 手机翻墙。\\n\\nOS X 用户与 Windows 用户的设置大同小异；iOS 用户可以到 App Store 搜索 Shadowsocks。\\n\\nShadowsocks 官网下载页面:\\n\\nhttps://shadowsocks.org/en/download/clients.html\\n\\n\\n# 参考资料：\\n\\n## shadowsocks安装和配置相关资料\\n\\n[《CentOS下shadowsocks-libev一键安装脚本》](https://teddysun.com/357.html)\\n[《Vultr手动搭建shadowsocks, ipsec/StrongSwan及优化（附ipsec/ikev1服务器无响应的解决）》](http://blog.csdn.net/yanzi1225627/article/details/50960669)\\n[《Centos7中使用shadowsocks建立多用户并控制流量全记录》](https://sikaixing.com/2016/03/06/ss_manyuser/)\\n[《服务器一键搭建shadowsocks及优化》](https://xyzardq.github.io/2017/03/07/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%80%E9%94%AE%E6%90%AD%E5%BB%BAshadowsocks%E5%8F%8A%E4%BC%98%E5%8C%96/)\\n[《使用 Shadowsocks 自建翻墙服务器，实现全平台 100% 翻墙无障碍》](https://www.loyalsoldier.me/fuck-the-gfw-with-my-own-shadowsocks-server/)\\n[《在CentOS 6.6上安装ShadowSocks服务端》](http://qing0991.blog.51cto.com/1640542/1649922)\\n\\n\\n## Mysql相关参考\\n[《RHEL 及 CentOS 7 安裝 Apache, MariaDB, PHP(LAMP)》](https://www.phpini.com/linux/redhat-centos-7-setup-apache-mariadb-php)\\n[《21分钟 MySQL 入门教程》](http://www.cnblogs.com/mr-wid/archive/2013/05/09/3068229.html)\\n[《mysql导入sql脚本》](http://www.cnblogs.com/Dot-Boy/archive/2008/08/04/1260185.html)\\n[《mysql 创建用户与授权、修改密码》](http://www.111cn.net/database/mysql/46288.htm)\"}]],\"sections\":[[10,0]]}","page":false,"plaintext":"总是使用买的shadowsocks服务器，价格较贵，且不甚稳定，因此决定自己搭建服务器，过程中遇到许多问题，为了以后维护的方便，在此将过程中遇到的问题与解决方法以及参考资料等进行简单的记录。\n\n操作步骤\n1.购买云服务器\n2.连接云服务器\n3.安装shadowsocks\n4.优化shadowsocks性能\n5.配置shadowsocks文件\n6.启动并永久运行shadowsocks\n7.配置windows和android客户端\n\n分步介绍\n购买服务器\n推荐使用美国 VPS 提供商Vultr [http://https://www.vultr.com/]。价格实惠，最低只需每个月 5 美元，支持 PayPal\n支付（国内银行储蓄卡可充值）。\n点击推广链接注册可以享受一定优惠：Vultr优惠 [http://https://www.vultr.com/?ref=7219583]\n服务器配置推荐：内存 ≥512M，\n硬盘 20G，\nCPU 1核，\n流量 500G（单人用）。\n服务器位置尽量选距离自己比较近的：美国西海岸的城市或者日本和新加坡等国家的机房。\n\n\n连接云服务器\n使用ssh方式连接购买并安装好的云服务器，使用的软件不限，Xshell、putty等等ssh连接工具均可。Linux系统下，一般会自带ssh工具，打开终端运行ssh\nroot@xx.xx.xx.xx，然后输入密码即可，\"xx.xx.xx.xx\"部分换成云服务器的地址。\n初始密码在登陆云服务器网站后寻找，首次登陆云服务器后，使用passwd指令更改用户密码。\n\n安装shadowsocks\nshadowsocks有几种不同版本，shadowsocks Python、shadowsocks libev、shadowsocks\ngo还有shadowsocksR。\n选择其中一个版本进行安装，安装方法参考[xyzardQ的博客]，写的比较全面。(\nhttps://xyzardq.github.io/2017/03/07/服务器一键搭建shadowsocks及优化/\n[https://xyzardq.github.io/2017/03/07/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%80%E9%94%AE%E6%90%AD%E5%BB%BAshadowsocks%E5%8F%8A%E4%BC%98%E5%8C%96/]\n)。\n第一次搭建，使用了python版本，但是运行过程中发现速度比较不稳定，因此放弃这一版本，然后按照秋水逸冰的博客\n[https://teddysun.com/357.html]搭建了libev版本的shadowsocks。\n之后由于考虑到实验室共用一个服务器，因此将同一个端口、用户名以及密码共享给了多台电脑，但是使用过程中服务器崩溃，即便是在设置多个端口和相应密码之后，仍然存在这个问题。\n下面是配置多用户模式时，修改配置文件的参照：\n\n[root@localhost ~]# cat  /etc/shadowsocks.json\n{\n    \"server\":\"145.78.20.216\",\n    \"port_password\":{\n        \"9000\":\"MyPass1\",\n        \"9001\":\"MyPass2\",\n        \"9002\":\"MyPass3\"\n    },\n    \"local_address\":\"127.0.0.1\",\n    \"local_port\":1080,\n    \"timeout\":300,\n    \"method\":\"rc4-md5\"\n}\n\n\n因此查阅资料后，得出结论是此版本只是个人版本，对于多个用户使用支持不好，因此放弃此版本。\n最终本次搭建选择按照司开星的博客 [https://sikaixing.com/2016/03/06/ss_manyuser/]\n中介绍的方法进行多用户版本的搭建。\n\n下载多用户版本manyuser\nshadowsocks manyuser是一个shadowsocks多用户修改版。官方地址为：\nhttps://github.com/mengskysama/shadowsocks/tree/manyuser\n\n下载：\ngit clone -b manyuser https://github.com/mengskysama/shadowsocks.git\n会在当前目录下载manyuser。\n解压出来为/shadowsocks/shadowsocks（cd shadowsocks/shadowsocks）\n\n安装使用Mysql\nmanyuser使用Mysql存储数据。故需要先安装mysql，centos7中默认为mariaDB（myspl修改版）\n\nyum install mariadb-server mariadb\n\n\n * 启动及关闭：\n   \n   systemctl start mariadb\n   systemctl enable mariadb\n   \n   \n   \n * 修改密码：\n   \n   /usr/bin/mysql_secure_installation\n   \n   \n   \n * 登录：\n   \n   mysql -u root -p\n   \n   \n   \n * 根据manyuser官方指南需要创建一个shadowsocks数据库：\n   \n   create database shadowsocks\n   \n   \n   \n * 选择数据库\n   \n   use shadowsocks\n   \n   \n   \n * 导入下载的manyuser的/shadowsocks/shadowsocks/下的shadowsocks.sql脚本：\n   \n   source /shadowsocks/shadowsocks/shadowsocks.sql\n   \n   \n   脚本会自动在数据库中建立一个user表。\n   \n   \n * 查看脚本写入的内容：\n   \n   show tables\n   \n   \n   \n * 查看表内容：\n   \n   select * from user\n   \n   \n   其中：\n   \n   \n\npasswd: server pass\nport: server port\nt: last keepalive time\nu: upload transfer\nd: download transer\ntransfer_enable: if u + d > transfer_enable this server will be stop\n(db_transfer.py del_server_out_of_bound_safe)\n\n * 添加内容：\n   \n   insert into user() values()\n   \n   \n   \n * 修改内容\n   \n   update 表名称 set 列名称=新值 where 更新条件;\n   \n   \n   \n * 新建一个数据库用户以方便shadowsocks程序管理数据库：\n   \n   create user ssuser@localhost identified by 'passwd'\n   \n   \n   \n * 授权：\n   \n   grant all on shadowsocks.* to 'ssuser'@'localhost'\n   \n   \n   \n * 详细的配置方式查阅文章最下方提供的参考资料\n   \n   \n\n安装其他依赖\nyum install m2crypto\npip install cymysql\n\n\n优化shadowsocks性能\n参考[xyzardQ的博客]中的链接，由于设置较繁琐，故自己搭建的服务器并没有使用加速配置。(\nhttps://xyzardq.github.io/2017/03/07/服务器一键搭建shadowsocks及优化/\n[https://xyzardq.github.io/2017/03/07/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%80%E9%94%AE%E6%90%AD%E5%BB%BAshadowsocks%E5%8F%8A%E4%BC%98%E5%8C%96/]\n)\n\n配置shadowsocks文件\nconfig文件配置\nvi Config.py\n\n#Config Example\nMYSQL_HOST = 'localhost'\nMYSQL_PORT = 3306\nMYSQL_USER = 'ssuser'\nMYSQL_PASS = 'passwd'（密码改成上面数据库用户的密码）\nMYSQL_DB = 'shadowsocks'\nMANAGE_PASS = 'ss233333333'\n#if you want manage in other server you should set this value to global ip\nMANAGE_BIND_IP = '127.0.0.1'\n#make sure this port is idle\nMANAGE_PORT = 23333\n\n\n防火墙配置\n不要忘记在系统防火墙中开启需要使用的端口（使用的端口都要开放）：\n\nfirewall-cmd --zone=public --add-port=50000/tcp --permanent\nfirewall-cmd --reload\n\n\n启动\npython server.py\n\n\n如果没有报错就说明启动正常了。\n后台运行且注销也不停止：\n\nnohup python server.py > /dev/null 2>&1 &\n\n\n运行时遇到错误，使用一下简单形式代替\n\nnohup python server.py &\n\n\n开机启动：（无法正常执行）\n开机启动mariadb:\n\nsystemctl enable mariadb\n\n\n开机启动many-user:\n\ncd /shadowsocks/shadowsocks/ \n#server.py配置文件在这个目录中，调用要先进入这个目录\npython server.py --fast-open\n\n\n配置windows和android客户端\n配置windows客户端\n本地配置的服务器IP填VPS的IP，端口和密码填VPS上服务开启后显示的端口和密码（也就是数据库表中的port和passwd），加密方式选rc4-md5\n。即可正常使用。\n\n从这里 [https://github.com/shadowsocks/shadowsocks-windows/releases]下载shadowsocks\nfor windows客户端的最新版本。\n\n配置 Shadowsocks Android 客户端（Android）\n在各大应用商店搜索“Shadowsocks”或者“影梭”，安装后启动 App。按照 sslocal.json 配置文件相应项目填写配置后，启动软件即可实现\nAndroid 手机翻墙。\n\nOS X 用户与 Windows 用户的设置大同小异；iOS 用户可以到 App Store 搜索 Shadowsocks。\n\nShadowsocks 官网下载页面:\n\nhttps://shadowsocks.org/en/download/clients.html\n\n参考资料：\nshadowsocks安装和配置相关资料\n《CentOS下shadowsocks-libev一键安装脚本》 [https://teddysun.com/357.html]\n《Vultr手动搭建shadowsocks, ipsec/StrongSwan及优化（附ipsec/ikev1服务器无响应的解决）》\n[http://blog.csdn.net/yanzi1225627/article/details/50960669]\n《Centos7中使用shadowsocks建立多用户并控制流量全记录》\n[https://sikaixing.com/2016/03/06/ss_manyuser/]\n《服务器一键搭建shadowsocks及优化》\n[https://xyzardq.github.io/2017/03/07/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%80%E9%94%AE%E6%90%AD%E5%BB%BAshadowsocks%E5%8F%8A%E4%BC%98%E5%8C%96/]\n《使用 Shadowsocks 自建翻墙服务器，实现全平台 100% 翻墙无障碍》\n[https://www.loyalsoldier.me/fuck-the-gfw-with-my-own-shadowsocks-server/]\n《在CentOS 6.6上安装ShadowSocks服务端》 [http://qing0991.blog.51cto.com/1640542/1649922]\n\nMysql相关参考\n《RHEL 及 CentOS 7 安裝 Apache, MariaDB, PHP(LAMP)》\n[https://www.phpini.com/linux/redhat-centos-7-setup-apache-mariadb-php]\n《21分钟 MySQL 入门教程》\n[http://www.cnblogs.com/mr-wid/archive/2013/05/09/3068229.html]\n《mysql导入sql脚本》 [http://www.cnblogs.com/Dot-Boy/archive/2008/08/04/1260185.html]\n《mysql 创建用户与授权、修改密码》 [http://www.111cn.net/database/mysql/46288.htm]","published_at":"2017-09-28T12:43:02.000Z","slug":"da-jian-shadowsocksfu-wu-qi","status":"published","title":"搭建Shadowsocks服务器","updated_at":"2017-09-29T02:31:35.000Z","updated_by":"1","tags":{"0":{"id":"59ccb425a744810195a3dbff","name":"网络","slug":"wang-luo","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T08:34:45.000Z","updated_at":"2017-09-28T08:34:45.000Z","created_by":"1","updated_by":"1"},"1":{"id":"59ccb425a744810195a3dc01","name":"技术","slug":"ji-zhu","description":null,"parent":null,"meta_title":null,"meta_description":null,"feature_image":null,"visibility":"public","created_at":"2017-09-28T08:34:45.000Z","updated_at":"2017-09-28T08:34:45.000Z","created_by":"1","updated_by":"1"}},"author_id":"1"}}},"query":{"include":"tags"}},"res":{"_headers":{"x-powered-by":"Express","cache-control":"no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0","access-control-allow-origin":"http://47.95.197.107","vary":"Origin, Accept-Encoding","x-cache-invalidate":"/*","content-type":"application/json; charset=utf-8","etag":"W/\"3133-FrUL7NW50a+wytztBSfqt8X8R/0\"","content-encoding":"gzip"},"statusCode":200,"responseTime":"40ms"},"msg":"","time":"2017-09-29T02:31:37.590Z","v":0}
